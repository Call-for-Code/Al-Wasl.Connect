{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@ng-bootstrap/ng-bootstrap/util/util.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion-config.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.module.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert-config.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.module.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/label.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/checkbox.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/radio.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/buttons.module.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel-config.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.module.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.module.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/util/key.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keyboard-service.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.ts","ng://@ng-bootstrap/ng-bootstrap/util/autoclose.ts","ng://@ng-bootstrap/ng-bootstrap/util/focus-trap.ts","ng://@ng-bootstrap/ng-bootstrap/util/positioning.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input-config.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/jalali/jalali.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/jalali/ngb-calendar-persian.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/ngb-calendar-hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/datepicker-i18n-hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-utc-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-config.ts","ng://@ng-bootstrap/ng-bootstrap/util/popup.ts","ng://@ng-bootstrap/ng-bootstrap/util/scrollbar.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-ref.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-window.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-stack.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.module.ts","ng://@ng-bootstrap/ng-bootstrap/nav/nav-config.ts","ng://@ng-bootstrap/ng-bootstrap/nav/nav.ts","ng://@ng-bootstrap/ng-bootstrap/nav/nav-outlet.ts","ng://@ng-bootstrap/ng-bootstrap/nav/nav.module.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination-config.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.module.ts","ng://@ng-bootstrap/ng-bootstrap/util/triggers.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover-config.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.module.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating-config.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.module.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset-config.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.module.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker-i18n.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/toast/toast-config.ts","ng://@ng-bootstrap/ng-bootstrap/toast/toast.ts","ng://@ng-bootstrap/ng-bootstrap/toast/toast.module.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/highlight.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.ts","ng://@ng-bootstrap/ng-bootstrap/util/accessibility/live.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.ts","ng://@ng-bootstrap/ng-bootstrap/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","toInteger","parseInt","toString","getValueInRange","max","min","Math","isString","isNumber","isNaN","isInteger","isFinite","floor","isDefined","padNumber","slice","hasClassName","element","className","split","indexOf","Element","closest","matches","msMatchesSelector","webkitMatchesSelector","el","document","documentElement","contains","parentElement","parentNode","nodeType","NgbSlideEventDirection","NgbSlideEventSource","NgbAccordionConfig","closeOthers","Injectable","providedIn","nextId","NgbPanelHeader","templateRef","TemplateRef","Directive","selector","NgbPanelTitle","NgbPanelContent","NgbPanel","disabled","id","isOpen","ngAfterContentChecked","titleTpl","titleTpls","first","headerTpl","headerTpls","contentTpl","contentTpls","Input","ContentChildren","descendants","NgbAccordion","config","activeIds","destroyOnHide","panelChange","EventEmitter","type","closeOtherPanels","isExpanded","panelId","expand","_changeOpenState","_findPanelById","expandAll","_this","panels","forEach","panel","collapse","collapseAll","toggle","_closeOthers","_updateActiveIds","nextState","defaultPrevented_1","emit","preventDefault","find","filter","map","Output","Component","exportAs","encapsulation","ViewEncapsulation","None","host","class","role","[attr.aria-multiselectable]","template","NgbPanelToggle","accordion","Optional","Host","[disabled]","[class.collapsed]","[attr.aria-expanded]","[attr.aria-controls]","(click)","NGB_ACCORDION_DIRECTIVES","NgbAccordionModule","NgModule","declarations","exports","imports","CommonModule","NgbAlertConfig","dismissible","NgbAlert","_renderer","_element","close","closeHandler","ngOnChanges","changes","typeChange","firstChange","removeClass","nativeElement","previousValue","addClass","currentValue","ngOnInit","Renderer2","ElementRef","changeDetection","ChangeDetectionStrategy","OnPush","[class.alert-dismissible]","NgbAlertModule","entryComponents","NgbButtonLabel","[class.btn]","[class.active]","[class.disabled]","[class.focus]","NGB_CHECKBOX_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NgbCheckBox","multi","_label","_cd","valueChecked","valueUnChecked","onChange","_","onTouched","isFocused","focused","onInputChange","$event","modelToPropagate","checked","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","active","markForCheck","ChangeDetectorRef","[checked]","(change)","(focus)","(blur)","providers","NGB_RADIO_VALUE_ACCESSOR","NgbRadioGroup","_radios","Set","_value","name","_disabled","onRadioChange","radio","onRadioValueUpdate","_updateRadiosValue","register","add","_updateRadiosDisabled","unregister","delete","updateValue","updateDisabled","NgbRadio","_group","stringValue","setProperty","_checked","ngOnDestroy","[name]","NGB_BUTTON_DIRECTIVES","NgbButtonsModule","NgbCarouselConfig","interval","wrap","keyboard","pauseOnHover","showNavigationArrows","showNavigationIndicators","NgbSlide","tplRef","NgbCarousel","_platformId","_ngZone","_destroy$","Subject","_interval$","BehaviorSubject","_mouseHover$","_pauseOnHover$","_pause$","_wrap$","slide","mouseEnter","mouseLeave","ngAfterContentInit","isPlatformBrowser","runOutsideAngular","hasNextSlide$","combineLatest","pipe","slideEvent","current","startWith","activeId","slides","_a","_b","currentSlideId","slideArr","toArray","currentSlideIdx","_getSlideIdxById","distinctUntilChanged","pause","mouseHover","hasNextSlide","switchMap","timer","NEVER","takeUntil","subscribe","run","TIMER","activeSlide","_getSlideById","select","slideId","source","_cycleToSelected","_getSlideEventDirection","prev","_getPrevSlide","RIGHT","_getNextSlide","LEFT","cycle","slideIdx","direction","selectedSlide","paused","currentActiveSlideId","nextActiveSlideId","Inject","args","PLATFORM_ID","NgZone","HostListener","[style.display]","tabIndex","(keydown.arrowLeft)","(keydown.arrowRight)","NGB_CAROUSEL_DIRECTIVES","NgbCarouselModule","NgbCollapse","collapsed","[class.collapse]","[class.show]","NgbCollapseModule","NgbDate","year","month","day","from","date","equals","other","before","after","fromJSDate","jsDate","getFullYear","getMonth","getDate","toJSDate","Date","getTime","setFullYear","NGB_DATEPICKER_CALENDAR_FACTORY","NgbCalendarGregorian","NgbCalendar","useFactory","_super","getDaysPerWeek","getMonths","getWeeksPerMonth","getNext","period","number","checkMonth","expectedMonth","setMonth","setDate","getPrev","getWeekday","getDay","getWeekNumber","week","firstDayOfWeek","time","round","getToday","isValid","isChangedDate","dateComparator","isChangedMonth","checkDateInRange","minDate","maxDate","isDateSelectable","state","markDisabled","buildMonths","calendar","i18n","force","displayMonths","months","monthsToReuse","splice","firstDate","reusedIndex","findIndex","dayTemplateData","outsideDays","calendarToday","lastDate","weeks","weekdays","daysPerWeek","firstMonthDate","dayOfWeek","getFirstViewDate","weekObject","days","newDate","nextDate","ariaLabel","getDayAriaLabel","today","contextUserData","undefined","dayObject","context","$implicit","data","currentMonth","currentYear","selected","tabindex","hidden","buildMonth","shift","NGB_DATEPICKER_18N_FACTORY","locale","NgbDatepickerI18nDefault","NavigationEvent","NgbDatepickerI18n","getDayNumerals","getWeekNumerals","weekNumber","getYearNumerals","deps","LOCALE_ID","_locale","weekdaysStartingOnSunday","getLocaleDayNames","FormStyle","Standalone","TranslationWidth","Short","_weekdaysShort","index","_monthsShort","getLocaleMonthNames","Abbreviated","_monthsFull","Wide","getWeekdayShortName","weekday","getMonthShortName","getMonthFullName","formatDate","NgbDatepickerService","_calendar","_i18n","_VALIDATORS","_state","focusVisible","toValidDate","navigation","_model$","_dateSelect$","prevDisabled","nextDisabled","selectBoxes","years","selectedDate","model","set","options","patch","keys","reduce","obj","part","_nextState","focus","focusDate","focusSelect","emitEvent","open","defaultValue","ngbDate","struct","_c","Error","newState","_updateState","_patchContexts","prevDate","startDate","checkMinBeforeMax","forceRebuild","yearChanged","monthChanged","start","numbers","generateSelectBoxYears","generateSelectBoxMonths","nextMonthDisabled","NgbDatepickerConfig","showWeekdays","showWeekNumbers","NGB_DATEPICKER_DATE_ADAPTER_FACTORY","NgbDateStructAdapter","Key","NgbDateAdapter","fromModel","toModel","NGB_DATEPICKER_VALUE_ACCESSOR","NgbDatepicker","NgbDatepickerContent","_service","cd","_elementRef","_ngbDateAdapter","_destroyed$","_publicState","navigate","dateSelect","input","dateSelect$","model$","oldDate","focusedDate","viewModel","navigationPrevented","newSelectedDate","newFocusedDate","oldFocusedDate","_controlValue","onStable","asObservable","take","elementToFocus","querySelector","navigateTo","ngAfterViewInit","focusIns$","fromEvent","_contentEl","focusOuts$","merge","relatedTarget","inputs_1","dayTemplate","_defaultDayTemplate","inputs","onDateSelect","onNavigateDateSelect","onNavigateEvent","event","PREV","NEXT","ViewChild","static","ContentChild","NgbDatepickerKeyboardService","processKey","datepicker","which","PageUp","shiftKey","PageDown","End","Home","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Enter","Space","stopPropagation","NgbDatepickerMonth","_keyboardService","onKeyDown","doSelect","(keydown)","NgbDatepickerNavigation","onClickPrev","currentTarget","onClickNext","isContainedIn","array","some","item","matchesSelectorIfAny","isMobile","navigator","userAgent","test","maxTouchPoints","wrapAsyncForMobile","setTimeout","ngbAutoClose","zone","closed$","insideElements","ignoreElements","insideSelector","escapes$","Escape","tap","mouseDowns$","button","closeableClicks$","withLatestFrom","delay","race","FOCUSABLE_ELEMENTS_SELECTOR","join","getFocusableBoundaryElements","list","querySelectorAll","ngbFocusTrap","stopFocusTrap$","refocusOnClick","lastFocusedElement$","Tab","tabEvent","focusedElement","last","arr","lastFocusedElement","Positioning","getAllStyles","window","getComputedStyle","getStyle","prop","isStaticPositioned","offsetParent","offsetParentEl","position","elPosition","parentOffset","width","height","top","bottom","left","right","getBoundingClientRect","offset","clientTop","clientLeft","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","positionElements","hostElement","targetElement","placement","appendToBody","placementPrimary","placementSecondary","hostElPosition","targetElStyles","marginTop","parseFloat","marginBottom","marginLeft","marginRight","topPosition","leftPosition","style","transform","targetElBCR","html","windowHeight","innerHeight","clientHeight","windowWidth","innerWidth","clientWidth","placementSeparator","positionService","baseClass","placementVals","isArray","allowedPlacements","classList","addClassesToTarget","targetPlacement","primary","secondary","classes","classname","placementToRemove","remove","hasAuto","val","search","testPlacement","isInViewport","placementVals_1","placementVals_1_1","addedClasses","NGB_DATEPICKER_PARSER_FORMATTER_FACTORY","NgbDateISOParserFormatter","NgbDateParserFormatter","parse","dateParts","trim","format","NgbInputDatepickerConfig","autoClose","restoreFocus","NgbInputDatepicker","NGB_DATEPICKER_VALIDATOR","NG_VALIDATORS","_parserFormatter","_elRef","_vcRef","_cfr","_dateAdapter","_document","_changeDetector","_cRef","_elWithFocus","closed","_onChange","_onTouched","_validatorChange","_zoneSubscription","_updatePopupPosition","instance","registerOnValidatorChange","validate","_fromDateStruct","actual","invalid","_model","_writeModelValue","manualDateChange","updateView","inputValueChanged","_inputValue","cf","resolveComponentFactory","createComponent","_applyPopupStyling","location","_applyDatepickerInputs","_subscribeForDatepickerOutputs","changeDetectorRef","detectChanges","container","appendChild","activeElement","hostView","body","onBlur","onFocus","unsubscribe","datepickerInstance","optionName","navigateEvent","positionTarget","HTMLElement","ViewContainerRef","ComponentFactoryResolver","DOCUMENT","(input)","NgbDatepickerDayView","isMuted","[class.bg-primary]","[class.text-white]","[class.text-muted]","[class.outside]","NgbDatepickerNavigationSelect","_month","_year","changeMonth","changeYear","ngAfterViewChecked","monthSelect","yearSelect","read","NgbCalendarHijri","_setYear","_setMonth","_setDay","toGregorian","MuhDate","fromGregorian","mDays","getDaysPerMonth","isGregorianLeapYear","gDate","mod","a","NgbCalendarIslamicCivil","gYear","gMonth","gDay","julianDay","GREGORIAN_EPOCH","hYear","hMonth","ceil","hDay","getIslamicMonthStart","hDate","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","yearday","leapadj","tjd2","GREGORIAN_FIRST_DATE","GREGORIAN_LAST_DATE","ONE_DAY","MONTH_LENGTH","NgbCalendarIslamicUmalqura","date1","date2","time1","time2","diff","daysDiff","UTC","abs","j","numOfDays","dayDiff","y","jalaliDate","jYear","jMonth","jDay","julianToGregorian","gregorianToJulian","jalCal","gy","march","div","setHours","gdate","julianDayNumber","jalaliDay","jalaliMonth","numberOfDays","jalaliYear","gregorianDay","leap","julianToJalali","setJalaliMonth","trunc","jump","breaks","breaksLength","leapJ","jp","jm","gm","gd","NgbCalendarPersian","yearValue","setJalaliYear","setJalaliDay","PARTS_PER_HOUR","PARTS_PER_DAY","PARTS_FRACTIONAL_MONTH","PARTS_PER_MONTH","BAHARAD","HEBREW_DAY_ON_JAN_1_1970","numberOfFirstDayInYear","monthsBeforeYear","fractionalMonthsBeforeYear","dayNumber","timeOfDay","isHebrewLeapYear","getDaysInGregorianMonth","getHebrewMonths","getDaysInHebrewYear","getDaysInHebrewMonth","yearLength","yearType","daysInMonth","getDayNumberInHebrewYear","numberOfDay","daysSinceHebEpoch","monthsSinceHebEpoch","firstDayOfThisYear","dayOfYear","hebrewDate","diffDays","hebrewNumerals","numerals","hArray0_9","hArray10_19","hArray20_90","hArray100_900","hArray1000_9000","mem","result","step","unshift","ModalDismissReasons","NgbCalendarHebrew","setHebrewMonth","setHebrewDay","WEEKDAYS","MONTHS","MONTHS_LEAP","NgbDatepickerI18nHebrew","NgbDateNativeAdapter","_fromNativeDate","_toNativeDate","NgbDateNativeUTCAdapter","getUTCFullYear","getUTCMonth","getUTCDate","setUTCFullYear","NgbDatepickerModule","FormsModule","NgbDropdownConfig","NgbNavbar","NgbDropdownItem","elementRef","NgbDropdownMenu","dropdown","NgbDropdown","[class.dropdown-menu]","[attr.x-placement]","(keydown.ArrowUp)","(keydown.ArrowDown)","(keydown.Home)","(keydown.End)","(keydown.Enter)","(keydown.Space)","NgbDropdownAnchor","anchorEl","getNativeElement","aria-haspopup","NgbDropdownToggle","NgbDropdownToggle_1","ngbNavbar","_closed$","_open","openChange","display","_positionMenu","_applyPlacementClasses","_setCloseHandlers","_applyContainer","isFirstChange","anchor","_anchor","_menu","_menuElement","_resetContainer","itemElements","_getMenuElements","isEventFromItems","itemElement","isEventFromToggle","_isEventFromToggle","_isDropup","menu","menuItems","_bodyContainer","_getFirstPlacement","renderer","menuElement","dropdownElement","dropdownMenuElement","removeStyle","removeChild","bodyContainer","createElement","setStyle","dropdownClass","NGB_DROPDOWN_DIRECTIVES","NgbDropdownModule","NgbModalConfig","backdrop","nodes","viewRef","componentRef","PopupService","_type","_injector","_viewContainerRef","_componentFactoryResolver","_applicationRef","content","_windowRef","_contentRef","_getContentRef","detachView","destroy","createEmbeddedView","attachView","ContentRef","rootNodes","createText","noop","ScrollBar","compensate","_getWidth","_isPresent","_adjustBody","scrollbarWidth","userSetPaddingStyle","paddingRight","actualPadding","rect","measurer","NgbModalBackdrop","[class]","NgbActiveModal","dismiss","reason","NgbModalRef","_windowCmptRef","_backdropCmptRef","_beforeDismiss","dismissEvent","Promise","resolve","reject","_resolve","_reject","then","_removeModalElements","_dismiss","windowNativeEl","backdropNativeEl","NgbModalWindow","_zone","requestAnimationFrame","defaultPrevented","ESC","preventClose","_dialogEl","BACKDROP_CLICK","autoFocusable","firstFocusable","elWithFocus","[attr.aria-modal]","[attr.aria-labelledby]","NgbModalStack","_scrollBar","_rendererFactory","_activeWindowCmptHasChanged","_ariaHiddenValues","Map","_backdropAttributes","_modalRefs","_windowAttributes","_windowCmpts","activeWindowCmpt","_revertAriaHidden","_setAriaHidden","moduleCFR","contentInjector","containerEl","createRenderer","revertPaddingForScrollBar","removeBodyClass","activeModal","contentRef","injector","backdropCmptRef","_attachBackdrop","windowCmptRef","_attachWindowComponent","ngbModalRef","beforeDismiss","_registerModalRef","_registerWindowCmpt","_applyWindowOptions","_applyBackdropOptions","dismissAll","hasOpenModals","windowInstance","backdropInstance","_createFromTemplateRef","_createFromString","_createFromComponent","component","createTextNode","contentCmptFactory","modalContentInjector","Injector","useValue","parent","componentNativeEl","scrollable","children","sibling","nodeName","getAttribute","setAttribute","removeAttribute","clear","unregisterModalRef","ngbWindowCmpt","onDestroy","ApplicationRef","RendererFactory2","NgbModal","_moduleCFR","_modalStack","_config","combinedOptions","NgbModalModule","NgbNavConfig","orientation","roles","isValidNavId","navCounter","NgbNavContent","NgbNavItem","nav","_nav","domId","_id","isPanelInDom","NgbNav","[class.nav-item]","activeIdChange","navChange","click","_updateActiveId","items","emitNavChange","Attribute","[class.nav]","[class.flex-column]","[attr.aria-orientation]","[attr.role]","NgbNavLink","navItem","hasNavItemClass","Node","COMMENT_NODE","[id]","[class.nav-link]","href","[attr.tabindex]","[attr.aria-selected]","[attr.aria-disabled]","NgbNavOutlet","[class.tab-content]","NGB_NAV_DIRECTIVES","NgbNavModule","NgbPaginationConfig","boundaryLinks","directionLinks","ellipses","maxSize","pageSize","rotate","NgbPaginationEllipsis","NgbPaginationFirst","NgbPaginationLast","NgbPaginationNext","NgbPaginationNumber","NgbPaginationPrevious","NgbPagination","pageCount","pages","page","pageChange","size","hasPrevious","hasNext","previousDisabled","selectPage","pageNumber","_updatePages","isEllipsis","_applyEllipses","end","_applyRotation","leftOffset","rightOffset","_applyPagination","_setPageInRange","newPageNo","prevPageNo","collectionSize","newPage","DIRECTIVES","NgbPaginationModule","Trigger","isManual","DEFAULT_ALIASES","hover","delayOrNoop","listenToTriggers","triggers","isOpenedFn","openFn","closeFn","openDelay","closeDelay","parsedTriggers","aliases","trimmedTriggers","trigger","triggerPair","alias","manualTriggers","parseTriggers","subscription","Observable","subscriber","listeners","toggleFn","listen","unsubscribeFn","observeTriggers","input$","pending","filteredInput$","currentlyOpen","share","delayedOpen$","delayedClose$","triggerDelay","NgbPopoverConfig","disablePopover","NgbPopoverWindow","isTitleTemplate","title","NgbPopover","componentFactoryResolver","viewContainerRef","applicationRef","shown","_ngbPopoverWindowId","popoverClass","_popupService","_isDisabled","ngbPopover","popoverTitle","_unregisterListenersFn","bind","NgbPopoverModule","NgbProgressbarConfig","animated","striped","showValue","NgbProgressbar","textType","_max","getValue","getPercentValue","NgbProgressbarModule","NgbRatingConfig","readonly","resettable","NGB_RATING_VALUE_ACCESSOR","NgbRating","_changeDetectorRef","contexts","leave","rateChange","ariaValueText","nextRate","enter","handleBlur","handleClick","update","rate","handleKeyDown","v","k","fill","reset","internalChange","newRate","_getFillValue","toFixed","nextValue","[tabindex]","aria-valuemin","[attr.aria-valuemax]","[attr.aria-valuenow]","[attr.aria-valuetext]","(mouseleave)","NgbRatingModule","NgbTabsetConfig","justify","NgbTabTitle","NgbTabContent","NgbTab","NgbTabset","tabChange","justifyClass","tabId","selectedTab","_getTabById","activeTab","tabs","tabsWithId","tab","NGB_TABSET_DIRECTIVES","NgbTabsetModule","NgbTime","hour","minute","second","changeHour","updateHour","NaN","changeMinute","updateMinute","changeSecond","updateSecond","checkSecs","NgbTimepickerConfig","meridian","spinners","seconds","hourStep","minuteStep","secondStep","readonlyInputs","NGB_DATEPICKER_TIME_ADAPTER_FACTORY","NgbTimeStructAdapter","NgbTimeAdapter","NGB_TIMEPICKER_I18N_FACTORY","NgbTimepickerI18nDefault","NgbTimepickerI18n","_periods","getLocaleDayPeriods","Narrow","getMorningPeriod","getAfternoonPeriod","FILTER_REGEX","NGB_TIMEPICKER_VALUE_ACCESSOR","NgbTimepicker","_ngbTimeAdapter","_hourStep","_minuteStep","_secondStep","structValue","propagateModelChange","newVal","isPM","enteredHour","toggleMeridian","formatInput","replace","formatHour","formatMinSec","touched","NgbTimepickerModule","NgbToastConfig","autohide","ariaLive","NgbToastHeader","NgbToast","contentHeaderTpl","hideOutput","_init","_clearTimeout","hide","_timeoutID","clearTimeout","[attr.aria-live]","aria-atomic","[class.toast]","NgbToastModule","NgbTooltipConfig","disableTooltip","NgbTooltipWindow","NgbTooltip","_ngbTooltipWindowId","tooltipClass","_ngbTooltip","NgbTooltipModule","NgbHighlight","highlightClass","escapedTerms","term","parts","RegExp","NgbTypeaheadWindow","activeIdx","focusFirst","formatter","selectEvent","activeChangeEvent","hasActive","results","getActive","markActive","_activeChanged","resetActive","(mousedown)","ARIA_LIVE_DELAY","InjectionToken","factory","ARIA_LIVE_DELAY_FACTORY","getLiveElement","lazyCreate","Live","_delay","say","message","textContent","setText","NgbTypeaheadConfig","editable","showHint","NGB_TYPEAHEAD_VALUE_ACCESSOR","NgbTypeahead","nextWindowId","ngZone","_live","autocomplete","selectItem","popupId","_valueChanges","_resubscribeTypeahead","isPopupOpen","results$","_inputValueBackup","ngbTypeahead","userInput$","_subscription","_subscribeToUserInput","_closePopup","_unsubscribeFromUserInput","_writeInputValue","_formatItemForInput","dismissPopup","_showHint","_selectResult","_openPopup","_selectResultClosePopup","activeDescendant","userInputLowerCase","toLowerCase","formattedVal","substr","inputFormatter","resultFormatter","resultTemplate","count","[class.open]","[autocomplete]","autocapitalize","autocorrect","aria-multiline","[attr.aria-autocomplete]","[attr.aria-activedescendant]","[attr.aria-owns]","NgbTypeaheadModule","NGB_MODULES","NgbModule"],"mappings":"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gB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAA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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n\nexport function toString(value: any): string {\n  return (value !== undefined && value !== null) ? `${value}` : '';\n}\n\nexport function getValueInRange(value: number, max: number, min = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n\nexport function isInteger(value: any): value is number {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nexport function regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nexport function hasClassName(element: any, className: string): boolean {\n  return element && element.className && element.className.split &&\n      element.className.split(/\\s+/).indexOf(className) >= 0;\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n  // Polyfill for ie10+\n\n  if (!Element.prototype.matches) {\n    // IE uses the non-standard name: msMatchesSelector\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  Element.prototype.closest = function(s: string) {\n    let el = this;\n    if (!document.documentElement.contains(el)) {\n      return null;\n    }\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n\nexport function closest(element: HTMLElement, selector): HTMLElement {\n  if (!selector) {\n    return null;\n  }\n\n  return element.closest(selector);\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAccordionConfig {\n  closeOthers = false;\n  type: string;\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\nimport {NgbCarouselConfig} from './carousel-config';\n\nimport {BehaviorSubject, combineLatest, NEVER, Subject, timer} from 'rxjs';\nimport {distinctUntilChanged, map, startWith, switchMap, takeUntil} from 'rxjs/operators';\n\nlet nextId = 0;\n\n/**\n * A directive that wraps the individual carousel slide.\n */\n@Directive({selector: 'ng-template[ngbSlide]'})\nexport class NgbSlide {\n  /**\n   * Slide id that must be unique for the entire document.\n   *\n   * If not provided, will be generated in the `ngb-slide-xx` format.\n   */\n  @Input() id = `ngb-slide-${nextId++}`;\n  constructor(public tplRef: TemplateRef<any>) {}\n}\n\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\n@Component({\n  selector: 'ngb-carousel',\n  exportAs: 'ngbCarousel',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'carousel slide',\n    '[style.display]': '\"block\"',\n    'tabIndex': '0',\n    '(keydown.arrowLeft)': 'keyboard && prev(NgbSlideEventSource.ARROW_LEFT)',\n    '(keydown.arrowRight)': 'keyboard && next(NgbSlideEventSource.ARROW_RIGHT)'\n  },\n  template: `\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"select(slide.id, NgbSlideEventSource.INDICATOR)\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev(NgbSlideEventSource.ARROW_LEFT)\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next(NgbSlideEventSource.ARROW_RIGHT)\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n})\nexport class NgbCarousel implements AfterContentChecked,\n    AfterContentInit, OnDestroy {\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\n\n  public NgbSlideEventSource = NgbSlideEventSource;\n\n  private _destroy$ = new Subject<void>();\n  private _interval$ = new BehaviorSubject(0);\n  private _mouseHover$ = new BehaviorSubject(false);\n  private _pauseOnHover$ = new BehaviorSubject(false);\n  private _pause$ = new BehaviorSubject(false);\n  private _wrap$ = new BehaviorSubject(false);\n\n  /**\n   * The slide id that should be displayed **initially**.\n   *\n   * For subsequent interactions use methods `select()`, `next()`, etc. and the `(slide)` output.\n   */\n  @Input() activeId: string;\n\n  /**\n   * Time in milliseconds before the next slide is shown.\n   */\n  @Input()\n  set interval(value: number) {\n    this._interval$.next(value);\n  }\n\n  get interval() { return this._interval$.value; }\n\n  /**\n   * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n   */\n  @Input()\n  set wrap(value: boolean) {\n    this._wrap$.next(value);\n  }\n\n  get wrap() { return this._wrap$.value; }\n\n  /**\n   * If `true`, allows to interact with carousel using keyboard 'arrow left' and 'arrow right'.\n   */\n  @Input() keyboard: boolean;\n\n  /**\n   * If `true`, will pause slide switching when mouse cursor hovers the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input()\n  set pauseOnHover(value: boolean) {\n    this._pauseOnHover$.next(value);\n  }\n\n  get pauseOnHover() { return this._pauseOnHover$.value; }\n\n  /**\n   * If `true`, 'previous' and 'next' navigation arrows will be visible on the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationArrows: boolean;\n\n  /**\n   * If `true`, navigation indicators at the bottom of the slide will be visible.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationIndicators: boolean;\n\n  /**\n   * An event emitted right after the slide transition is completed.\n   *\n   * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n   */\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\n\n  constructor(\n      config: NgbCarouselConfig, @Inject(PLATFORM_ID) private _platformId, private _ngZone: NgZone,\n      private _cd: ChangeDetectorRef) {\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n\n  @HostListener('mouseenter')\n  mouseEnter() {\n    this._mouseHover$.next(true);\n  }\n\n  @HostListener('mouseleave')\n  mouseLeave() {\n    this._mouseHover$.next(false);\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        const hasNextSlide$ = combineLatest([\n                                this.slide.pipe(map(slideEvent => slideEvent.current), startWith(this.activeId)),\n                                this._wrap$, this.slides.changes.pipe(startWith(<{}>null))\n                              ])\n                                  .pipe(\n                                      map(([currentSlideId, wrap]) => {\n                                        const slideArr = this.slides.toArray();\n                                        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n                                        return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n                                      }),\n                                      distinctUntilChanged());\n        combineLatest([this._pause$, this._pauseOnHover$, this._mouseHover$, this._interval$, hasNextSlide$])\n            .pipe(\n                map(([pause, pauseOnHover, mouseHover, interval, hasNextSlide]) =>\n                        ((pause || (pauseOnHover && mouseHover) || !hasNextSlide) ? 0 : interval)),\n\n                distinctUntilChanged(), switchMap(interval => interval > 0 ? timer(interval, interval) : NEVER),\n                takeUntil(this._destroy$))\n            .subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n      });\n    }\n\n    this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => this._cd.markForCheck());\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n  }\n\n  ngOnDestroy() { this._destroy$.next(); }\n\n  /**\n   * Navigates to a slide with the specified identifier.\n   */\n  select(slideId: string, source?: NgbSlideEventSource) {\n    this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n  }\n\n  /**\n   * Navigates to the previous slide.\n   */\n  prev(source?: NgbSlideEventSource) {\n    this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT, source);\n  }\n\n  /**\n   * Navigates to the next slide.\n   */\n  next(source?: NgbSlideEventSource) {\n    this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT, source);\n  }\n\n  /**\n   * Pauses cycling through the slides.\n   */\n  pause() { this._pause$.next(true); }\n\n  /**\n   * Restarts cycling through the slides from left to right.\n   */\n  cycle() { this._pause$.next(false); }\n\n  private _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection, source?: NgbSlideEventSource) {\n    let selectedSlide = this._getSlideById(slideIdx);\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this.slide.emit(\n          {prev: this.activeId, current: selectedSlide.id, direction: direction, paused: this._pause$.value, source});\n      this.activeId = selectedSlide.id;\n    }\n\n    // we get here after the interval fires or any external API call like next(), prev() or select()\n    this._cd.markForCheck();\n  }\n\n  private _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\n\n  private _getSlideById(slideId: string): NgbSlide { return this.slides.find(slide => slide.id === slideId); }\n\n  private _getSlideIdxById(slideId: string): number {\n    return this.slides.toArray().indexOf(this._getSlideById(slideId));\n  }\n\n  private _getNextSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                         slideArr[currentSlideIdx + 1].id;\n  }\n\n  private _getPrevSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isFirstSlide = currentSlideIdx === 0;\n\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                          slideArr[currentSlideIdx - 1].id;\n  }\n}\n\n/**\n * A slide change event emitted right after the slide transition is completed.\n */\nexport interface NgbSlideEvent {\n  /**\n   * The previous slide id.\n   */\n  prev: string;\n\n  /**\n   * The current slide id.\n   */\n  current: string;\n\n  /**\n   * The slide event direction.\n   *\n   * Possible values are `'left' | 'right'`.\n   */\n  direction: NgbSlideEventDirection;\n\n  /**\n   * Whether the pause() method was called (and no cycle() call was done afterwards).\n   *\n   * @since 5.1.0\n   */\n  paused: boolean;\n\n  /**\n   * Source triggering the slide change event.\n   *\n   * Possible values are `'timer' | 'arrowLeft' | 'arrowRight' | 'indicator'`\n   *\n   * @since 5.1.0\n   */\n  source?: NgbSlideEventSource;\n}\n\n/**\n * Defines the carousel slide transition direction.\n */\nexport enum NgbSlideEventDirection {\n  LEFT = <any>'left',\n  RIGHT = <any>'right'\n}\n\nexport enum NgbSlideEventSource {\n  TIMER = 'timer',\n  ARROW_LEFT = 'arrowLeft',\n  ARROW_RIGHT = 'arrowRight',\n  INDICATOR = 'indicator'\n}\n\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Host,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {isString} from '../util/util';\n\nimport {NgbAccordionConfig} from './accordion-config';\n\nlet nextId = 0;\n\n/**\n * The context for the [NgbPanelHeader](#/components/accordion/api#NgbPanelHeader) template\n *\n * @since 4.1.0\n */\nexport interface NgbPanelHeaderContext {\n  /**\n   * `True` if current panel is opened\n   */\n  opened: boolean;\n}\n\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPanelHeader]'})\nexport class NgbPanelHeader {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\nexport class NgbPanelTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps the accordion panel content.\n */\n@Directive({selector: 'ng-template[ngbPanelContent]'})\nexport class NgbPanelContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\n@Directive({selector: 'ngb-panel'})\nexport class NgbPanel implements AfterContentChecked {\n  /**\n   *  If `true`, the panel is disabled an can't be toggled.\n   */\n  @Input() disabled = false;\n\n  /**\n   *  An optional id for the panel that must be unique on the page.\n   *\n   *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n   */\n  @Input() id = `ngb-panel-${nextId++}`;\n\n  isOpen = false;\n\n  /**\n   *  The panel title.\n   *\n   *  You can alternatively use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to set panel title.\n   */\n  @Input() title: string;\n\n  /**\n   * Type of the current panel.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * An optional class applied to the accordion card element that wraps both panel title and content.\n   *\n   * @since 5.3.0\n   */\n  @Input() cardClass: string;\n\n  titleTpl: NgbPanelTitle | null;\n  headerTpl: NgbPanelHeader | null;\n  contentTpl: NgbPanelContent | null;\n\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\n  @ContentChildren(NgbPanelHeader, {descendants: false}) headerTpls: QueryList<NgbPanelHeader>;\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.headerTpl = this.headerTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * An event emitted right before toggling an accordion panel.\n */\nexport interface NgbPanelChangeEvent {\n  /**\n   * The id of the accordion panel that is being toggled.\n   */\n  panelId: string;\n\n  /**\n   * The next state of the panel.\n   *\n   * `true` if it will be opened, `false` if closed.\n   */\n  nextState: boolean;\n\n  /**\n   * Calling this function will prevent panel toggling.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\n@Component({\n  selector: 'ngb-accordion',\n  exportAs: 'ngbAccordion',\n  encapsulation: ViewEncapsulation.None,\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\n  template: `\n    <ng-template #t ngbPanelHeader let-panel>\n      <button class=\"btn btn-link\" [ngbPanelToggle]=\"panel\">\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div [class]=\"'card ' + (panel.cardClass || '')\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbAccordion implements AfterContentChecked {\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\n\n  /**\n   * An array or comma separated strings of panel ids that should be opened **initially**.\n   *\n   * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n   * the `(panelChange)` event.\n   */\n  @Input() activeIds: string | readonly string[] = [];\n\n  /**\n   *  If `true`, only one panel could be opened at a time.\n   *\n   *  Opening a new panel will close others.\n   */\n  @Input('closeOthers') closeOtherPanels: boolean;\n\n  /**\n   * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * Type of panels.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * Event emitted right before the panel toggle happens.\n   *\n   * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n   */\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\n\n  constructor(config: NgbAccordionConfig) {\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n\n  /**\n   * Checks if a panel with a given id is expanded.\n   */\n  isExpanded(panelId: string): boolean { return this.activeIds.indexOf(panelId) > -1; }\n\n  /**\n   * Expands a panel with a given id.\n   *\n   * Has no effect if the panel is already expanded or disabled.\n   */\n  expand(panelId: string): void { this._changeOpenState(this._findPanelById(panelId), true); }\n\n  /**\n   * Expands all panels, if `[closeOthers]` is `false`.\n   *\n   * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n   */\n  expandAll(): void {\n    if (this.closeOtherPanels) {\n      if (this.activeIds.length === 0 && this.panels.length) {\n        this._changeOpenState(this.panels.first, true);\n      }\n    } else {\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\n    }\n  }\n\n  /**\n   * Collapses a panel with the given id.\n   *\n   * Has no effect if the panel is already collapsed or disabled.\n   */\n  collapse(panelId: string) { this._changeOpenState(this._findPanelById(panelId), false); }\n\n  /**\n   * Collapses all opened panels.\n   */\n  collapseAll() {\n    this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\n  }\n\n  /**\n   * Toggles a panel with the given id.\n   *\n   * Has no effect if the panel is disabled.\n   */\n  toggle(panelId: string) {\n    const panel = this._findPanelById(panelId);\n    if (panel) {\n      this._changeOpenState(panel, !panel.isOpen);\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    }\n\n    // update panels open states\n    this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\n\n    // closeOthers updates\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0]);\n      this._updateActiveIds();\n    }\n  }\n\n  private _changeOpenState(panel: NgbPanel, nextState: boolean) {\n    if (panel && !panel.disabled && panel.isOpen !== nextState) {\n      let defaultPrevented = false;\n\n      this.panelChange.emit(\n          {panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        panel.isOpen = nextState;\n\n        if (nextState && this.closeOtherPanels) {\n          this._closeOthers(panel.id);\n        }\n        this._updateActiveIds();\n      }\n    }\n  }\n\n  private _closeOthers(panelId: string) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId) {\n        panel.isOpen = false;\n      }\n    });\n  }\n\n  private _findPanelById(panelId: string): NgbPanel | null { return this.panels.find(p => p.id === panelId); }\n\n  private _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n}\n\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n */\n@Directive({\n  selector: 'button[ngbPanelToggle]',\n  host: {\n    'type': 'button',\n    '[disabled]': 'panel.disabled',\n    '[class.collapsed]': '!panel.isOpen',\n    '[attr.aria-expanded]': 'panel.isOpen',\n    '[attr.aria-controls]': 'panel.id',\n    '(click)': 'accordion.toggle(panel.id)'\n  }\n})\nexport class NgbPanelToggle {\n  @Input()\n  set ngbPanelToggle(panel: NgbPanel) {\n    if (panel) {\n      this.panel = panel;\n    }\n  }\n\n  constructor(public accordion: NgbAccordion, @Optional() @Host() public panel: NgbPanel) {}\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle} from './accordion';\n\nexport {\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent,\n  NgbPanelChangeEvent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelToggle\n} from './accordion';\nexport {NgbAccordionConfig} from './accordion-config';\n\nconst NGB_ACCORDION_DIRECTIVES =\n    [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\nexport class NgbAccordionModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAlertConfig {\n  dismissible = true;\n  type = 'warning';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {NgbAlertConfig} from './alert-config';\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\n@Component({\n  selector: 'ngb-alert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible'},\n  template: `\n    <ng-content></ng-content>\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"closeHandler()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    `,\n  styleUrls: ['./alert.scss']\n})\nexport class NgbAlert implements OnInit,\n    OnChanges {\n  /**\n   * If `true`, alert can be dismissed by the user.\n   *\n   * The close button (×) will be displayed and you can be notified\n   * of the event with the `(close)` output.\n   */\n  @Input() dismissible: boolean;\n  /**\n   * Type of the alert.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n  /**\n   * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n   */\n  @Output() close = new EventEmitter<void>();\n\n  constructor(config: NgbAlertConfig, private _renderer: Renderer2, private _element: ElementRef) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n\n  closeHandler() { this.close.emit(null); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange = changes['type'];\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAlert} from './alert';\n\nexport {NgbAlert} from './alert';\nexport {NgbAlertConfig} from './alert-config';\n\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\nexport class NgbAlertModule {\n}\n","import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[ngbButtonLabel]',\n  host:\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\n})\nexport class NgbButtonLabel {\n  active: boolean;\n  disabled: boolean;\n  focused: boolean;\n}\n","import {ChangeDetectorRef, Directive, forwardRef, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbCheckBox),\n  multi: true\n};\n\n\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({\n  selector: '[ngbButton][type=checkbox]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onInputChange($event)',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  },\n  providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n})\nexport class NgbCheckBox implements ControlValueAccessor {\n  checked;\n\n  /**\n   * If `true`, the checkbox button will be disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * The form control value when the checkbox is checked.\n   */\n  @Input() valueChecked = true;\n\n  /**\n   * The form control value when the checkbox is unchecked.\n   */\n  @Input() valueUnChecked = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  set focused(isFocused: boolean) {\n    this._label.focused = isFocused;\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  constructor(private _label: NgbButtonLabel, private _cd: ChangeDetectorRef) {}\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked;\n\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    this._cd.markForCheck();\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, forwardRef, Input, OnDestroy, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n\nlet nextId = 0;\n\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({selector: '[ngbRadioGroup]', host: {'role': 'radiogroup'}, providers: [NGB_RADIO_VALUE_ACCESSOR]})\nexport class NgbRadioGroup implements ControlValueAccessor {\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\n  private _value = null;\n  private _disabled: boolean;\n\n  get disabled() { return this._disabled; }\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  /**\n   * Name of the radio group applied to radio input elements.\n   *\n   * Will be applied to all radio input elements inside the group,\n   * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n   *\n   * If not provided, will be generated in the `ngb-radio-xx` format.\n   */\n  @Input() name = `ngb-radio-${nextId++}`;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() { this._updateRadiosValue(); }\n\n  register(radio: NgbRadio) { this._radios.add(radio); }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\n\n  writeValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\n\n\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n */\n@Directive({\n  selector: '[ngbButton][type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '[name]': 'nameAttr',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n})\nexport class NgbRadio implements OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _value: any = null;\n\n  /**\n   * The value for the 'name' property of the input element.\n   *\n   * All inputs of the radio group should have the same name. If not specified,\n   * the name of the enclosing group is used.\n   */\n  @Input() name: string;\n\n  /**\n   * The form control value when current radio button is checked.\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n    this._group.onRadioValueUpdate();\n  }\n\n  /**\n   * If `true`, current radio button will be disabled.\n   */\n  @Input('disabled')\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() { return this._checked; }\n\n  get disabled() { return this._group.disabled || this._disabled; }\n\n  get value() { return this._value; }\n\n  get nameAttr() { return this.name || this._group.name; }\n\n  constructor(\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\n      private _element: ElementRef<HTMLInputElement>, private _cd: ChangeDetectorRef) {\n    this._group.register(this);\n    this.updateDisabled();\n  }\n\n  ngOnDestroy() { this._group.unregister(this); }\n\n  onChange() { this._group.onRadioChange(this); }\n\n  updateValue(value) {\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    if (this.value !== value) {\n      this._cd.markForCheck();\n    }\n\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() { this._label.disabled = this.disabled; }\n}\n","import {NgModule} from '@angular/core';\nimport {NgbButtonLabel} from './label';\nimport {NgbCheckBox} from './checkbox';\nimport {NgbRadio, NgbRadioGroup} from './radio';\n\nexport {NgbButtonLabel} from './label';\nexport {NgbCheckBox} from './checkbox';\nexport {NgbRadio, NgbRadioGroup} from './radio';\n\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\nexport class NgbButtonsModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbCarouselConfig {\n  interval = 5000;\n  wrap = true;\n  keyboard = true;\n  pauseOnHover = true;\n  showNavigationArrows = true;\n  showNavigationIndicators = true;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NGB_CAROUSEL_DIRECTIVES} from './carousel';\n\nexport {NgbCarousel, NgbSlide, NgbSlideEvent, NgbSlideEventDirection, NgbSlideEventSource} from './carousel';\nexport {NgbCarouselConfig} from './carousel-config';\n\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\nexport class NgbCarouselModule {\n}\n","import {Directive, Input} from '@angular/core';\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\n@Directive({\n  selector: '[ngbCollapse]',\n  exportAs: 'ngbCollapse',\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\n})\nexport class NgbCollapse {\n  /**\n   * If `true`, will collapse the element or show it otherwise.\n   */\n  @Input('ngbCollapse') collapsed = false;\n}\n","import {NgModule} from '@angular/core';\nimport {NgbCollapse} from './collapse';\n\nexport {NgbCollapse} from './collapse';\n\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\nexport class NgbCollapseModule {\n}\n","import {NgbDateStruct} from './ngb-date-struct';\nimport {isInteger} from '../util/util';\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nexport class NgbDate implements NgbDateStruct {\n  /**\n   * The year, for example 2016\n   */\n  year: number;\n\n  /**\n   * The month, for example 1=Jan ... 12=Dec as in ISO 8601\n   */\n  month: number;\n\n  /**\n   * The day of month, starting with 1\n   */\n  day: number;\n\n  /**\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\n   *\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n   *\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\n   */\n  static from(date: NgbDateStruct): NgbDate {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n\n  constructor(year: number, month: number, day: number) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n\n  /**\n   * Checks if the current date is equal to another date.\n   */\n  equals(other: NgbDateStruct): boolean {\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n\n  /**\n   * Checks if the current date is before another date.\n   */\n  before(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n\n  /**\n   * Checks if the current date is after another date.\n   */\n  after(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\n\nexport function fromJSDate(jsDate: Date) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nexport function toJSDate(date: NgbDate) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n\nexport function NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY})\nexport abstract class NgbCalendar {\n  /**\n   * Returns the number of days per week.\n   */\n  abstract getDaysPerWeek(): number;\n\n  /**\n   * Returns an array of months per year.\n   *\n   * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\n   */\n  abstract getMonths(year?: number): number[];\n\n  /**\n   * Returns the number of weeks per month.\n   */\n  abstract getWeeksPerMonth(): number;\n\n  /**\n   * Returns the weekday number for a given day.\n   *\n   * With the default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekday(date: NgbDate): number;\n\n  /**\n   * Adds a number of years, months or days to a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Subtracts a number of years, months or days from a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Returns the week number for a given week.\n   */\n  abstract getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number): number;\n\n  /**\n   * Returns the today's date.\n   */\n  abstract getToday(): NgbDate;\n\n  /**\n   * Checks if a date is valid in the current calendar.\n   */\n  abstract isValid(date: NgbDate): boolean;\n}\n\n@Injectable()\nexport class NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n    let checkMonth = true;\n    let expectedMonth = jsDate.getMonth();\n\n    switch (period) {\n      case 'y':\n        jsDate.setFullYear(jsDate.getFullYear() + number);\n        break;\n      case 'm':\n        expectedMonth += number;\n        jsDate.setMonth(expectedMonth);\n        expectedMonth = expectedMonth % 12;\n        if (expectedMonth < 0) {\n          expectedMonth = expectedMonth + 12;\n        }\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        checkMonth = false;\n        break;\n      default:\n        return date;\n    }\n\n    if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n      // this means the destination month has less days than the initial month\n      // let's go back to the end of the previous month:\n      jsDate.setDate(0);\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    jsDate.setMonth(0);  // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromJSDate(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n\n    // year 0 doesn't exist in Gregorian calendar\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n        jsDate.getDate() === date.day;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\nimport {NgbCalendar} from './ngb-calendar';\nimport {isDefined} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\n  return !dateComparator(prev, next);\n}\n\nexport function isChangedMonth(prev: NgbDate, next: NgbDate) {\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date;\n}\n\nexport function isDateSelectable(date: NgbDate, state: DatepickerViewModel) {\n  const {minDate, maxDate, disabled, markDisabled} = state;\n  // clang-format off\n  return !(\n    !isDefined(date) ||\n    disabled ||\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\n    (minDate && date.before(minDate)) ||\n    (maxDate && date.after(maxDate))\n  );\n  // clang-format on\n}\n\nexport function generateSelectBoxMonths(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n  const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n\n  const length = end - start + 1;\n  const numbers = Array(length);\n  for (let i = 0; i < length; i++) {\n    numbers[i] = start + i;\n  }\n\n  return numbers;\n}\n\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate) {\n  const nextDate = Object.assign(calendar.getNext(date, 'm'), {day: 1});\n  return maxDate && nextDate.after(maxDate);\n}\n\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate) {\n  const prevDate = Object.assign(calendar.getPrev(date, 'm'), {day: 1});\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n                     prevDate.year < minDate.year && minDate.month === 1);\n}\n\nexport function buildMonths(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    force: boolean): MonthViewModel[] {\n  const {displayMonths, months} = state;\n  // move old months to a temporary array\n  const monthsToReuse = months.splice(0, months.length);\n\n  // generate new first dates, nullify or reuse months\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\n    const firstDate = Object.assign(calendar.getNext(date, 'm', i), {day: 1});\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  });\n\n  // rebuild nullified months\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\n    }\n  });\n\n  return months;\n}\n\nexport function buildMonth(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\n  const {dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays} = state;\n  const calendarToday = calendar.getToday();\n\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\n    }\n    const days = weekObject.days;\n\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\n\n      // marking date as disabled\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\n      }\n\n      // today\n      let today = newDate.equals(calendarToday);\n\n      // adding user-provided data to the context\n      let contextUserData =\n          dayTemplateData ? dayTemplateData(newDate, {month: month.number, year: month.year}) : undefined;\n\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {} as DayViewModel;\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number,\n        currentYear: month.year, disabled,\n        focused: false,\n        selected: false, today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n        days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth, formatDate} from '@angular/common';\nimport {NgbDateStruct} from './ngb-date-struct';\n\nexport function NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbDatepickerI18n {\n  /**\n   * Returns the short weekday name to display in the heading of the month view.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  abstract getWeekdayShortName(weekday: number): string;\n\n  /**\n   * Returns the short month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthShortName(month: number, year?: number): string;\n\n  /**\n   * Returns the full month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthFullName(month: number, year?: number): string;\n\n  /**\n   * Returns the value of the `aria-label` attribute for a specific date.\n   *\n   * @since 2.0.0\n   */\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\n\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell.\n   *\n   * @since 3.0.0\n   */\n  getDayNumerals(date: NgbDateStruct): string { return `${date.day}`; }\n\n  /**\n   * Returns the textual representation of a week number rendered by datepicker.\n   *\n   * @since 3.0.0\n   */\n  getWeekNumerals(weekNumber: number): string { return `${weekNumber}`; }\n\n  /**\n   * Returns the textual representation of a year that is rendered in the datepicker year select box.\n   *\n   * @since 3.0.0\n   */\n  getYearNumerals(year: number): string { return `${year}`; }\n}\n\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  private _weekdaysShort: Array<string>;\n  private _monthsShort: Array<string>;\n  private _monthsFull: Array<string>;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string) {\n    super();\n\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayShortName(weekday: number): string { return this._weekdaysShort[weekday - 1]; }\n\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1]; }\n\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\nexport type NgbMarkDisabled = (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\nexport type NgbDayTemplateData = (date: NgbDateStruct, current: {year: number, month: number}) => any;\n\nexport type DayViewModel = {\n  date: NgbDate,\n  context: DayTemplateContext,\n  tabindex: number,\n  ariaLabel: string,\n  hidden: boolean\n};\n\nexport type WeekViewModel = {\n  number: number,\n  days: DayViewModel[],\n  collapsed: boolean\n};\n\nexport type MonthViewModel = {\n  firstDate: NgbDate,\n  lastDate: NgbDate,\n  number: number,\n  year: number,\n  weeks: WeekViewModel[],\n  weekdays: number[]\n};\n\n// clang-format off\nexport type DatepickerViewModel = {\n  dayTemplateData?: NgbDayTemplateData,\n  disabled: boolean,\n  displayMonths: number,\n  firstDate?: NgbDate,\n  firstDayOfWeek: number,\n  focusDate?: NgbDate,\n  focusVisible: boolean,\n  lastDate?: NgbDate,\n  markDisabled?: NgbMarkDisabled,\n  maxDate?: NgbDate,\n  minDate?: NgbDate,\n  months: MonthViewModel[],\n  navigation: 'select' | 'arrows' | 'none',\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\n  prevDisabled: boolean,\n  nextDisabled: boolean,\n  selectBoxes: {\n    years: number[],\n    months: number[]\n  },\n  selectedDate: NgbDate\n};\n// clang-format on\n\nexport enum NavigationEvent {\n  PREV,\n  NEXT\n}\n","import {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DatepickerViewModel, NgbDayTemplateData, NgbMarkDisabled} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nimport {isInteger, toInteger} from '../util/util';\nimport {Observable, Subject} from 'rxjs';\nimport {\n  buildMonths,\n  checkDateInRange,\n  checkMinBeforeMax,\n  isChangedDate,\n  isChangedMonth,\n  isDateSelectable,\n  generateSelectBoxYears,\n  generateSelectBoxMonths,\n  prevMonthDisabled,\n  nextMonthDisabled\n} from './datepicker-tools';\n\nimport {filter} from 'rxjs/operators';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport interface DatepickerServiceInputs extends\n    Partial<Pick<DatepickerViewModel, 'dayTemplateData' | 'displayMonths' | 'disabled' | 'firstDayOfWeek' |\n                     'focusVisible' | 'markDisabled' | 'maxDate' | 'minDate' | 'navigation' | 'outsideDays'>> {}\n\n@Injectable()\nexport class NgbDatepickerService {\n  private _VALIDATORS:\n      {[K in keyof DatepickerServiceInputs]: (v: DatepickerServiceInputs[K]) => Partial<DatepickerViewModel>} = {\n        dayTemplateData: (dayTemplateData: NgbDayTemplateData) => {\n          if (this._state.dayTemplateData !== dayTemplateData) {\n            return {dayTemplateData};\n          }\n        },\n        displayMonths: (displayMonths: number) => {\n          displayMonths = toInteger(displayMonths);\n          if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n            return {displayMonths};\n          }\n        },\n        disabled: (disabled: boolean) => {\n          if (this._state.disabled !== disabled) {\n            return {disabled};\n          }\n        },\n        firstDayOfWeek: (firstDayOfWeek: number) => {\n          firstDayOfWeek = toInteger(firstDayOfWeek);\n          if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n            return {firstDayOfWeek};\n          }\n        },\n        focusVisible: (focusVisible: boolean) => {\n          if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n            return {focusVisible};\n          }\n        },\n        markDisabled: (markDisabled: NgbMarkDisabled) => {\n          if (this._state.markDisabled !== markDisabled) {\n            return {markDisabled};\n          }\n        },\n        maxDate: (date: NgbDate) => {\n          const maxDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.maxDate, maxDate)) {\n            return {maxDate};\n          }\n        },\n        minDate: (date: NgbDate) => {\n          const minDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.minDate, minDate)) {\n            return {minDate};\n          }\n        },\n        navigation: (navigation: 'select' | 'arrows' | 'none') => {\n          if (this._state.navigation !== navigation) {\n            return {navigation};\n          }\n        },\n        outsideDays: (outsideDays: 'visible' | 'collapsed' | 'hidden') => {\n          if (this._state.outsideDays !== outsideDays) {\n            return {outsideDays};\n          }\n        }\n      };\n\n  private _model$ = new Subject<DatepickerViewModel>();\n\n  private _dateSelect$ = new Subject<NgbDate>();\n\n  private _state: DatepickerViewModel = {\n    disabled: false,\n    displayMonths: 1,\n    firstDayOfWeek: 1,\n    focusVisible: false,\n    months: [],\n    navigation: 'select',\n    outsideDays: 'visible',\n    prevDisabled: false,\n    nextDisabled: false,\n    selectBoxes: {years: [], months: []},\n    selectedDate: null\n  };\n\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\n\n  get dateSelect$(): Observable<NgbDate> { return this._dateSelect$.pipe(filter(date => date !== null)); }\n\n  set(options: DatepickerServiceInputs) {\n    let patch = Object.keys(options)\n                    .map(key => this._VALIDATORS[key](options[key]))\n                    .reduce((obj, part) => ({...obj, ...part}), {});\n\n    if (Object.keys(patch).length > 0) {\n      this._nextState(patch);\n    }\n  }\n\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\n\n  focus(date: NgbDate) {\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n      this._nextState({focusDate: date});\n    }\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {emitEvent: true});\n    }\n  }\n\n  open(date: NgbDate) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n    if (!this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, date))) {\n      this._nextState({firstDate});\n    }\n  }\n\n  select(date: NgbDate, options: {emitEvent?: boolean} = {}) {\n    const selectedDate = this.toValidDate(date, null);\n    if (!this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({selectedDate});\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._dateSelect$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date: NgbDateStruct, defaultValue?: NgbDate): NgbDate {\n    const ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  getMonth(struct: NgbDateStruct) {\n    for (let month of this._state.months) {\n      if (struct.month === month.number && struct.year === month.year) {\n        return month;\n      }\n    }\n    throw new Error(`month ${struct.month} of year ${struct.year} not found`);\n  }\n\n  private _nextState(patch: Partial<DatepickerViewModel>) {\n    const newState = this._updateState(patch);\n    this._patchContexts(newState);\n    this._state = newState;\n    this._model$.next(this._state);\n  }\n\n  private _patchContexts(state: DatepickerViewModel) {\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          }\n\n          // calculating tabindex\n          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n\n          // override context disabled\n          if (disabled === true) {\n            day.context.disabled = true;\n          }\n\n          // patch selection flag\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          }\n\n          // visibility\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                 day.date.before(months[displayMonths - 1].lastDate));\n          }\n        });\n      });\n    });\n  }\n\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n\n    let startDate = state.firstDate;\n\n    // min/max dates changed\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    }\n\n    // disabled\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    }\n\n    // initial rebuild via 'select()'\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    }\n\n    // terminate early if only focus visibility was changed\n    if ('focusVisible' in patch) {\n      return state;\n    }\n\n    // focus date changed\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n\n      // nothing to rebuild if only focus changed and it is still visible\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n          !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    }\n\n    // first date changed\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    }\n\n    // rebuilding months\n    if (startDate) {\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n          'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n\n      // updating months and boundary dates\n      state.months = months;\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n\n      // reset selected date if 'markDisabled' returns true\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      }\n\n      // adjusting focus after months were built\n      if ('firstDate' in patch) {\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n            state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      }\n\n      // adjusting months/years for the select box navigation\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        }\n\n        // months -> when current year or boundaries change\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months =\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {years: [], months: []};\n      }\n\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  dayTemplateData: (date: NgbDateStruct, current: {year: number, month: number}) => any;\n  footerTemplate: TemplateRef<any>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\nexport function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY})\nexport abstract class NgbDateAdapter<D> {\n  /**\n   * Converts a user-model date of type `D` to an `NgbDateStruct` for internal use.\n   */\n  abstract fromModel(value: D): NgbDateStruct;\n\n  /**\n   * Converts an internal `NgbDateStruct` date to a user-model date of type `D`.\n   */\n  abstract toModel(date: NgbDateStruct): D;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  toModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n}\n","export enum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40\n}\n","import {fromEvent, merge, Subject} from 'rxjs';\nimport {filter, take, takeUntil} from 'rxjs/operators';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {DatepickerServiceInputs, NgbDatepickerService} from './datepicker-service';\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {isChangedDate, isChangedMonth} from './datepicker-tools';\nimport {hasClassName} from '../util/util';\n\nexport const NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * An event emitted right before the navigation happens and the month displayed by the datepicker changes.\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * The currently displayed month.\n   */\n  current: {year: number, month: number};\n\n  /**\n   * The month we're navigating to.\n   */\n  next: {year: number, month: number};\n\n  /**\n   * Calling this function will prevent navigation from happening.\n   *\n   * @since 4.1.0\n   */\n  preventDefault: () => void;\n}\n\n/**\n * An interface that represents the readonly public state of the datepicker.\n *\n * Accessible via the `datepicker.state` getter\n *\n * @since 5.2.0\n */\nexport interface NgbDatepickerState {\n  /**\n   * The earliest date that can be displayed or selected\n   */\n  readonly minDate: NgbDate;\n\n  /**\n   * The latest date that can be displayed or selected\n   */\n  readonly maxDate: NgbDate;\n\n  /**\n   * The first visible date of currently displayed months\n   */\n  readonly firstDate: NgbDate;\n\n  /**\n   * The last visible date of currently displayed months\n   */\n  readonly lastDate: NgbDate;\n\n  /**\n   * The date currently focused by the datepicker\n   */\n  readonly focusedDate: NgbDate;\n\n  /**\n   * First dates of months currently displayed by the datepicker\n   *\n   * @since 5.3.0\n   */\n  readonly months: NgbDate[];\n}\n\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\n@Directive({selector: 'ng-template[ngbDatepickerContent]'})\nexport class NgbDatepickerContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\n@Component({\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker.scss'],\n  template: `\n    <ng-template #defaultDayTemplate let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\"\n                 let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <ng-template #defaultContentTemplate>\n      <div *ngFor=\"let month of model.months; let i = index;\" class=\"ngb-dp-month\">\n        <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\" class=\"ngb-dp-month-name\">\n          {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n        </div>\n        <ngb-datepicker-month [month]=\"month.firstDate\"></ngb-datepicker-month>\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate?.templateRef || defaultContentTemplate\"></ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService]\n})\nexport class NgbDatepicker implements OnDestroy,\n    OnChanges, OnInit, ControlValueAccessor {\n  model: DatepickerViewModel;\n\n  @ViewChild('defaultDayTemplate', {static: true}) private _defaultDayTemplate: TemplateRef<DayTemplateContext>;\n  @ViewChild('content', {static: true}) private _contentEl: ElementRef<HTMLElement>;\n  @ContentChild(NgbDatepickerContent, {static: true}) contentTemplate: NgbDatepickerContent;\n\n  private _controlValue: NgbDate;\n  private _destroyed$ = new Subject<void>();\n  private _publicState: NgbDatepickerState = <any>{};\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The latest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * The earliest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * An event emitted right before the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 5.2.0\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @deprecated 6.0.0 Please use 'dateSelect' output instead due to collision with native\n   * 'select' event.\n   */\n  @Output() select = this.dateSelect;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(\n      private _service: NgbDatepickerService, private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n,\n      config: NgbDatepickerConfig, cd: ChangeDetectorRef, private _elementRef: ElementRef<HTMLElement>,\n      private _ngbDateAdapter: NgbDateAdapter<any>, private _ngZone: NgZone) {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n        .forEach(input => this[input] = config[input]);\n\n    _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(date => { this.dateSelect.emit(date); });\n\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null;\n\n      // update public state\n      this._publicState = {\n        maxDate: model.maxDate,\n        minDate: model.minDate,\n        firstDate: model.firstDate,\n        lastDate: model.lastDate,\n        focusedDate: model.focusDate,\n        months: model.months.map(viewModel => viewModel.firstDate)\n      };\n\n      let navigationPrevented = false;\n      // emitting navigation event if the first month changes\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n          next: {year: newDate.year, month: newDate.month},\n          preventDefault: () => navigationPrevented = true\n        });\n\n        // can't prevent the very first navigation\n        if (navigationPrevented && oldDate !== null) {\n          this._service.open(oldDate);\n          return;\n        }\n      }\n\n      const newSelectedDate = model.selectedDate;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n\n      this.model = model;\n\n      // handling selection change\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\n        this._controlValue = newSelectedDate;\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      }\n\n      // handling focus change\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      cd.markForCheck();\n    });\n  }\n\n  /**\n   *  Returns the readonly public state of the datepicker\n   *\n   * @since 5.2.0\n   */\n  get state(): NgbDatepickerState { return this._publicState; }\n\n  /**\n   *  Returns the calendar service used in the specific datepicker instance.\n   *\n   *  @since 5.3.0\n   */\n  get calendar(): NgbCalendar { return this._calendar; }\n\n  /**\n   *  Focuses on given date.\n   */\n  focusDate(date: NgbDateStruct): void { this._service.focus(NgbDate.from(date)); }\n\n  /**\n   *  Selects focused date.\n   */\n  focusSelect(): void { this._service.focusSelect(); }\n\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus =\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    this._service.open(NgbDate.from(date ? date.day ? date as NgbDateStruct : {...date, day: 1} : null));\n  }\n\n  ngAfterViewInit() {\n    this._ngZone.runOutsideAngular(() => {\n      const focusIns$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusin');\n      const focusOuts$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusout');\n      const {nativeElement} = this._elementRef;\n\n      // we're changing 'focusVisible' only when entering or leaving months view\n      // and ignoring all focus events where both 'target' and 'related' target are day cells\n      merge(focusIns$, focusOuts$)\n          .pipe(\n              filter(\n                  ({target, relatedTarget}) =>\n                      !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') &&\n                        nativeElement.contains(target as Node) && nativeElement.contains(relatedTarget as Node))),\n              takeUntil(this._destroyed$))\n          .subscribe(({type}) => this._ngZone.run(() => this._service.set({focusVisible: type === 'focusin'})));\n    });\n  }\n\n  ngOnDestroy() { this._destroyed$.next(); }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      const inputs: DatepickerServiceInputs = {};\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n       'outsideDays']\n          .forEach(name => inputs[name] = this[name]);\n      this._service.set(inputs);\n\n      this.navigateTo(this.startDate);\n    }\n    if (!this.dayTemplate) {\n      this.dayTemplate = this._defaultDayTemplate;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const inputs: DatepickerServiceInputs = {};\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n     'outsideDays']\n        .filter(name => name in changes)\n        .forEach(name => inputs[name] = this[name]);\n    this._service.set(inputs);\n\n    if ('startDate' in changes) {\n      const {currentValue, previousValue} = changes.startDate;\n      if (isChangedMonth(previousValue, currentValue)) {\n        this.navigateTo(this.startDate);\n      }\n    }\n  }\n\n  onDateSelect(date: NgbDate) {\n    this._service.focus(date);\n    this._service.select(date, {emitEvent: true});\n  }\n\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\n\n  onNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n        break;\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n        break;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(disabled: boolean) { this._service.set({disabled}); }\n\n  writeValue(value) {\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n    this._service.select(this._controlValue);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDatepicker} from './datepicker';\nimport {Key} from '../util/key';\n\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerKeyboardService {\n  /**\n   * Processes a keyboard event.\n   */\n  processKey(event: KeyboardEvent, datepicker: NgbDatepicker) {\n    const {state, calendar} = datepicker;\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.PageUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n      case Key.PageDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n      case Key.End:\n        datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n        break;\n      case Key.Home:\n        datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n        break;\n      case Key.ArrowLeft:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n        break;\n      case Key.ArrowUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n      case Key.ArrowRight:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n        break;\n      case Key.ArrowDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n      case Key.Enter:\n      case Key.Space:\n        datepicker.focusSelect();\n        break;\n      default:\n        return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDatepicker} from './datepicker';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\n@Component({\n  selector: 'ngb-datepicker-month',\n  host: {'role': 'grid', '(keydown)': 'onKeyDown($event)'},\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-month.scss'],\n  template: `\n    <div *ngIf=\"datepicker.showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n      <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of viewModel.weekdays\" class=\"ngb-dp-weekday small\" role=\"columnheader\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"viewModel.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day); $event.preventDefault()\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [class.ngb-dp-today]=\"day.context.today\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbDatepickerMonth {\n  /**\n   * The first date of month to be rendered.\n   *\n   * This month must one of the months present in the\n   * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n   */\n  @Input()\n  set month(month: NgbDateStruct) {\n    this.viewModel = this._service.getMonth(month);\n  }\n\n  viewModel: MonthViewModel;\n\n  constructor(\n      public i18n: NgbDatepickerI18n, public datepicker: NgbDatepicker,\n      private _keyboardService: NgbDatepickerKeyboardService, private _service: NgbDatepickerService) {}\n\n  onKeyDown(event: KeyboardEvent) { this._keyboardService.processKey(event, this.datepicker); }\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !day.hidden) {\n      this.datepicker.onDateSelect(day.date);\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation.scss'],\n  template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickPrev($event)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickNext($event)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `\n})\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: MonthViewModel[] = [];\n  @Input() showSelect: boolean;\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() selectBoxes: {years: number[], months: number[]};\n\n  @Output() navigate = new EventEmitter<NavigationEvent>();\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  onClickPrev(event: MouseEvent) {\n    (event.currentTarget as HTMLElement).focus();\n    this.navigate.emit(this.navigation.PREV);\n  }\n\n  onClickNext(event: MouseEvent) {\n    (event.currentTarget as HTMLElement).focus();\n    this.navigate.emit(this.navigation.NEXT);\n  }\n}\n","import {NgZone} from '@angular/core';\nimport {fromEvent, Observable, race} from 'rxjs';\nimport {delay, filter, map, takeUntil, tap, withLatestFrom} from 'rxjs/operators';\nimport {Key} from './key';\nimport {closest} from './util';\n\nconst isContainedIn = (element: HTMLElement, array?: HTMLElement[]) =>\n    array ? array.some(item => item.contains(element)) : false;\n\nconst matchesSelectorIfAny = (element: HTMLElement, selector?: string) =>\n    !selector || closest(element, selector) != null;\n\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nconst isMobile = (() => {\n  const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) ||\n      (/Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2);\n  const isAndroid = () => /Android/.test(navigator.userAgent);\n\n  return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n})();\n\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\nconst wrapAsyncForMobile = fn => isMobile ? () => setTimeout(() => fn(), 100) : fn;\n\nexport function ngbAutoClose(\n    zone: NgZone, document: any, type: boolean | 'inside' | 'outside', close: () => void, closed$: Observable<any>,\n    insideElements: HTMLElement[], ignoreElements?: HTMLElement[], insideSelector?: string) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(wrapAsyncForMobile(() => {\n\n      const shouldCloseOnClick = (event: MouseEvent) => {\n        const element = event.target as HTMLElement;\n        if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n          return false;\n        }\n        if (type === 'inside') {\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n        } else if (type === 'outside') {\n          return !isContainedIn(element, insideElements);\n        } else /* if (type === true) */ {\n          return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n        }\n      };\n\n      const escapes$ = fromEvent<KeyboardEvent>(document, 'keydown')\n                           .pipe(\n                               takeUntil(closed$),\n                               // tslint:disable-next-line:deprecation\n                               filter(e => e.which === Key.Escape), tap(e => e.preventDefault()));\n\n\n      // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n      // because on 'mouseup' DOM nodes might be detached\n      const mouseDowns$ =\n          fromEvent<MouseEvent>(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n\n      const closeableClicks$ = fromEvent<MouseEvent>(document, 'mouseup')\n                                   .pipe(\n                                       withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0),\n                                       takeUntil(closed$)) as Observable<MouseEvent>;\n\n\n      race<Event>([escapes$, closeableClicks$]).subscribe(() => zone.run(close));\n    }));\n  }\n}\n","import {NgZone} from '@angular/core';\n\nimport {fromEvent, Observable} from 'rxjs';\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\n\nimport {Key} from './key';\n\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nexport function getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\n  const list: HTMLElement[] =\n      Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR) as NodeListOf<HTMLElement>)\n          .filter(el => el.tabIndex !== -1);\n  return [list[0], list[list.length - 1]];\n}\n\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nexport const ngbFocusTrap =\n    (zone: NgZone, element: HTMLElement, stopFocusTrap$: Observable<any>, refocusOnClick = false) => {\n      zone.runOutsideAngular(() => {\n        // last focused element\n        const lastFocusedElement$ =\n            fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n\n        // 'tab' / 'shift+tab' stream\n        fromEvent<KeyboardEvent>(element, 'keydown')\n            .pipe(\n                takeUntil(stopFocusTrap$),\n                // tslint:disable:deprecation\n                filter(e => e.which === Key.Tab),\n                // tslint:enable:deprecation\n                withLatestFrom(lastFocusedElement$))\n            .subscribe(([tabEvent, focusedElement]) => {\n              const[first, last] = getFocusableBoundaryElements(element);\n\n              if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n                last.focus();\n                tabEvent.preventDefault();\n              }\n\n              if (focusedElement === last && !tabEvent.shiftKey) {\n                first.focus();\n                tabEvent.preventDefault();\n              }\n            });\n\n        // inside click\n        if (refocusOnClick) {\n          fromEvent(element, 'click')\n              .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\n              .subscribe(lastFocusedElement => lastFocusedElement.focus());\n        }\n      });\n    };\n","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport class Positioning {\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\n\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n\n  position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n      elPosition = {\n        top: elPosition.top,\n        bottom: elPosition.bottom,\n        left: elPosition.left,\n        right: elPosition.right,\n        height: elPosition.height,\n        width: elPosition.width\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  /*\n    Return false if the element to position is outside the viewport\n  */\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n      boolean {\n    const[placementPrimary = 'top', placementSecondary = 'center'] = placement.split('-');\n\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n\n    const marginTop = parseFloat(targetElStyles.marginTop);\n    const marginBottom = parseFloat(targetElStyles.marginBottom);\n    const marginLeft = parseFloat(targetElStyles.marginLeft);\n    const marginRight = parseFloat(targetElStyles.marginRight);\n\n    let topPosition = 0;\n    let leftPosition = 0;\n\n    switch (placementPrimary) {\n      case 'top':\n        topPosition = (hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom));\n        break;\n      case 'bottom':\n        topPosition = (hostElPosition.top + hostElPosition.height);\n        break;\n      case 'left':\n        leftPosition = (hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight));\n        break;\n      case 'right':\n        leftPosition = (hostElPosition.left + hostElPosition.width);\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        topPosition = hostElPosition.top;\n        break;\n      case 'bottom':\n        topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n      case 'left':\n        leftPosition = hostElPosition.left;\n        break;\n      case 'right':\n        leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          leftPosition = (hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2);\n        } else {\n          topPosition = (hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2);\n        }\n        break;\n    }\n\n    /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n    // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n    targetElement.style.transform = `translate(${Math.round(leftPosition)}px, ${Math.round(topPosition)}px)`;\n\n    // Check if the targetElement is inside the viewport\n    const targetElBCR = targetElement.getBoundingClientRect();\n    const html = document.documentElement;\n    const windowHeight = window.innerHeight || html.clientHeight;\n    const windowWidth = window.innerWidth || html.clientWidth;\n\n    return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth &&\n        targetElBCR.bottom <= windowHeight;\n  }\n}\n\nconst placementSeparator = /\\s+/;\nexport const positionService = new Positioning();\n\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\n    appendToBody?: boolean, baseClass?: string): Placement {\n  let placementVals: Array<Placement> =\n      Array.isArray(placement) ? placement : placement.split(placementSeparator) as Array<Placement>;\n\n  const allowedPlacements = [\n    'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom',\n    'right-top', 'right-bottom'\n  ];\n\n  const classList = targetElement.classList;\n  const addClassesToTarget = (targetPlacement: Placement): Array<string> => {\n    const[primary, secondary] = targetPlacement.split('-');\n    const classes = [];\n    if (baseClass) {\n      classes.push(`${baseClass}-${primary}`);\n      if (secondary) {\n        classes.push(`${baseClass}-${primary}-${secondary}`);\n      }\n\n      classes.forEach((classname) => { classList.add(classname); });\n    }\n    return classes;\n  };\n\n  // Remove old placement classes to avoid issues\n  if (baseClass) {\n    allowedPlacements.forEach((placementToRemove) => { classList.remove(`${baseClass}-${placementToRemove}`); });\n  }\n\n  // replace auto placement with other placements\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function(obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj as Placement);\n      }\n    });\n  }\n\n  // coordinates where to position\n\n  // Required for transform:\n  const style = targetElement.style;\n  style.position = 'absolute';\n  style.top = '0';\n  style.left = '0';\n  style['will-change'] = 'transform';\n\n  let testPlacement: Placement;\n  let isInViewport = false;\n  for (testPlacement of placementVals) {\n    let addedClasses = addClassesToTarget(testPlacement);\n\n    if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n      isInViewport = true;\n      break;\n    }\n\n    // Remove the baseClasses for further calculation\n    if (baseClass) {\n      addedClasses.forEach((classname) => { classList.remove(classname); });\n    }\n  }\n\n  if (!isInViewport) {\n    // If nothing match, the first placement is the default one\n    testPlacement = placementVals[0];\n    addClassesToTarget(testPlacement);\n    positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n  }\n\n  return testPlacement;\n}\n\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\n\nexport type PlacementArray = Placement | Array<Placement>| string;\n","import {padNumber, toInteger, isNumber} from '../util/util';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {Injectable} from '@angular/core';\n\nexport function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY})\nexport abstract class NgbDateParserFormatter {\n  /**\n   * Parses the given `string` to an `NgbDateStruct`.\n   *\n   * Implementations should try their best to provide a result, even\n   * partial. They must return `null` if the value can't be parsed.\n   */\n  abstract parse(value: string): NgbDateStruct;\n\n  /**\n   * Formats the given `NgbDateStruct` to a `string`.\n   *\n   * Implementations should return an empty string if the given date is `null`,\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\n   */\n  abstract format(date: NgbDateStruct): string;\n}\n\n@Injectable()\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {year: toInteger(dateParts[0]), month: null, day: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct): string {\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbInputDatepickerConfig extends NgbDatepickerConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  container: null | 'body';\n  positionTarget: string | HTMLElement;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  restoreFocus: true | HTMLElement | string = true;\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator} from '@angular/forms';\n\nimport {ngbAutoClose} from '../util/autoclose';\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {PlacementArray, positionElements} from '../util/positioning';\n\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbInputDatepickerConfig} from './datepicker-input-config';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {isString} from '../util/util';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\nconst NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\n@Directive({\n  selector: 'input[ngbDatepicker]',\n  exportAs: 'ngbDatepicker',\n  host: {\n    '(input)': 'manualDateChange($event.target.value)',\n    '(change)': 'manualDateChange($event.target.value, true)',\n    '(focus)': 'onFocus()',\n    '(blur)': 'onBlur()',\n    '[disabled]': 'disabled'\n  },\n  providers: [\n    NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR,\n    {provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig}\n  ],\n})\nexport class NgbInputDatepicker implements OnChanges,\n    OnDestroy, ControlValueAccessor, Validator {\n  private _cRef: ComponentRef<NgbDatepicker> = null;\n  private _disabled = false;\n  private _elWithFocus = null;\n  private _model: NgbDate;\n  private _inputValue: string;\n  private _zoneSubscription: any;\n\n  /**\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n   *\n   * * `true` - the popup will close on both date selection and outside click.\n   * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\n   * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The earliest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * The latest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * The preferred placement of the datepicker popup.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * If `true`, when closing datepicker will focus element that was focused before datepicker was opened.\n   *\n   * Alternatively you could provide a selector or an `HTMLElement` to focus. If the element doesn't exist or invalid,\n   * we'll fallback to focus document body.\n   *\n   * @since 5.2.0\n   */\n  @Input() restoreFocus: true | string | HTMLElement;\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * A selector specifying the element the datepicker popup should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * A css selector or html element specifying the element the datepicker popup should be positioned against.\n   *\n   * By default the input is used as a target.\n   *\n   * @since 4.2.0\n   */\n  @Input() positionTarget: string | HTMLElement;\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 1.1.1\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * Event emitted right after the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event fired after closing datepicker window.\n   *\n   * @since 4.2.0\n   */\n  @Output() closed = new EventEmitter<void>();\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = value === '' || (value && value !== 'false');\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n  private _validatorChange = () => {};\n\n\n  constructor(\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\n      private _ngZone: NgZone, private _calendar: NgbCalendar, private _dateAdapter: NgbDateAdapter<any>,\n      @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      config: NgbInputDatepickerConfig) {\n    ['autoClose', 'container', 'positionTarget', 'placement'].forEach(input => this[input] = config[input]);\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => this._updatePopupPosition());\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\n\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    const {value} = c;\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n    if (!this._calendar.isValid(ngbDate)) {\n      return {'ngbDate': {invalid: value}};\n    }\n\n    if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n      return {'ngbDate': {minDate: {minDate: this.minDate, actual: value}}};\n    }\n\n    if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n      return {'ngbDate': {maxDate: {maxDate: this.maxDate, actual: value}}};\n    }\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value: string, updateView = false) {\n    const inputValueChanged = value !== this._inputValue;\n    if (inputValueChanged) {\n      this._inputValue = value;\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    }\n    if (inputValueChanged || !updateView) {\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n    }\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() { return !!this._cRef; }\n\n  /**\n   * Opens the datepicker popup.\n   *\n   * If the related form control contains a valid date, the corresponding month will be opened.\n   */\n  open() {\n    if (!this.isOpen()) {\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n      this._applyDatepickerInputs(this._cRef.instance);\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n      this._cRef.instance.ngOnInit();\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n\n      // date selection event handling\n      this._cRef.instance.registerOnChange((selectedDate) => {\n        this.writeValue(selectedDate);\n        this._onChange(selectedDate);\n        this._onTouched();\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      }\n\n      // focus handling\n      this._elWithFocus = this._document.activeElement;\n      ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n      this._cRef.instance.focus();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.closed, [],\n          [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n    }\n  }\n\n  /**\n   * Closes the datepicker popup.\n   */\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n      this._cRef = null;\n      this.closed.emit();\n      this._changeDetector.markForCheck();\n\n      // restore focus\n      let elementToFocus = this._elWithFocus;\n      if (isString(this.restoreFocus)) {\n        elementToFocus = this._document.querySelector(this.restoreFocus);\n      } else if (this.restoreFocus !== undefined) {\n        elementToFocus = this.restoreFocus;\n      }\n\n      // in IE document.activeElement can contain an object without 'focus()' sometimes\n      if (elementToFocus && elementToFocus['focus']) {\n        elementToFocus.focus();\n      } else {\n        this._document.body.focus();\n      }\n    }\n  }\n\n  /**\n   * Toggles the datepicker popup.\n   */\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() { this._onTouched(); }\n\n  onFocus() { this._elWithFocus = this._elRef.nativeElement; }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n\n      if (this.isOpen()) {\n        if (changes['minDate']) {\n          this._cRef.instance.minDate = this._dateAdapter.toModel(changes.minDate.currentValue);\n        }\n        if (changes['maxDate']) {\n          this._cRef.instance.maxDate = this._dateAdapter.toModel(changes.maxDate.currentValue);\n        }\n        this._cRef.instance.ngOnChanges(changes);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n        .forEach((optionName: string) => {\n          if (this[optionName] !== undefined) {\n            datepickerInstance[optionName] = this[optionName];\n          }\n        });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  private _applyPopupStyling(nativeElement: any) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n    this._renderer.addClass(nativeElement, 'show');\n\n    if (this.container === 'body') {\n      this._renderer.addClass(nativeElement, 'ngb-dp-body');\n    }\n  }\n\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n    datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n    datepickerInstance.dateSelect.subscribe(date => {\n      this.dateSelect.emit(date);\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  private _writeModelValue(model: NgbDate) {\n    const value = this._parserFormatter.format(model);\n    this._inputValue = value;\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n      this._onTouched();\n    }\n  }\n\n  private _fromDateStruct(date: NgbDateStruct): NgbDate {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n\n  private _updatePopupPosition() {\n    if (!this._cRef) {\n      return;\n    }\n\n    let hostElement: HTMLElement;\n    if (isString(this.positionTarget)) {\n      hostElement = this._document.querySelector(this.positionTarget);\n    } else if (this.positionTarget instanceof HTMLElement) {\n      hostElement = this.positionTarget;\n    } else {\n      hostElement = this._elRef.nativeElement;\n    }\n\n    if (this.positionTarget && !hostElement) {\n      throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n    }\n\n    positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: '[ngbDatepickerDayView]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-day-view.scss'],\n  host: {\n    'class': 'btn-light',\n    '[class.bg-primary]': 'selected',\n    '[class.text-white]': 'selected',\n    '[class.text-muted]': 'isMuted()',\n    '[class.outside]': 'isMuted()',\n    '[class.active]': 'focused'\n  },\n  template: `{{ i18n.getDayNumerals(date) }}`\n})\nexport class NgbDatepickerDayView {\n  @Input() currentMonth: number;\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() focused: boolean;\n  @Input() selected: boolean;\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  AfterViewChecked,\n  ViewChild,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation-select',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation-select.scss'],\n  template: `\n    <select #month\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select #year\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `\n})\nexport class NgbDatepickerNavigationSelect implements AfterViewChecked {\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: number[];\n  @Input() years: number[];\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  @ViewChild('month', {static: true, read: ElementRef}) monthSelect: ElementRef;\n  @ViewChild('year', {static: true, read: ElementRef}) yearSelect: ElementRef;\n\n  private _month = -1;\n  private _year = -1;\n\n  constructor(public i18n: NgbDatepickerI18n, private _renderer: Renderer2) {}\n\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n\n  ngAfterViewChecked() {\n    if (this.date) {\n      if (this.date.month !== this._month) {\n        this._month = this.date.month;\n        this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n      }\n      if (this.date.year !== this._year) {\n        this._year = this.date.year;\n        this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n      }\n    }\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\n\n@Injectable()\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  abstract getDaysPerMonth(month: number, year: number): number;\n\n  /**\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\n   * `gDate` is s JS Date to be converted to Hijri.\n   */\n  abstract fromGregorian(gDate: Date): NgbDate;\n\n  /**\n   * Converts the current Hijri date to Gregorian.\n   */\n  abstract toGregorian(hDate: NgbDate): Date;\n\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this._setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\n\n\n  isValid(date: NgbDate): boolean {\n    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n        !isNaN(this.toGregorian(date).getTime());\n  }\n\n  private _setDay(date: NgbDate, day: number): NgbDate {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n    date.day = day;\n    return date;\n  }\n\n  private _setMonth(date: NgbDate, month: number): NgbDate {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  private _setYear(date: NgbDate, year: number): NgbDate {\n    date.year = +year;\n    return date;\n  }\n}\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear: number): boolean {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate: Date): boolean {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year: number): number {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\n@Injectable()\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate: Date): NgbDate {\n    const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor(\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay =\n        hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400);\n\n    const yearday = wjd - gYearStart;\n\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) +\n        Math.floor(\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n            1);\n\n    const day = wjd - tjd2 + 1;\n\n    return new Date(year, month - 1, day);\n  }\n\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  getDaysPerMonth(month: number, year: number): number {\n    year = year + Math.floor(month / 13);\n    month = ((month - 1) % 12) + 1;\n    let length = 29 + month % 2;\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n    return length;\n  }\n}\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nconst MONTH_LENGTH = [\n  // 1300-1304\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n  // 1305-1309\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n  // 1310-1314\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n  // 1315-1319\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n  // 1320-1324\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n  // 1325-1329\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n  // 1330-1334\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n  // 1335-1339\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n  // 1340-1344\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n  // 1345-1349\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n  // 1350-1354\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n  // 1355-1359\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n  // 1360-1364\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n  // 1365-1369\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n  // 1370-1374\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n  // 1375-1379\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n  // 1380-1384\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n  // 1385-1389\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n  // 1390-1394\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n  // 1395-1399\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n  // 1400-1404\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n  // 1405-1409\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n  // 1410-1414\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n  // 1415-1419\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n  // 1420-1424\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n  // 1425-1429\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n  // 1430-1434\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n  // 1435-1439\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n  // 1440-1444\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n  // 1445-1449\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n  // 1450-1454\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n  // 1455-1459\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n  // 1460-1464\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n  // 1465-1469\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n  // 1470-1474\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n  // 1475-1479\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n  // 1480-1484\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n  // 1485-1489\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n  // 1490-1494\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n  // 1495-1499\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n  // 1500-1504\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n  // 1505-1509\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n  // 1510-1514\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n  // 1515-1519\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n  // 1520-1524\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n  // 1525-1529\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n  // 1530-1534\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n  // 1535-1539\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n  // 1540-1544\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n  // 1545-1549\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n  // 1550-1554\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n  // 1555-1559\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n  // 1560-1564\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n  // 1565-1569\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n  // 1570-1574\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n  // 1575-1579\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n  // 1580-1584\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n  // 1585-1589\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n  // 1590-1594\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n  // 1595-1599\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n  // 1600\n  '001010011101'\n];\n\nfunction getDaysDiff(date1: Date, date2: Date): number {\n  // Ignores the time part in date1 and date2:\n  const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n  const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  const diff = Math.abs(time1 - time2);\n  return Math.round(diff / ONE_DAY);\n}\n\n@Injectable()\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate: Date): NgbDate {\n    let hDay = 1, hMonth = 0, hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri hMonth.\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n  * `hYear` is any Hijri hYear.\n  */\n  getDaysPerMonth(hMonth: number, hYear: number): number {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n}\n","import {NgbDate} from '../ngb-date';\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nexport function toGregorian(jalaliDate: NgbDate): Date {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\n  date.year = +yearValue;\n  return date;\n}\n\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\n  let mDays = getDaysPerMonth(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a: number, b: number) {\n  return Math.trunc(a / b);\n}\n\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear: number) {\n  // Jalali years starting the 33-year rule.\n  let breaks =\n      [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  }\n\n  // Find the limiting years for the Jalali year jalaliYear.\n  let jump;\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n    if (jalaliYear < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n  let n = jalaliYear - jp;\n\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n\n  // And the same in the Gregorian calendar (until the year gYear).\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n\n  // Determine the Gregorian date of Farvardin the 1st.\n  const march = 20 + leapJ - leapG;\n\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {leap: leap, gy: gYear, march: march};\n}\n\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber: number) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber: number) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear()  // Calculate Gregorian year (gy).\n      ,\n      jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay,\n      jalaliMonth, numberOfDays;\n\n  // Find number of days that passed since 1 Farvardin.\n  numberOfDays = julianDayNumber - gregorianDay;\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month: number, year: number): number {\n  if (month <= 6) {\n    return 31;\n  }\n  if (month <= 11) {\n    return 30;\n  }\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n  return 29;\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {isInteger} from '../../util/util';\n\nimport {fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian} from './jalali';\n\n@Injectable()\nexport class NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n        !isNaN(toGregorian(date).getTime());\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\n\nfunction isGregorianLeapYear(year: number): boolean {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year: number): number {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n\n  let dayOfWeek = dayNumber % 7;  // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month: number, year: number): number {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (isGregorianLeapYear(year)) {\n    days[1]++;\n  }\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year: number): number {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year: number): number {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nexport function isHebrewLeapYear(year: number): boolean {\n  let b = (year * 12 + 17) % 19;\n  return b >= ((b < 0) ? -7 : 12);\n}\n\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nexport function getDaysInHebrewMonth(month: number, year: number): number {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n                               [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n  if (yearType > 0) {\n    daysInMonth[2]++;  // Kislev gets an extra day in normal or complete years.\n  }\n  if (yearType > 1) {\n    daysInMonth[1]++;  // Heshvan gets an extra day in complete years only.\n  }\n  return daysInMonth[month - 1];\n}\n\nexport function getDayNumberInHebrewYear(date: NgbDate): number {\n  let numberOfDay = 0;\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n  return numberOfDay + date.day;\n}\n\nexport function setHebrewMonth(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\nexport function setHebrewDay(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n      Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n      Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n  let hMonth = 1;\n  let hDay = dayOfYear;\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n  return new NgbDate(hYear, hMonth, hDay);\n}\n\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nexport function toGregorian(hebrewDate: NgbDateStruct | NgbDate): Date {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n  if (!after) {\n    diffDays = -diffDays;\n  }\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nexport function hebrewNumerals(numerals: number): string {\n  if (!numerals) {\n    return '';\n  }\n  const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n  const hArray10_19 = [\n    '\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6',\n    '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'\n  ];\n  const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n  const hArray100_900 = [\n    '', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea',\n    '\\u05ea\\u05ea\\u05e7'\n  ];\n  const hArray1000_9000 = [\n    '', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1',\n    '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'\n  ];\n  const geresh = '\\u05f3', gershaim = '\\u05f4';\n  let mem = 0;\n  let result = [];\n  let step = 0;\n  while (numerals > 0) {\n    let m = numerals % 10;\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n      break;\n    }\n    numerals = Math.floor(numerals / 10);\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n    step++;\n  }\n  result = result.join('').split('');\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n  return result.join('');\n}\n","import {NgbDate} from '../ngb-date';\nimport {fromJSDate, NgbCalendar, NgbPeriod, toJSDate} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\nimport {\n  fromGregorian,\n  getDayNumberInHebrewYear,\n  getDaysInHebrewMonth,\n  isHebrewLeapYear,\n  toGregorian,\n  setHebrewDay,\n  setHebrewMonth\n} from './hebrew';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbCalendarHebrew extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths(year?: number) {\n    if (year && isHebrewLeapYear(year)) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    } else {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }\n\n  getWeeksPerMonth() { return 6; }\n\n  isValid(date: NgbDate): boolean {\n    let b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n    b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n    b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n    return b && !isNaN(toGregorian(date).getTime());\n  }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date.year += number;\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setHebrewMonth(date, number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setHebrewDay(date, number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    const date = week[week.length - 1];\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  /**\n   * @since 3.4.0\n   */\n  toGregorian(date: NgbDate): NgbDate { return fromJSDate(toGregorian(date)); }\n\n  /**\n   * @since 3.4.0\n   */\n  fromGregorian(date: NgbDate): NgbDate { return fromGregorian(toJSDate(date)); }\n}\n","export enum ModalDismissReasons {\n  BACKDROP_CLICK,\n  ESC\n}\n","import {NgbDatepickerI18n} from '../datepicker-i18n';\nimport {NgbDateStruct} from '../../index';\nimport {hebrewNumerals, isHebrewLeapYear} from './hebrew';\nimport {Injectable} from '@angular/core';\n\n\nconst WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nconst MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nconst MONTHS_LEAP =\n    ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n  getMonthShortName(month: number, year?: number): string { return this.getMonthFullName(month, year); }\n\n  getMonthFullName(month: number, year?: number): string {\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n  }\n\n  getWeekdayShortName(weekday: number): string { return WEEKDAYS[weekday - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n  }\n\n  getDayNumerals(date: NgbDateStruct): string { return hebrewNumerals(date.day); }\n\n  getWeekNumerals(weekNumber: number): string { return hebrewNumerals(weekNumber); }\n\n  getYearNumerals(year: number): string { return hebrewNumerals(year); }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateAdapter} from './ngb-date-adapter';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  /**\n   * Converts a native `Date` to a `NgbDateStruct`.\n   */\n  fromModel(date: Date): NgbDateStruct {\n    return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n  }\n\n  /**\n   * Converts a `NgbDateStruct` to a native `Date`.\n   */\n  toModel(date: NgbDateStruct): Date {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n                                                                                          null;\n  }\n\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // avoid 30 -> 1930 conversion\n    jsDate.setFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {NgbDateNativeAdapter} from './ngb-date-native-adapter';\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n    // avoid 30 -> 1930 conversion\n    jsDate.setUTCFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDatepicker, NgbDatepickerContent} from './datepicker';\nimport {NgbDatepickerMonth} from './datepicker-month';\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\nimport {NgbInputDatepicker} from './datepicker-input';\nimport {NgbDatepickerDayView} from './datepicker-day-view';\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\n\nexport {NgbDatepicker, NgbDatepickerContent, NgbDatepickerNavigateEvent, NgbDatepickerState} from './datepicker';\nexport {NgbInputDatepicker} from './datepicker-input';\nexport {NgbCalendar, NgbPeriod, NgbCalendarGregorian} from './ngb-calendar';\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\nexport {NgbCalendarPersian} from './jalali/ngb-calendar-persian';\nexport {NgbCalendarHebrew} from './hebrew/ngb-calendar-hebrew';\nexport {NgbDatepickerI18nHebrew} from './hebrew/datepicker-i18n-hebrew';\nexport {NgbDatepickerMonth} from './datepicker-month';\nexport {NgbDatepickerDayView} from './datepicker-day-view';\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nexport {NgbDatepickerConfig} from './datepicker-config';\nexport {NgbInputDatepickerConfig} from './datepicker-input-config';\nexport {NgbDatepickerI18n} from './datepicker-i18n';\nexport {NgbDateStruct} from './ngb-date-struct';\nexport {NgbDate} from './ngb-date';\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\nexport {NgbDateNativeUTCAdapter} from './adapters/ngb-date-native-utc-adapter';\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nexport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\n\n@NgModule({\n  declarations: [\n    NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect,\n    NgbDatepickerDayView, NgbInputDatepicker\n  ],\n  exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth],\n  imports: [CommonModule, FormsModule],\n  entryComponents: [NgbDatepicker]\n})\nexport class NgbDatepickerModule {\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDropdownConfig {\n  autoClose: boolean | 'outside' | 'inside' = true;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  container: null | 'body';\n}\n","import {\n  ChangeDetectorRef,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  AfterContentInit,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  Optional\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, Subject, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {Placement, PlacementArray, positionElements} from '../util/positioning';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\n\nimport {NgbDropdownConfig} from './dropdown-config';\n\n@Directive({selector: '.navbar'})\nexport class NgbNavbar {\n}\n\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\n@Directive({selector: '[ngbDropdownItem]', host: {'class': 'dropdown-item', '[class.disabled]': 'disabled'}})\nexport class NgbDropdownItem {\n  private _disabled = false;\n\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = <any>value === '' || value === true;  // accept an empty attribute as true\n  }\n\n  get disabled(): boolean { return this._disabled; }\n\n  constructor(public elementRef: ElementRef<HTMLElement>) {}\n}\n\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\n@Directive({\n  selector: '[ngbDropdownMenu]',\n  host: {\n    '[class.dropdown-menu]': 'true',\n    '[class.show]': 'dropdown.isOpen()',\n    '[attr.x-placement]': 'placement',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)',\n    '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n    '(keydown.Space)': 'dropdown.onKeyDown($event)'\n  }\n})\nexport class NgbDropdownMenu {\n  placement: Placement = 'bottom';\n  isOpen = false;\n\n  @ContentChildren(NgbDropdownItem) menuItems: QueryList<NgbDropdownItem>;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown) {}\n}\n\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\n@Directive({\n  selector: '[ngbDropdownAnchor]',\n  host: {'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()'}\n})\nexport class NgbDropdownAnchor {\n  anchorEl;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>) {\n    this.anchorEl = _elementRef.nativeElement;\n  }\n\n  getNativeElement() { return this._elementRef.nativeElement; }\n}\n\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\n@Directive({\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'dropdown.toggle()',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)'\n  },\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n}\n\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\nexport class NgbDropdown implements AfterContentInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _zoneSubscription: Subscription;\n  private _bodyContainer: HTMLElement;\n\n  @ContentChild(NgbDropdownMenu, {static: false}) private _menu: NgbDropdownMenu;\n  @ContentChild(NgbDropdownMenu, {read: ElementRef, static: false}) private _menuElement: ElementRef;\n  @ContentChild(NgbDropdownAnchor, {static: false}) private _anchor: NgbDropdownAnchor;\n\n  /**\n   * Indicates whether the dropdown should be closed when clicking one of dropdown items or pressing ESC.\n   *\n   * * `true` - the dropdown will close on both outside and inside (menu) clicks.\n   * * `false` - the dropdown can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the dropdown will close on inside menu clicks, but not outside clicks.\n   * * `\"outside\"` - the dropdown will close only on the outside clicks and not on menu clicks.\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside';\n\n  /**\n   * Defines whether or not the dropdown menu is opened initially.\n   */\n  @Input('open') _open = false;\n\n  /**\n   * The preferred placement of the dropdown.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n  * A selector specifying the element the dropdown should be appended to.\n  * Currently only supports \"body\".\n  *\n  * @since 4.1.0\n  */\n  @Input() container: null | 'body';\n\n  /**\n   * Enable or disable the dynamic positioning. The default value is dynamic unless the dropdown is used\n   * inside a Bootstrap navbar. If you need custom placement for a dropdown in a navbar, set it to\n   * dynamic explicitly. See the [positioning of dropdown](#/positioning#dropdown)\n   * and the [navbar demo](/#/components/dropdown/examples#navbar) for more details.\n   *\n   * @since 4.2.0\n   */\n  @Input() display: 'dynamic' | 'static';\n\n  /**\n   * An event fired when the dropdown is opened or closed.\n   *\n   * The event payload is a `boolean`:\n   * * `true` - the dropdown was opened\n   * * `false` - the dropdown was closed\n   */\n  @Output() openChange = new EventEmitter<boolean>();\n\n  constructor(\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2,\n      @Optional() ngbNavbar: NgbNavbar) {\n    this.placement = config.placement;\n    this.container = config.container;\n    this.autoClose = config.autoClose;\n\n    this.display = ngbNavbar ? 'static' : 'dynamic';\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n  }\n\n  ngAfterContentInit() {\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this._applyPlacementClasses();\n      if (this._open) {\n        this._setCloseHandlers();\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.container && this._open) {\n      this._applyContainer(this.container);\n    }\n\n    if (changes.placement && !changes.placement.isFirstChange) {\n      this._applyPlacementClasses();\n    }\n  }\n\n  /**\n   * Checks if the dropdown menu is open.\n   */\n  isOpen(): boolean { return this._open; }\n\n  /**\n   * Opens the dropdown menu.\n   */\n  open(): void {\n    if (!this._open) {\n      this._open = true;\n      this._applyContainer(this.container);\n      this.openChange.emit(true);\n      this._setCloseHandlers();\n    }\n  }\n\n  private _setCloseHandlers() {\n    const anchor = this._anchor;\n    ngbAutoClose(\n        this._ngZone, this._document, this.autoClose, () => this.close(), this._closed$,\n        this._menu ? [this._menuElement.nativeElement] : [], anchor ? [anchor.getNativeElement()] : [],\n        '.dropdown-item,.dropdown-divider');\n  }\n\n  /**\n   * Closes the dropdown menu.\n   */\n  close(): void {\n    if (this._open) {\n      this._open = false;\n      this._resetContainer();\n      this._closed$.next();\n      this.openChange.emit(false);\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the dropdown menu.\n   */\n  toggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  ngOnDestroy() {\n    this._resetContainer();\n\n    this._closed$.next();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    const key = event.which;\n    const itemElements = this._getMenuElements();\n\n    let position = -1;\n    let isEventFromItems = false;\n    let itemElement: HTMLElement = null;\n    const isEventFromToggle = this._isEventFromToggle(event);\n\n    if (!isEventFromToggle && itemElements.length) {\n      itemElements.forEach((item, index) => {\n        if (item.contains(event.target as HTMLElement)) {\n          isEventFromItems = true;\n          itemElement = item;\n        }\n        if (item === this._document.activeElement) {\n          position = index;\n        }\n      });\n    }\n\n    // closing on Enter / Space\n    if (key === Key.Space || key === Key.Enter) {\n      if (isEventFromItems && (this.autoClose === true || this.autoClose === 'inside')) {\n        // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n        // So we have to register a one-time click handler that will fire after any user defined click handlers\n        // to close the dropdown\n        fromEvent(itemElement, 'click').pipe(take(1)).subscribe(() => this.close());\n      }\n      return;\n    }\n\n    // opening / navigating\n    if (isEventFromToggle || isEventFromItems) {\n      this.open();\n\n      if (itemElements.length) {\n        switch (key) {\n          case Key.ArrowDown:\n            position = Math.min(position + 1, itemElements.length - 1);\n            break;\n          case Key.ArrowUp:\n            if (this._isDropup() && position === -1) {\n              position = itemElements.length - 1;\n              break;\n            }\n            position = Math.max(position - 1, 0);\n            break;\n          case Key.Home:\n            position = 0;\n            break;\n          case Key.End:\n            position = itemElements.length - 1;\n            break;\n        }\n        itemElements[position].focus();\n      }\n      event.preventDefault();\n    }\n  }\n\n  private _isDropup(): boolean { return this._elementRef.nativeElement.classList.contains('dropup'); }\n\n  private _isEventFromToggle(event: KeyboardEvent) {\n    return this._anchor.getNativeElement().contains(event.target as HTMLElement);\n  }\n\n  private _getMenuElements(): HTMLElement[] {\n    const menu = this._menu;\n    if (menu == null) {\n      return [];\n    }\n    return menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\n  }\n\n  private _positionMenu() {\n    const menu = this._menu;\n    if (this.isOpen() && menu) {\n      this._applyPlacementClasses(\n          this.display === 'dynamic' ?\n              positionElements(\n                  this._anchor.anchorEl, this._bodyContainer || this._menuElement.nativeElement, this.placement,\n                  this.container === 'body') :\n              this._getFirstPlacement(this.placement));\n    }\n  }\n\n  private _getFirstPlacement(placement: PlacementArray): Placement {\n    return Array.isArray(placement) ? placement[0] : placement.split(' ')[0] as Placement;\n  }\n\n  private _resetContainer() {\n    const renderer = this._renderer;\n    const menuElement = this._menuElement;\n    if (menuElement) {\n      const dropdownElement = this._elementRef.nativeElement;\n      const dropdownMenuElement = menuElement.nativeElement;\n\n      renderer.appendChild(dropdownElement, dropdownMenuElement);\n      renderer.removeStyle(dropdownMenuElement, 'position');\n      renderer.removeStyle(dropdownMenuElement, 'transform');\n    }\n    if (this._bodyContainer) {\n      renderer.removeChild(this._document.body, this._bodyContainer);\n      this._bodyContainer = null;\n    }\n  }\n\n  private _applyContainer(container: null | 'body' = null) {\n    this._resetContainer();\n    if (container === 'body') {\n      const renderer = this._renderer;\n      const dropdownMenuElement = this._menuElement.nativeElement;\n      const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\n\n      // Override some styles to have the positionning working\n      renderer.setStyle(bodyContainer, 'position', 'absolute');\n      renderer.setStyle(dropdownMenuElement, 'position', 'static');\n      renderer.setStyle(bodyContainer, 'z-index', '1050');\n\n      renderer.appendChild(bodyContainer, dropdownMenuElement);\n      renderer.appendChild(this._document.body, bodyContainer);\n    }\n  }\n\n  private _applyPlacementClasses(placement?: Placement) {\n    const menu = this._menu;\n    if (menu) {\n      if (!placement) {\n        placement = this._getFirstPlacement(this.placement);\n      }\n\n      const renderer = this._renderer;\n      const dropdownElement = this._elementRef.nativeElement;\n\n      // remove the current placement classes\n      renderer.removeClass(dropdownElement, 'dropup');\n      renderer.removeClass(dropdownElement, 'dropdown');\n      menu.placement = this.display === 'static' ? null : placement;\n\n      /*\n      * apply the new placement\n      * in case of top use up-arrow or down-arrow otherwise\n      */\n      const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n      renderer.addClass(dropdownElement, dropdownClass);\n\n      const bodyContainer = this._bodyContainer;\n      if (bodyContainer) {\n        renderer.removeClass(bodyContainer, 'dropup');\n        renderer.removeClass(bodyContainer, 'dropdown');\n        renderer.addClass(bodyContainer, dropdownClass);\n      }\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\n\nexport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\nexport {NgbDropdownConfig} from './dropdown-config';\n\nconst NGB_DROPDOWN_DIRECTIVES =\n    [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\n\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\nexport class NgbDropdownModule {\n}\n","import {Injectable, Injector} from '@angular/core';\n\n/**\n * Options available when opening new modal windows with `NgbModal.open()` method.\n */\nexport interface NgbModalOptions {\n  /**\n   * `aria-labelledby` attribute value to set on the modal window.\n   *\n   * @since 2.2.0\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * If `true`, the backdrop element will be created for a given modal.\n   *\n   * Alternatively, specify `'static'` for a backdrop which doesn't close the modal on click.\n   *\n   * Default value is `true`.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * Callback right before the modal will be dismissed.\n   *\n   * If this function returns:\n   * * `false`\n   * * a promise resolved with `false`\n   * * a promise that is rejected\n   *\n   * then the modal won't be dismissed.\n   */\n  beforeDismiss?: () => boolean | Promise<boolean>;\n\n  /**\n   * If `true`, the modal will be centered vertically.\n   *\n   * Default value is `false`.\n   *\n   * @since 1.1.0\n   */\n  centered?: boolean;\n\n  /**\n   * A selector specifying the element all new modal windows should be appended to.\n   * Since v5.3.0 it is also possible to pass the reference to an `HTMLElement`.\n   *\n   * If not specified, will be `body`.\n   */\n  container?: string | HTMLElement;\n\n  /**\n   * The `Injector` to use for modal content.\n   */\n  injector?: Injector;\n\n  /**\n   * If `true`, the modal will be closed when `Escape` key is pressed\n   *\n   * Default value is `true`.\n   */\n  keyboard?: boolean;\n\n  /**\n   * Scrollable modal content (false by default).\n   *\n   * @since 5.0.0\n   */\n  scrollable?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg' | 'xl' | string;\n\n  /**\n   * A custom class to append to the modal window.\n   */\n  windowClass?: string;\n\n  /**\n   * A custom class to append to the modal backdrop.\n   *\n   * @since 1.1.0\n   */\n  backdropClass?: string;\n}\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n*\n* @since 3.1.0\n*/\n@Injectable({providedIn: 'root'})\nexport class NgbModalConfig implements Required<NgbModalOptions> {\n  ariaLabelledBy: string;\n  backdrop: boolean | 'static' = true;\n  beforeDismiss: () => boolean | Promise<boolean>;\n  centered: boolean;\n  container: string;\n  injector: Injector;\n  keyboard = true;\n  scrollable: boolean;\n  size: 'sm' | 'lg' | 'xl' | string;\n  windowClass: string;\n  backdropClass: string;\n}\n","import {\n  Injector,\n  TemplateRef,\n  ViewRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentRef,\n  ComponentFactoryResolver,\n  ApplicationRef\n} from '@angular/core';\n\nexport class ContentRef {\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\n}\n\nexport class PopupService<T> {\n  private _windowRef: ComponentRef<T>;\n  private _contentRef: ContentRef;\n\n  constructor(\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _componentFactoryResolver: ComponentFactoryResolver,\n      private _applicationRef: ApplicationRef) {}\n\n  open(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), this._viewContainerRef.length,\n          this._injector, this._contentRef.nodes);\n    }\n\n    return this._windowRef;\n  }\n\n  close() {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n\n      if (this._contentRef.viewRef) {\n        this._applicationRef.detachView(this._contentRef.viewRef);\n        this._contentRef.viewRef.destroy();\n        this._contentRef = null;\n      }\n    }\n  }\n\n  private _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = content.createEmbeddedView(context);\n      this._applicationRef.attachView(viewRef);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n}\n","import {Injectable, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\nconst noop = () => {};\n\n\n\n/** Type for the callback used to revert the scrollbar compensation. */\nexport type CompensationReverter = () => void;\n\n\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollBar {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  /**\n   * To be called right before a potential vertical scrollbar would be removed:\n   *\n   * - if there was a scrollbar, adds some compensation padding to the body\n   * to keep the same layout as when the scrollbar is there\n   * - if there was none, there is nothing to do\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n  compensate(): CompensationReverter {\n    const width = this._getWidth();\n    return !this._isPresent(width) ? noop : this._adjustBody(width);\n  }\n\n  /**\n   * Adds a padding of the given width on the right of the body.\n   *\n   * @return a callback used to revert the padding to its previous value\n   */\n  private _adjustBody(scrollbarWidth: number): CompensationReverter {\n    const body = this._document.body;\n    const userSetPaddingStyle = body.style.paddingRight;\n    const actualPadding = parseFloat(window.getComputedStyle(body)['padding-right']);\n    body.style['padding-right'] = `${actualPadding + scrollbarWidth}px`;\n    return () => body.style['padding-right'] = userSetPaddingStyle;\n  }\n\n  /**\n   * Tells whether a scrollbar is currently present on the body.\n   *\n   * @return true if scrollbar is present, false otherwise\n   */\n  private _isPresent(scrollbarWidth: number): boolean {\n    const rect = this._document.body.getBoundingClientRect();\n    const bodyToViewportGap = window.innerWidth - (rect.left + rect.right);\n    const uncertainty = 0.1 * scrollbarWidth;\n    return bodyToViewportGap >= scrollbarWidth - uncertainty;\n  }\n\n  /**\n   * Calculates and returns the width of a scrollbar.\n   *\n   * @return the width of a scrollbar on this page\n   */\n  private _getWidth(): number {\n    const measurer = this._document.createElement('div');\n    measurer.className = 'modal-scrollbar-measure';\n\n    const body = this._document.body;\n    body.appendChild(measurer);\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n    body.removeChild(measurer);\n\n    return width;\n  }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'ngb-modal-backdrop',\n  encapsulation: ViewEncapsulation.None,\n  template: '',\n  host:\n      {'[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")', 'style': 'z-index: 1050'}\n})\nexport class NgbModalBackdrop {\n  @Input() backdropClass: string;\n}\n","import {ComponentRef} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nimport {ContentRef} from '../util/popup';\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nexport class NgbActiveModal {\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {}\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {}\n}\n\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nexport class NgbModalRef {\n  private _resolve: (result?: any) => void;\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The instance of a component used for the modal content.\n   *\n   * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n   */\n  get componentInstance(): any {\n    if (this._contentRef && this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n\n  /**\n   * The promise that is resolved when the modal is closed and rejected when the modal is dismissed.\n   */\n  result: Promise<any>;\n\n  constructor(\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {\n    if (this._windowCmptRef) {\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n\n  private _dismiss(reason?: any) {\n    this._reject(reason);\n    this._removeModalElements();\n  }\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (dismiss && dismiss.then) {\n          dismiss.then(\n              result => {\n                if (result !== false) {\n                  this._dismiss(reason);\n                }\n              },\n              () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  private _removeModalElements() {\n    const windowNativeEl = this._windowCmptRef.location.nativeElement;\n    windowNativeEl.parentNode.removeChild(windowNativeEl);\n    this._windowCmptRef.destroy();\n\n    if (this._backdropCmptRef) {\n      const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n      backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n      this._backdropCmptRef.destroy();\n    }\n\n    if (this._contentRef && this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._windowCmptRef = null;\n    this._backdropCmptRef = null;\n    this._contentRef = null;\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {fromEvent, Subject} from 'rxjs';\nimport {filter, switchMap, take, takeUntil, tap} from 'rxjs/operators';\n\nimport {getFocusableBoundaryElements} from '../util/focus-trap';\nimport {Key} from '../util/key';\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    '[attr.aria-modal]': 'true',\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\n  },\n  template: `\n    <div #dialog [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\n     (scrollable ? ' modal-dialog-scrollable' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./modal.scss']\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n  @ViewChild('dialog', {static: true}) private _dialogEl: ElementRef<HTMLElement>;\n\n  @Input() ariaLabelledBy: string;\n  @Input() backdrop: boolean | string = true;\n  @Input() centered: string;\n  @Input() keyboard = true;\n  @Input() scrollable: string;\n  @Input() size: string;\n  @Input() windowClass: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  constructor(\n      @Inject(DOCUMENT) private _document: any, private _elRef: ElementRef<HTMLElement>, private _zone: NgZone) {}\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() { this._elWithFocus = this._document.activeElement; }\n\n  ngAfterViewInit() {\n    const {nativeElement} = this._elRef;\n    this._zone.runOutsideAngular(() => {\n\n      fromEvent<KeyboardEvent>(nativeElement, 'keydown')\n          .pipe(\n              takeUntil(this._closed$),\n              // tslint:disable-next-line:deprecation\n              filter(e => e.which === Key.Escape && this.keyboard))\n          .subscribe(event => requestAnimationFrame(() => {\n                       if (!event.defaultPrevented) {\n                         this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n                       }\n                     }));\n\n      // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n      // inside the modal dialog and releasing it outside\n      let preventClose = false;\n      fromEvent<MouseEvent>(this._dialogEl.nativeElement, 'mousedown')\n          .pipe(\n              takeUntil(this._closed$), tap(() => preventClose = false),\n              switchMap(() => fromEvent<MouseEvent>(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))),\n              filter(({target}) => nativeElement === target))\n          .subscribe(() => { preventClose = true; });\n\n      // We're listening to 'click' to dismiss modal on modal window click, except when:\n      // 1. clicking on modal dialog itself\n      // 2. closing was prevented by mousedown/up handlers\n      // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n      fromEvent<MouseEvent>(nativeElement, 'click').pipe(takeUntil(this._closed$)).subscribe(({target}) => {\n        if (this.backdrop === true && nativeElement === target && !preventClose) {\n          this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n        }\n        preventClose = false;\n      });\n    });\n\n    if (!nativeElement.contains(document.activeElement)) {\n      const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`) as HTMLElement;\n      const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n\n      const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    this._zone.runOutsideAngular(() => {\n      setTimeout(() => elementToFocus.focus());\n      this._elWithFocus = null;\n    });\n\n    this._closed$.next();\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  NgZone,\n  RendererFactory2,\n  TemplateRef\n} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {ContentRef} from '../util/popup';\nimport {ScrollBar} from '../util/scrollbar';\nimport {isDefined, isString} from '../util/util';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalOptions} from './modal-config';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\nimport {NgbModalWindow} from './modal-window';\n\n@Injectable({providedIn: 'root'})\nexport class NgbModalStack {\n  private _activeWindowCmptHasChanged = new Subject();\n  private _ariaHiddenValues: Map<Element, string> = new Map();\n  private _backdropAttributes = ['backdropClass'];\n  private _modalRefs: NgbModalRef[] = [];\n  private _windowAttributes =\n      ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'scrollable', 'size', 'windowClass'];\n  private _windowCmpts: ComponentRef<NgbModalWindow>[] = [];\n\n  constructor(\n      private _applicationRef: ApplicationRef, private _injector: Injector, @Inject(DOCUMENT) private _document: any,\n      private _scrollBar: ScrollBar, private _rendererFactory: RendererFactory2, private _ngZone: NgZone) {\n    // Trap focus on active WindowCmpt\n    this._activeWindowCmptHasChanged.subscribe(() => {\n      if (this._windowCmpts.length) {\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n        ngbFocusTrap(this._ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n        this._revertAriaHidden();\n        this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n      }\n    });\n  }\n\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\n    const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ?\n                                                                   this._document.querySelector(options.container) :\n                                                                   this._document.body;\n    const renderer = this._rendererFactory.createRenderer(null, null);\n\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\n    const removeBodyClass = () => {\n      if (!this._modalRefs.length) {\n        renderer.removeClass(this._document.body, 'modal-open');\n        this._revertAriaHidden();\n      }\n    };\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n    const contentRef =\n        this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\n        options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerModalRef(ngbModalRef);\n    this._registerWindowCmpt(windowCmptRef);\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n    ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n    if (this._modalRefs.length === 1) {\n      renderer.addClass(this._document.body, 'modal-open');\n    }\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n    }\n    return ngbModalRef;\n  }\n\n  dismissAll(reason?: any) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\n\n  hasOpenModals(): boolean { return this._modalRefs.length > 0; }\n\n  private _attachBackdrop(moduleCFR: ComponentFactoryResolver, containerEl: any): ComponentRef<NgbModalBackdrop> {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  private _attachWindowComponent(moduleCFR: ComponentFactoryResolver, containerEl: any, contentRef: any):\n      ComponentRef<NgbModalWindow> {\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    this._windowAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\n    this._backdropAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, activeModal: NgbActiveModal,\n      options: NgbModalOptions): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeModal);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n    }\n  }\n\n  private _createFromTemplateRef(content: TemplateRef<any>, activeModal: NgbActiveModal): ContentRef {\n    const context = {\n      $implicit: activeModal,\n      close(result) { activeModal.close(result); },\n      dismiss(reason) { activeModal.dismiss(reason); }\n    };\n    const viewRef = content.createEmbeddedView(context);\n    this._applicationRef.attachView(viewRef);\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  private _createFromString(content: string): ContentRef {\n    const component = this._document.createTextNode(`${content}`);\n    return new ContentRef([[component]]);\n  }\n\n  private _createFromComponent(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, context: NgbActiveModal,\n      options: NgbModalOptions): ContentRef {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector =\n        Injector.create({providers: [{provide: NgbActiveModal, useValue: context}], parent: contentInjector});\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    const componentNativeEl = componentRef.location.nativeElement;\n    if (options.scrollable) {\n      (componentNativeEl as HTMLElement).classList.add('component-host-scrollable');\n    }\n    this._applicationRef.attachView(componentRef.hostView);\n    // FIXME: we should here get rid of the component nativeElement\n    // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n    return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n  }\n\n  private _setAriaHidden(element: Element) {\n    const parent = element.parentElement;\n    if (parent && element !== this._document.body) {\n      Array.from(parent.children).forEach(sibling => {\n        if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n          this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      });\n\n      this._setAriaHidden(parent);\n    }\n  }\n\n  private _revertAriaHidden() {\n    this._ariaHiddenValues.forEach((value, element) => {\n      if (value) {\n        element.setAttribute('aria-hidden', value);\n      } else {\n        element.removeAttribute('aria-hidden');\n      }\n    });\n    this._ariaHiddenValues.clear();\n  }\n\n  private _registerModalRef(ngbModalRef: NgbModalRef) {\n    const unregisterModalRef = () => {\n      const index = this._modalRefs.indexOf(ngbModalRef);\n      if (index > -1) {\n        this._modalRefs.splice(index, 1);\n      }\n    };\n    this._modalRefs.push(ngbModalRef);\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n  }\n\n  private _registerWindowCmpt(ngbWindowCmpt: ComponentRef<NgbModalWindow>) {\n    this._windowCmpts.push(ngbWindowCmpt);\n    this._activeWindowCmptHasChanged.next();\n\n    ngbWindowCmpt.onDestroy(() => {\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n      if (index > -1) {\n        this._windowCmpts.splice(index, 1);\n        this._activeWindowCmptHasChanged.next();\n      }\n    });\n  }\n}\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport {NgbModalOptions, NgbModalConfig} from './modal-config';\nimport {NgbModalRef} from './modal-ref';\nimport {NgbModalStack} from './modal-stack';\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbModal {\n  constructor(\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack,\n      private _config: NgbModalConfig) {}\n\n  /**\n   * Opens a new modal window with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n   *\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n   */\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\n    const combinedOptions = Object.assign({}, this._config, options);\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n  }\n\n  /**\n   * Dismisses all currently displayed modal windows with the supplied reason.\n   *\n   * @since 3.1.0\n   */\n  dismissAll(reason?: any) { this._modalStack.dismissAll(reason); }\n\n  /**\n   * Indicates if there are currently any open modal windows in the application.\n   *\n   * @since 3.3.0\n   */\n  hasOpenModals(): boolean { return this._modalStack.hasOpenModals(); }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbModal} from './modal';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nexport {NgbModal} from './modal';\nexport {NgbModalConfig, NgbModalOptions} from './modal-config';\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@NgModule({\n  declarations: [NgbModalBackdrop, NgbModalWindow],\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\n  providers: [NgbModal]\n})\nexport class NgbModalModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbNavConfig {\n  destroyOnHide = true;\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  roles: 'tablist' | false = 'tablist';\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectorRef,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport {isDefined} from '../util/util';\nimport {NgbNavConfig} from './nav-config';\n\nconst isValidNavId = (id: any) => isDefined(id) && id !== '';\n\nlet navCounter = 0;\n\n/**\n * Context passed to the nav content template.\n *\n * See [this demo](#/components/nav/examples#keep-content) as the example.\n *\n * @since 5.2.0\n */\nexport interface NgbNavContentContext {\n  /**\n   * If `true`, current nav content is visible and active\n   */\n  $implicit: boolean;\n}\n\n\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\n@Directive({selector: 'ng-template[ngbNavContent]'})\nexport class NgbNavContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\n@Directive({selector: '[ngbNavItem]', exportAs: 'ngbNavItem', host: {'[class.nav-item]': 'true'}})\nexport class NgbNavItem implements AfterContentChecked, OnInit {\n  private _nav: NgbNav;\n\n  /**\n   * If `true`, non-active current nav item content will be removed from DOM\n   * Otherwise it will just be hidden\n   */\n  @Input() destroyOnHide;\n\n  /**\n   * If `true`, the current nav item is disabled and can't be toggled by user.\n   *\n   * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n   */\n  @Input() disabled = false;\n\n  /**\n   * The id used for the DOM elements.\n   * Must be unique inside the document in case you have multiple `ngbNav`s on the page.\n   *\n   * Autogenerated as `ngb-nav-XXX` if not provided.\n   */\n  @Input() domId: string;\n\n  /**\n   * The id used as a model for active nav.\n   * It can be anything, but must be unique inside one `ngbNav`.\n   *\n   * The only limitation is that it is not possible to have the `''` (empty string) as id,\n   * because ` ngbNavItem `, `ngbNavItem=''` and `[ngbNavItem]=\"''\"` are indistinguishable\n   */\n  @Input('ngbNavItem') _id: any;\n\n  contentTpl: NgbNavContent | null;\n\n  @ContentChildren(NgbNavContent, {descendants: false}) contentTpls: QueryList<NgbNavContent>;\n\n  constructor(@Inject(forwardRef(() => NgbNav)) nav, public elementRef: ElementRef<any>) {\n    // TODO: cf https://github.com/angular/angular/issues/30106\n    this._nav = nav;\n  }\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.contentTpl = this.contentTpls.first;\n  }\n\n  ngOnInit() {\n    if (!isDefined(this.domId)) {\n      this.domId = `ngb-nav-${navCounter++}`;\n    }\n  }\n\n  get active() { return this._nav.activeId === this.id; }\n\n  get id() { return isValidNavId(this._id) ? this._id : this.domId; }\n\n  get panelDomId() { return `${this.domId}-panel`; }\n\n  isPanelInDom() {\n    return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n  }\n}\n\n\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\n@Directive({\n  selector: '[ngbNav]',\n  exportAs: 'ngbNav',\n  host: {\n    '[class.nav]': 'true',\n    '[class.flex-column]': `orientation === 'vertical'`,\n    '[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\n    '[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\n  }\n})\nexport class NgbNav implements AfterContentInit {\n  /**\n   * The id of the nav that should be active\n   *\n   * You could also use the `.select()` method and the `(navChange)` event\n   */\n  @Input() activeId: any;\n\n  /**\n   * The event emitted after the active nav changes\n   * The payload of the event is the newly active nav id\n   *\n   * If you want to prevent nav change, you should use `(navChange)` event\n   */\n  @Output() activeIdChange = new EventEmitter<any>();\n\n  /**\n   * If `true`, non-active nav content will be removed from DOM\n   * Otherwise it will just be hidden\n   */\n  @Input() destroyOnHide;\n\n  /**\n   * The orientation of navs.\n   *\n   * Using `vertical` will also add the `aria-orientation` attribute\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Role attribute generating strategy:\n   * - `false` - no role attributes will be generated\n   * - `'tablist'` - 'tablist', 'tab' and 'tabpanel' will be generated (default)\n   */\n  @Input() roles: 'tablist' | false;\n\n  @ContentChildren(NgbNavItem) items: QueryList<NgbNavItem>;\n\n  constructor(@Attribute('role') public role: string, config: NgbNavConfig, private _cd: ChangeDetectorRef) {\n    this.destroyOnHide = config.destroyOnHide;\n    this.orientation = config.orientation;\n    this.roles = config.roles;\n  }\n\n  /**\n   * The nav change event emitted right before the nav change happens on user click.\n   *\n   * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n   *\n   * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n   */\n  @Output() navChange = new EventEmitter<NgbNavChangeEvent>();\n\n  click(item: NgbNavItem) {\n    if (!item.disabled) {\n      this._updateActiveId(item.id);\n    }\n  }\n\n  /**\n   * Selects the nav with the given id and shows its associated pane.\n   * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n   */\n  select(id: any) { this._updateActiveId(id, false); }\n\n  ngAfterContentInit() {\n    if (!isDefined(this.activeId)) {\n      const nextId = this.items.first ? this.items.first.id : null;\n      if (isValidNavId(nextId)) {\n        this._updateActiveId(nextId, false);\n        this._cd.detectChanges();\n      }\n    }\n  }\n\n  private _updateActiveId(nextId: any, emitNavChange = true) {\n    if (this.activeId !== nextId) {\n      let defaultPrevented = false;\n\n      if (emitNavChange) {\n        this.navChange.emit({activeId: this.activeId, nextId, preventDefault: () => { defaultPrevented = true; }});\n      }\n\n      if (!defaultPrevented) {\n        this.activeId = nextId;\n        this.activeIdChange.emit(nextId);\n      }\n    }\n  }\n}\n\n\n/**\n * A directive to put on the nav link.\n *\n * @since 5.2.0\n */\n@Directive({\n  selector: 'a[ngbNavLink]',\n  host: {\n    '[id]': 'navItem.domId',\n    '[class.nav-link]': 'true',\n    '[class.nav-item]': 'hasNavItemClass()',\n    '[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\n    'href': '',\n    '[class.active]': 'navItem.active',\n    '[class.disabled]': 'navItem.disabled',\n    '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n    '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n    '[attr.aria-selected]': 'navItem.active',\n    '[attr.aria-disabled]': 'navItem.disabled',\n    '(click)': 'nav.click(navItem); $event.preventDefault()'\n  }\n})\nexport class NgbNavLink {\n  constructor(@Attribute('role') public role: string, public navItem: NgbNavItem, public nav: NgbNav) {}\n\n  hasNavItemClass() {\n    // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n    return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n  }\n}\n\n\n/**\n * The payload of the change event emitted right before the nav change happens on user click.\n *\n * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n *\n * @since 5.2.0\n */\nexport interface NgbNavChangeEvent {\n  /**\n   * Id of the currently active nav.\n   */\n  activeId: any;\n\n  /**\n   * Id of the newly selected nav.\n   */\n  nextId: any;\n\n  /**\n   * Function that will prevent nav change if called.\n   */\n  preventDefault: () => void;\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbNav} from './nav';\n\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\n@Component({\n  selector: '[ngbNavOutlet]',\n  host: {'[class.tab-content]': 'true'},\n  encapsulation: ViewEncapsulation.None,\n  template: `\n      <ng-template ngFor let-item [ngForOf]=\"nav.items\">\n          <div class=\"tab-pane\"\n               *ngIf=\"item.isPanelInDom()\"\n               [id]=\"item.panelDomId\"\n               [class.active]=\"item.active\"\n               [attr.role]=\"paneRole ? paneRole : nav.roles ? 'tabpanel' : undefined\"\n               [attr.aria-labelledby]=\"item.domId\">\n              <ng-template [ngTemplateOutlet]=\"item.contentTpl?.templateRef\"\n                           [ngTemplateOutletContext]=\"{$implicit: item.active}\"></ng-template>\n          </div>\n      </ng-template>\n  `\n})\nexport class NgbNavOutlet {\n  /**\n   * A role to set on the nav pane\n   */\n  @Input() paneRole;\n\n  /**\n   * Reference to the `NgbNav`\n   */\n  @Input('ngbNavOutlet') nav: NgbNav;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbNav, NgbNavContent, NgbNavItem, NgbNavLink} from './nav';\nimport {NgbNavOutlet} from './nav-outlet';\n\nexport {NgbNav, NgbNavContent, NgbNavContentContext, NgbNavItem, NgbNavLink, NgbNavChangeEvent} from './nav';\nexport {NgbNavOutlet} from './nav-outlet';\nexport {NgbNavConfig} from './nav-config';\n\nconst NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet];\n\n@NgModule({declarations: NGB_NAV_DIRECTIVES, exports: NGB_NAV_DIRECTIVES, imports: [CommonModule]})\nexport class NgbNavModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPaginationConfig {\n  disabled = false;\n  boundaryLinks = false;\n  directionLinks = true;\n  ellipses = true;\n  maxSize = 0;\n  pageSize = 10;\n  rotate = false;\n  size: 'sm' | 'lg';\n}\n","import {\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  OnChanges,\n  ChangeDetectionStrategy,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbPaginationConfig} from './pagination-config';\n\n/**\n * A context for the\n * * `NgbPaginationFirst`\n * * `NgbPaginationPrevious`\n * * `NgbPaginationNext`\n * * `NgbPaginationLast`\n * * `NgbPaginationEllipsis`\n *\n * link templates in case you want to override one.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationLinkContext {\n  /**\n   * The currently selected page number\n   */\n  currentPage: number;\n\n  /**\n   * If `true`, the current link is disabled\n   */\n  disabled: boolean;\n}\n\n/**\n * A context for the `NgbPaginationNumber` link template in case you want to override one.\n *\n * Extends `NgbPaginationLinkContext`.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationNumberContext extends NgbPaginationLinkContext {\n  /**\n   * The page number, displayed by the current page link.\n   */\n  $implicit: number;\n}\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationEllipsis]'})\nexport class NgbPaginationEllipsis {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationFirst]'})\nexport class NgbPaginationFirst {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationLast]'})\nexport class NgbPaginationLast {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNext]'})\nexport class NgbPaginationNext {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNumber]'})\nexport class NgbPaginationNumber {\n  constructor(public templateRef: TemplateRef<NgbPaginationNumberContext>) {}\n}\n\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationPrevious]'})\nexport class NgbPaginationPrevious {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\n@Component({\n  selector: 'ngb-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'navigation'},\n  template: `\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n    <ng-template #ellipsis>...</ng-template>\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\n      {{ page }}\n      <span *ngIf=\"page === currentPage\" class=\"sr-only\">(current)</span>\n    </ng-template>\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\" [attr.aria-current]=\"(pageNumber === page ? 'page' : null)\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n                       [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\n        </a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\"\n          [attr.tabindex]=\"disabled ? '-1' : null\" [attr.aria-disabled]=\"disabled ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n                       [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class NgbPagination implements OnChanges {\n  pageCount = 0;\n  pages: number[] = [];\n\n  @ContentChild(NgbPaginationEllipsis, {static: false}) tplEllipsis: NgbPaginationEllipsis;\n  @ContentChild(NgbPaginationFirst, {static: false}) tplFirst: NgbPaginationFirst;\n  @ContentChild(NgbPaginationLast, {static: false}) tplLast: NgbPaginationLast;\n  @ContentChild(NgbPaginationNext, {static: false}) tplNext: NgbPaginationNext;\n  @ContentChild(NgbPaginationNumber, {static: false}) tplNumber: NgbPaginationNumber;\n  @ContentChild(NgbPaginationPrevious, {static: false}) tplPrevious: NgbPaginationPrevious;\n\n  /**\n   * If `true`, pagination links will be disabled.\n   */\n  @Input() disabled: boolean;\n\n  /**\n   * If `true`, the \"First\" and \"Last\" page links are shown.\n   */\n  @Input() boundaryLinks: boolean;\n\n  /**\n   * If `true`, the \"Next\" and \"Previous\" page links are shown.\n   */\n  @Input() directionLinks: boolean;\n\n  /**\n   * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\n   */\n  @Input() ellipses: boolean;\n\n  /**\n   * Whether to rotate pages when `maxSize` > number of pages.\n   *\n   * The current page always stays in the middle if `true`.\n   */\n  @Input() rotate: boolean;\n\n  /**\n   *  The number of items in your paginated collection.\n   *\n   *  Note, that this is not the number of pages. Page numbers are calculated dynamically based on\n   *  `collectionSize` and `pageSize`. Ex. if you have 100 items in your collection and displaying 20 items per page,\n   *  you'll end up with 5 pages.\n   */\n  @Input() collectionSize: number;\n\n  /**\n   *  The maximum number of pages to display.\n   */\n  @Input() maxSize: number;\n\n  /**\n   *  The current page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Input() page = 1;\n\n  /**\n   *  The number of items per page.\n   */\n  @Input() pageSize: number;\n\n  /**\n   *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n   *\n   *  Event payload is the number of the newly selected page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Output() pageChange = new EventEmitter<number>(true);\n\n  /**\n   * The pagination display size.\n   *\n   * Bootstrap currently supports small and large sizes.\n   */\n  @Input() size: 'sm' | 'lg';\n\n  constructor(config: NgbPaginationConfig) {\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious(): boolean { return this.page > 1; }\n\n  hasNext(): boolean { return this.page < this.pageCount; }\n\n  nextDisabled(): boolean { return !this.hasNext() || this.disabled; }\n\n  previousDisabled(): boolean { return !this.hasPrevious() || this.disabled; }\n\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\n\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\n\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\n\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n  private _applyEllipses(start: number, end: number) {\n    if (this.ellipses) {\n      if (start > 0) {\n        // The first page will always be included. If the displayed range\n        // starts after the third page, then add ellipsis. But if the range\n        // starts on the third page, then add the second page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (start > 2) {\n          this.pages.unshift(-1);\n        } else if (start === 2) {\n          this.pages.unshift(2);\n        }\n        this.pages.unshift(1);\n      }\n      if (end < this.pageCount) {\n        // The last page will always be included. If the displayed range\n        // ends before the third-last page, then add ellipsis. But if the range\n        // ends on third-last page, then add the second-last page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (end < (this.pageCount - 2)) {\n          this.pages.push(-1);\n        } else if (end === (this.pageCount - 2)) {\n          this.pages.push(this.pageCount - 1);\n        }\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n  private _applyRotation(): [number, number] {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n\n  /**\n   * Paginates page numbers based on maxSize items per page.\n   */\n  private _applyPagination(): [number, number] {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n\n    return [start, end];\n  }\n\n  private _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  private _updatePages(newPage: number) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    // fill-in model needed to render pages\n    this.pages.length = 0;\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    // set page within 1..max range\n    this._setPageInRange(newPage);\n\n    // apply maxSize if necessary\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount;\n\n      // either paginating or rotating page numbers\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end);\n\n      // adding ellipses\n      this._applyEllipses(start, end);\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\n\nexport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\nexport {NgbPaginationConfig} from './pagination-config';\n\nconst DIRECTIVES = [\n  NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\n  NgbPaginationPrevious\n];\n\n@NgModule({declarations: DIRECTIVES, exports: DIRECTIVES, imports: [CommonModule]})\nexport class NgbPaginationModule {\n}\n","import {Observable, merge} from 'rxjs';\nimport {share, filter, delay, map} from 'rxjs/operators';\n\nexport class Trigger {\n  constructor(public open: string, public close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave'],\n  'focus': ['focusin', 'focusout'],\n};\n\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nexport function observeTriggers(renderer: any, nativeElement: any, triggers: Trigger[], isOpenedFn: () => boolean) {\n  return new Observable<boolean>(subscriber => {\n    const listeners = [];\n    const openFn = () => subscriber.next(true);\n    const closeFn = () => subscriber.next(false);\n    const toggleFn = () => subscriber.next(!isOpenedFn());\n\n    triggers.forEach((trigger: Trigger) => {\n      if (trigger.open === trigger.close) {\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n      } else {\n        listeners.push(\n            renderer.listen(nativeElement, trigger.open, openFn),\n            renderer.listen(nativeElement, trigger.close, closeFn));\n      }\n    });\n\n    return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n  });\n}\n\nconst delayOrNoop = <T>(time: number) => time > 0 ? delay<T>(time) : (a: Observable<T>) => a;\n\nexport function triggerDelay(openDelay: number, closeDelay: number, isOpenedFn: () => boolean) {\n  return (input$: Observable<boolean>) => {\n    let pending = null;\n    const filteredInput$ = input$.pipe(\n        map(open => ({open})), filter(event => {\n          const currentlyOpen = isOpenedFn();\n          if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n            pending = event;\n            return true;\n          }\n          if (pending && pending.open !== event.open) {\n            pending = null;\n          }\n          return false;\n        }),\n        share());\n    const delayedOpen$ = filteredInput$.pipe(filter(event => event.open), delayOrNoop(openDelay));\n    const delayedClose$ = filteredInput$.pipe(filter(event => !event.open), delayOrNoop(closeDelay));\n    return merge(delayedOpen$, delayedClose$)\n        .pipe(\n            filter(event => {\n              if (event === pending) {\n                pending = null;\n                return event.open !== isOpenedFn();\n              }\n              return false;\n            }),\n            map(event => event.open));\n  };\n}\n\nexport function listenToTriggers(\n    renderer: any, nativeElement: any, triggers: string, isOpenedFn: () => boolean, openFn, closeFn, openDelay = 0,\n    closeDelay = 0) {\n  const parsedTriggers = parseTriggers(triggers);\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return () => {};\n  }\n\n  const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\n                           .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\n                           .subscribe(open => (open ? openFn() : closeFn()));\n\n  return () => subscription.unsubscribe();\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPopoverConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'click';\n  container: string;\n  disablePopover = false;\n  popoverClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbPopoverConfig} from './popover-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title != null\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? title : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\n  styleUrls: ['./popover.scss']\n})\nexport class NgbPopoverWindow {\n  @Input() title: undefined | string | TemplateRef<any>;\n  @Input() id: string;\n  @Input() popoverClass: string;\n  @Input() context: any;\n\n  isTitleTemplate() { return this.title instanceof TemplateRef; }\n}\n\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the popover should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() ngbPopover: string | TemplateRef<any>;\n\n  /**\n   * The title of the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() popoverTitle: string | TemplateRef<any>;\n\n  /**\n   * The preferred placement of the popover.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/popover/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   *\n   * Currently only supports `body`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, popover is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disablePopover: boolean;\n\n  /**\n   * An optional class applied to the popover window element.\n   *\n   * @since 2.2.0\n   */\n  @Input() popoverClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the popover is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter<void>();\n\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter<void>();\n\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\n  private _popupService: PopupService<NgbPopoverWindow>;\n  private _windowRef: ComponentRef<NgbPopoverWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n  private _isDisabled(): boolean {\n    if (this.disablePopover) {\n      return true;\n    }\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-popover');\n      }\n    });\n  }\n\n  /**\n   * Opens the popover.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the popover template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && !this._isDisabled()) {\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.context = context;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening popover from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because popover won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the popover from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  close(): void {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({ngbPopover, popoverTitle, disablePopover, popoverClass}: SimpleChanges) {\n    if (popoverClass && this.isOpen()) {\n      this._windowRef.instance.popoverClass = popoverClass.currentValue;\n    }\n    // close popover if title and content become empty, or disablePopover set to true\n    if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbPopover, NgbPopoverWindow} from './popover';\nimport {CommonModule} from '@angular/common';\n\nexport {NgbPopover} from './popover';\nexport {NgbPopoverConfig} from './popover-config';\nexport {Placement} from '../util/positioning';\n\n@NgModule({\n  declarations: [NgbPopover, NgbPopoverWindow],\n  exports: [NgbPopover],\n  imports: [CommonModule],\n  entryComponents: [NgbPopoverWindow]\n})\nexport class NgbPopoverModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  textType: string;\n  type: string;\n  showValue = false;\n  height: string;\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\n@Component({\n  selector: 'ngb-progressbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\n      {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\"\n      role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n      [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class NgbProgressbar {\n  private _max: number;\n\n  /**\n   * The maximal value to be displayed in the progress bar.\n   *\n   * Should be a positive number. Will default to 100 otherwise.\n   */\n  @Input()\n  set max(max: number) {\n    this._max = !isNumber(max) || max <= 0 ? 100 : max;\n  }\n\n  get max(): number { return this._max; }\n\n  /**\n   * If `true`, the stripes on the progress bar are animated.\n   *\n   * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n   */\n  @Input() animated: boolean;\n\n  /**\n   * If `true`, the progress bars will be displayed as striped.\n   */\n  @Input() striped: boolean;\n\n  /**\n   * If `true`, the current percentage will be shown in the `xx%` format.\n   */\n  @Input() showValue: boolean;\n\n  /**\n   * Optional text variant type of the progress bar.\n   *\n   * Supports types based on Bootstrap background color variants, like:\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n   *\n   * @since 5.2.0\n   */\n  @Input() textType: string;\n\n  /**\n   * The type of the progress bar.\n   *\n   * Supports types based on Bootstrap background color variants, like:\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n   */\n  @Input() type: string;\n\n  /**\n   * The current value for the progress bar.\n   *\n   * Should be in the `[0, max]` range.\n   */\n  @Input() value = 0;\n\n  /**\n   * The height of the progress bar.\n   *\n   * Accepts any valid CSS height values, ex. `\"2rem\"`\n   */\n  @Input() height: string;\n\n  constructor(config: NgbProgressbarConfig) {\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.textType = config.textType;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n\n  getValue() { return getValueInRange(this.value, this.max); }\n\n  getPercentValue() { return 100 * this.getValue() / this.max; }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbProgressbar} from './progressbar';\n\nexport {NgbProgressbar} from './progressbar';\nexport {NgbProgressbarConfig} from './progressbar-config';\n\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\nexport class NgbProgressbarModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbRatingConfig {\n  max = 10;\n  readonly = false;\n  resettable = false;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {getValueInRange} from '../util/util';\nimport {Key} from '../util/key';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * The context for the custom star display template defined in the `starTemplate`.\n */\nexport interface StarTemplateContext {\n  /**\n   * The star fill percentage, an integer in the `[0, 100]` range.\n   */\n  fill: number;\n\n  /**\n   * Index of the star, starts with `0`.\n   */\n  index: number;\n}\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\n@Component({\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'd-inline-flex',\n    '[tabindex]': 'disabled ? -1 : 0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\n        </ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n})\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * The maximal rating that can be given.\n   */\n  @Input() max: number;\n\n  /**\n   * The current rating. Could be a decimal value like `3.75`.\n   */\n  @Input() rate: number;\n\n  /**\n   * If `true`, the rating can't be changed.\n   */\n  @Input() readonly: boolean;\n\n  /**\n   * If `true`, the rating can be reset to `0` by mouse clicking currently set rating.\n   */\n  @Input() resettable: boolean;\n\n  /**\n   * The template to override the way each star is displayed.\n   *\n   * Alternatively put an `<ng-template>` as the only child of your `<ngb-rating>` element\n   */\n  @Input() starTemplate: TemplateRef<StarTemplateContext>;\n  @ContentChild(TemplateRef, {static: false}) starTemplateFromContent: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event emitted when the user is hovering over a given rating.\n   *\n   * Event payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user stops hovering over a given rating.\n   *\n   * Event payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user selects a new rating.\n   *\n   * Event payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n\n  enter(value: number): void {\n    if (!this.readonly && !this.disabled) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n\n  handleBlur() { this.onTouched(); }\n\n  handleClick(value: number) {\n    if (!this.readonly && !this.disabled) {\n      this.update(this.resettable && this.rate === value ? 0 : value);\n    }\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n      case Key.ArrowLeft:\n        this.update(this.rate - 1);\n        break;\n      case Key.ArrowUp:\n      case Key.ArrowRight:\n        this.update(this.rate + 1);\n        break;\n      case Key.Home:\n        this.update(0);\n        break;\n      case Key.End:\n        this.update(this.max);\n        break;\n      default:\n        return;\n    }\n\n    // note 'return' in default case\n    event.preventDefault();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  update(value: number, internalChange = true): void {\n    const newRate = getValueInRange(value, this.max, 0);\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _getFillValue(index: number): number {\n    const diff = this.nextRate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return parseInt((diff * 100).toFixed(2), 10);\n    }\n\n    return 0;\n  }\n\n  private _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbRating} from './rating';\n\nexport {NgbRating} from './rating';\nexport {NgbRatingConfig} from './rating-config';\n\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\nexport class NgbRatingModule {\n}\n","// tslint:disable:deprecation\nimport {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTabset`](#/components/tabset/api#NgbTabset) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTabsetConfig {\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  type: 'tabs' | 'pills' = 'tabs';\n}\n","// tslint:disable:deprecation\nimport {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgbTabsetConfig} from './tabset-config';\n\nlet nextId = 0;\n\n/**\n * A directive to wrap tab titles that need to contain HTML markup or other directives.\n *\n * Alternatively you could use the `NgbTab.title` input for string titles.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n@Directive({selector: 'ng-template[ngbTabTitle]'})\nexport class NgbTabTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive to wrap content to be displayed in a tab.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n@Directive({selector: 'ng-template[ngbTabContent]'})\nexport class NgbTabContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive representing an individual tab.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n@Directive({selector: 'ngb-tab'})\nexport class NgbTab implements AfterContentChecked {\n  /**\n   * The tab identifier.\n   *\n   * Must be unique for the entire document for proper accessibility support.\n   */\n  @Input() id = `ngb-tab-${nextId++}`;\n\n  /**\n   * The tab title.\n   *\n   * Use the [`NgbTabTitle`](#/components/tabset/api#NgbTabTitle) directive for non-string titles.\n   */\n  @Input() title: string;\n\n  /**\n   * If `true`, the current tab is disabled and can't be toggled.\n   */\n  @Input() disabled = false;\n\n  titleTpl: NgbTabTitle | null;\n  contentTpl: NgbTabContent | null;\n\n  @ContentChildren(NgbTabTitle, {descendants: false}) titleTpls: QueryList<NgbTabTitle>;\n  @ContentChildren(NgbTabContent, {descendants: false}) contentTpls: QueryList<NgbTabContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before the tab change.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\nexport interface NgbTabChangeEvent {\n  /**\n   * The id of the currently active tab.\n   */\n  activeId: string;\n\n  /**\n   * The id of the newly selected tab.\n   */\n  nextId: string;\n\n  /**\n   * Calling this function will prevent tab switching.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * A component that makes it easy to create tabbed interface.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n@Component({\n  selector: 'ngb-tabset',\n  exportAs: 'ngbTabset',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"select(tab.id); $event.preventDefault()\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-selected]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class NgbTabset implements AfterContentChecked {\n  justifyClass: string;\n\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\n\n  /**\n   * The identifier of the tab that should be opened **initially**.\n   *\n   * For subsequent tab switches use the `.select()` method and the `(tabChange)` event.\n   */\n  @Input() activeId: string;\n\n  /**\n   * If `true`, non-visible tabs content will be removed from DOM. Otherwise it will just be hidden.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * The horizontal alignment of the tabs with flexbox utilities.\n   */\n  @Input()\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\n    if (className === 'fill' || className === 'justified') {\n      this.justifyClass = `nav-${className}`;\n    } else {\n      this.justifyClass = `justify-content-${className}`;\n    }\n  }\n\n  /**\n   * The orientation of the tabset.\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Type of navigation to be used for tabs.\n   *\n   * Currently Bootstrap supports only `\"tabs\"` and `\"pills\"`.\n   *\n   * Since `3.0.0` can also be an arbitrary string (ex. for custom themes).\n   */\n  @Input() type: 'tabs' | 'pills' | string;\n\n  /**\n   * A tab change event emitted right before the tab change happens.\n   *\n   * See [`NgbTabChangeEvent`](#/components/tabset/api#NgbTabChangeEvent) for payload details.\n   */\n  @Output() tabChange = new EventEmitter<NgbTabChangeEvent>();\n\n  constructor(config: NgbTabsetConfig) {\n    this.type = config.type;\n    this.justify = config.justify;\n    this.orientation = config.orientation;\n  }\n\n  /**\n   * Selects the tab with the given id and shows its associated content panel.\n   *\n   * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n   * hidden depending on the `destroyOnHide` value.\n   */\n  select(tabId: string) {\n    let selectedTab = this._getTabById(tabId);\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n      let defaultPrevented = false;\n\n      this.tabChange.emit(\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this.activeId = selectedTab.id;\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // auto-correct activeId that might have been set incorrectly as input\n    let activeTab = this._getTabById(this.activeId);\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n  }\n\n  private _getTabById(id: string): NgbTab {\n    let tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\n    return tabsWithId.length ? tabsWithId[0] : null;\n  }\n}\n","// tslint:disable:deprecation\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle} from './tabset';\n\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nexport {NgbTabsetConfig} from './tabset-config';\n\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n\n/**\n * @deprecated 6.0.0 Please use NgbNavModule instead\n */\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule]})\nexport class NgbTabsetModule {\n}\n","import {isNumber, toInteger} from '../util/util';\n\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n\n  constructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n\n  updateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n\n  updateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n\n  updateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTimepickerConfig {\n  meridian = false;\n  spinners = true;\n  seconds = false;\n  hourStep = 1;\n  minuteStep = 1;\n  secondStep = 1;\n  disabled = false;\n  readonlyInputs = false;\n  size: 'small' | 'medium' | 'large' = 'medium';\n}\n","import {Injectable} from '@angular/core';\nimport {NgbTimeStruct} from './ngb-time-struct';\nimport {isInteger} from '../util/util';\n\nexport function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY})\nexport abstract class NgbTimeAdapter<T> {\n  /**\n   * Converts a user-model time of type `T` to an `NgbTimeStruct` for internal use.\n   */\n  abstract fromModel(value: T): NgbTimeStruct;\n\n  /**\n   * Converts an internal `NgbTimeStruct` time to a user-model time of type `T`.\n   */\n  abstract toModel(time: NgbTimeStruct): T;\n}\n\n@Injectable()\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  toModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayPeriods, TranslationWidth} from '@angular/common';\n\nexport function NGB_TIMEPICKER_I18N_FACTORY(locale) {\n  return new NgbTimepickerI18nDefault(locale);\n}\n\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_TIMEPICKER_I18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbTimepickerI18n {\n  /**\n   * Returns the name for the period before midday.\n   */\n  abstract getMorningPeriod(): string;\n\n  /**\n   * Returns the name for the period after midday.\n   */\n  abstract getAfternoonPeriod(): string;\n}\n\n@Injectable()\nexport class NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n  private _periods: [string, string];\n\n  constructor(@Inject(LOCALE_ID) locale: string) {\n    super();\n\n    this._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n  }\n\n  getMorningPeriod(): string { return this._periods[0]; }\n\n  getAfternoonPeriod(): string { return this._periods[1]; }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  forwardRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {isInteger, isNumber, padNumber, toInteger} from '../util/util';\nimport {NgbTime} from './ngb-time';\nimport {NgbTimepickerConfig} from './timepicker-config';\nimport {NgbTimeAdapter} from './ngb-time-adapter';\nimport {NgbTimepickerI18n} from './timepicker-i18n';\n\nconst FILTER_REGEX = /[^0-9]/g;\n\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\n@Component({\n  selector: 'ngb-timepicker',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./timepicker.scss'],\n  template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\"\n            [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n})\nexport class NgbTimepicker implements ControlValueAccessor,\n    OnChanges {\n  disabled: boolean;\n  model: NgbTime;\n\n  private _hourStep: number;\n  private _minuteStep: number;\n  private _secondStep: number;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n  @Input() meridian: boolean;\n\n  /**\n   * If `true`, the spinners above and below inputs are visible.\n   */\n  @Input() spinners: boolean;\n\n  /**\n   * If `true`, it is possible to select seconds.\n   */\n  @Input() seconds: boolean;\n\n  /**\n   * The number of hours to add/subtract when clicking hour spinners.\n   */\n  @Input()\n  set hourStep(step: number) {\n    this._hourStep = isInteger(step) ? step : this._config.hourStep;\n  }\n\n  get hourStep(): number { return this._hourStep; }\n\n  /**\n   * The number of minutes to add/subtract when clicking minute spinners.\n   */\n  @Input()\n  set minuteStep(step: number) {\n    this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n  }\n\n  get minuteStep(): number { return this._minuteStep; }\n\n  /**\n   * The number of seconds to add/subtract when clicking second spinners.\n   */\n  @Input()\n  set secondStep(step: number) {\n    this._secondStep = isInteger(step) ? step : this._config.secondStep;\n  }\n\n  get secondStep(): number { return this._secondStep; }\n\n  /**\n   * If `true`, the timepicker is readonly and can't be changed.\n   */\n  @Input() readonlyInputs: boolean;\n\n  /**\n   * The size of inputs and buttons.\n   */\n  @Input() size: 'small' | 'medium' | 'large';\n\n  constructor(\n      private readonly _config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>,\n      private _cd: ChangeDetectorRef, public i18n: NgbTimepickerI18n) {\n    this.meridian = _config.meridian;\n    this.spinners = _config.spinners;\n    this.seconds = _config.seconds;\n    this.hourStep = _config.hourStep;\n    this.minuteStep = _config.minuteStep;\n    this.secondStep = _config.secondStep;\n    this.disabled = _config.disabled;\n    this.readonlyInputs = _config.readonlyInputs;\n    this.size = _config.size;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n    this._cd.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  changeHour(step: number) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step: number) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step: number) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal: string) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal: string) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal: string) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatInput(input: HTMLInputElement) { input.value = input.value.replace(FILTER_REGEX, ''); }\n\n  formatHour(value: number) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value: number) { return padNumber(value); }\n\n  get isSmallSize(): boolean { return this.size === 'small'; }\n\n  get isLargeSize(): boolean { return this.size === 'large'; }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  private propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTimepicker} from './timepicker';\n\nexport {NgbTimepicker} from './timepicker';\nexport {NgbTimepickerConfig} from './timepicker-config';\nexport {NgbTimeStruct} from './ngb-time-struct';\nexport {NgbTimeAdapter} from './ngb-time-adapter';\nexport {NgbTimepickerI18n} from './timepicker-i18n';\n\n@NgModule({declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]})\nexport class NgbTimepickerModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Interface used to type all toast config options. See `NgbToastConfig`.\n *\n * @since 5.0.0\n */\nexport interface NgbToastOptions {\n  /**\n   * Specify if the toast component should emit the `hide()` output\n   * after a certain `delay` in ms.\n   */\n  autohide?: boolean;\n\n  /**\n   * Delay in ms after which the `hide()` output should be emitted.\n   */\n  delay?: number;\n\n  /**\n   * Type of aria-live attribute to be used.\n   *\n   * Could be one of these 2 values (as string):\n   * - `polite` (default)\n   * - `alert`\n   */\n  ariaLive?: 'polite' | 'alert';\n}\n\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbToastConfig implements NgbToastOptions {\n  autohide = true;\n  delay = 500;\n  ariaLive: 'polite' | 'alert' = 'polite';\n}\n","import {\n  AfterContentInit,\n  Attribute,\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {NgbToastConfig} from './toast-config';\n\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\n@Directive({selector: '[ngbToastHeader]'})\nexport class NgbToastHeader {\n}\n\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\n@Component({\n  selector: 'ngb-toast',\n  exportAs: 'ngbToast',\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'role': 'alert',\n    '[attr.aria-live]': 'ariaLive',\n    'aria-atomic': 'true',\n    '[class.toast]': 'true',\n    '[class.show]': 'true',\n  },\n  template: `\n    <ng-template #headerTpl>\n      <strong class=\"mr-auto\">{{header}}</strong>\n    </ng-template>\n    <ng-template [ngIf]=\"contentHeaderTpl || header\">\n      <div class=\"toast-header\">\n        <ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.toast.close-aria\" (click)=\"hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    </ng-template>\n    <div class=\"toast-body\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  styleUrls: ['./toast.scss']\n})\nexport class NgbToast implements AfterContentInit,\n    OnChanges {\n  private _timeoutID;\n\n  /**\n   * Delay after which the toast will hide (ms).\n   * default: `500` (ms) (inherited from NgbToastConfig)\n   */\n  @Input() delay: number;\n\n  /**\n   * Auto hide the toast after a delay in ms.\n   * default: `true` (inherited from NgbToastConfig)\n   */\n  @Input() autohide: boolean;\n\n  /**\n   * Text to be used as toast's header.\n   * Ignored if a ContentChild template is specified at the same time.\n   */\n  @Input() header: string;\n\n  /**\n   * A template like `<ng-template ngbToastHeader></ng-template>` can be\n   * used in the projected content to allow markup usage.\n   */\n  @ContentChild(NgbToastHeader, {read: TemplateRef, static: true}) contentHeaderTpl: TemplateRef<any>| null = null;\n\n  /**\n   * An event fired immediately when toast's `hide()` method has been called.\n   * It can only occur in 2 different scenarios:\n   * - `autohide` timeout fires\n   * - user clicks on a closing cross (&times)\n   *\n   * Additionally this output is purely informative. The toast won't disappear. It's up to the user to take care of\n   * that.\n   */\n  @Output('hide') hideOutput = new EventEmitter<void>();\n\n  constructor(@Attribute('aria-live') public ariaLive: string, config: NgbToastConfig) {\n    if (this.ariaLive == null) {\n      this.ariaLive = config.ariaLive;\n    }\n    this.delay = config.delay;\n    this.autohide = config.autohide;\n  }\n\n  ngAfterContentInit() { this._init(); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('autohide' in changes) {\n      this._clearTimeout();\n      this._init();\n    }\n  }\n\n  hide() {\n    this._clearTimeout();\n    this.hideOutput.emit();\n  }\n\n  private _init() {\n    if (this.autohide && !this._timeoutID) {\n      this._timeoutID = setTimeout(() => this.hide(), this.delay);\n    }\n  }\n\n  private _clearTimeout() {\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {NgbToast, NgbToastHeader} from './toast';\n\nexport {NgbToast, NgbToastHeader} from './toast';\nexport {NgbToastConfig, NgbToastOptions} from './toast-config';\n\n@NgModule({declarations: [NgbToast, NgbToastHeader], imports: [CommonModule], exports: [NgbToast, NgbToastHeader]})\nexport class NgbToastModule {\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTooltipConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'hover focus';\n  container: string;\n  disableTooltip = false;\n  tooltipClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbTooltipConfig} from './tooltip-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"tooltip show\" + (tooltipClass ? \" \" + tooltipClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n  styleUrls: ['./tooltip.scss']\n})\nexport class NgbTooltipWindow {\n  @Input() id: string;\n  @Input() tooltipClass: string;\n}\n\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the tooltip should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The preferred placement of the tooltip.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/tooltip/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, tooltip is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disableTooltip: boolean;\n\n  /**\n   * An optional class applied to the tooltip window element.\n   *\n   * @since 3.2.0\n   */\n  @Input() tooltipClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the tooltip is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbTooltip: string | TemplateRef<any>;\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n  private _popupService: PopupService<NgbTooltipWindow>;\n  private _windowRef: ComponentRef<NgbTooltipWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-tooltip');\n      }\n    });\n  }\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n   *\n   * If the content if falsy, the tooltip won't open.\n   */\n  @Input()\n  set ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() { return this._ngbTooltip; }\n\n  /**\n   * Opens the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the tooltip template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because tooltip won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the tooltip from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  close(): void {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({tooltipClass}: SimpleChanges) {\n    if (tooltipClass && this.isOpen()) {\n      this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\n\nexport {NgbTooltipConfig} from './tooltip-config';\nexport {NgbTooltip} from './tooltip';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\nexport class NgbTooltipModule {\n}\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {regExpEscape, toString} from '../util/util';\n\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\n@Component({\n  selector: 'ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n      `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\n  styleUrls: ['./highlight.scss']\n})\nexport class NgbHighlight implements OnChanges {\n  parts: string[];\n\n  /**\n   * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n   */\n  @Input() highlightClass = 'ngb-highlight';\n\n  /**\n   * The text highlighting is added to.\n   *\n   * If the `term` is found inside this text, it will be highlighted.\n   * If the `term` contains array then all the items from it will be highlighted inside the text.\n   */\n  @Input() result: string;\n\n  /**\n   * The term or array of terms to be highlighted.\n   * Since version `v4.2.0` term could be a `string[]`\n   */\n  @Input() term: string | readonly string[];\n\n  ngOnChanges(changes: SimpleChanges) {\n    const result = toString(this.result);\n\n    const terms = Array.isArray(this.term) ? this.term : [this.term];\n    const escapedTerms = terms.map(term => regExpEscape(toString(term))).filter(term => term);\n\n    this.parts = escapedTerms.length ? result.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewEncapsulation} from '@angular/core';\n\nimport {toString} from '../util/util';\n\n/**\n * The context for the typeahead result template in case you want to override the default one.\n */\nexport interface ResultTemplateContext {\n  /**\n   * Your typeahead result item.\n   */\n  result: any;\n\n  /**\n   * Search term from the `<input>` used to get current result.\n   */\n  term: string;\n}\n\n@Component({\n  selector: 'ngb-typeahead-window',\n  exportAs: 'ngbTypeaheadWindow',\n  encapsulation: ViewEncapsulation.None,\n  host: {'(mousedown)': '$event.preventDefault()', 'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id'},\n  template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n})\nexport class NgbTypeaheadWindow implements OnInit {\n  activeIdx = 0;\n\n  /**\n   *  The id for the typeahead window. The id should be unique and the same\n   *  as the associated typeahead's id.\n   */\n  @Input() id: string;\n\n  /**\n   * Flag indicating if the first row should be active initially\n   */\n  @Input() focusFirst = true;\n\n  /**\n   * Typeahead match results to be displayed\n   */\n  @Input() results;\n\n  /**\n   * Search term used to get current results\n   */\n  @Input() term: string;\n\n  /**\n   * A function used to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() formatter = toString;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Event raised when user selects a particular result row\n   */\n  @Output('select') selectEvent = new EventEmitter();\n\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\n\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n\n  getActive() { return this.results[this.activeIdx]; }\n\n  markActive(activeIdx: number) {\n    this.activeIdx = activeIdx;\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n    this._activeChanged();\n  }\n\n  select(item) { this.selectEvent.emit(item); }\n\n  ngOnInit() { this.resetActive(); }\n\n  private _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n}\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\n\n// usefulness (and default value) of delay documented in Material's CDK\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>(\n    'live announcer delay', {providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY});\nexport function ARIA_LIVE_DELAY_FACTORY(): number {\n  return 100;\n}\n\n\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n\n    element.classList.add('sr-only');\n\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\n\n\n@Injectable({providedIn: 'root'})\nexport class Live implements OnDestroy {\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n    if (element) {\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message: string) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    element.textContent = '';\n    const setText = () => element.textContent = message;\n    if (delay === null) {\n      setText();\n    } else {\n      setTimeout(setText, delay);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTypeaheadConfig {\n  container;\n  editable = true;\n  focusFirst = true;\n  showHint = false;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  ApplicationRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {BehaviorSubject, fromEvent, Observable, Subject, Subscription} from 'rxjs';\nimport {map, switchMap, tap} from 'rxjs/operators';\n\nimport {Live} from '../util/accessibility/live';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\nimport {PopupService} from '../util/popup';\nimport {PlacementArray, positionElements} from '../util/positioning';\nimport {isDefined, toString} from '../util/util';\n\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\n\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * An event emitted right before an item is selected from the result list.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * The item from the result list about to be selected.\n   */\n  item: any;\n\n  /**\n   * Calling this function will prevent item selection from happening.\n   */\n  preventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  exportAs: 'ngbTypeahead',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(keydown)': 'handleKeyDown($event)',\n    '[autocomplete]': 'autocomplete',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _subscription: Subscription;\n  private _closed$ = new Subject();\n  private _inputValueBackup: string;\n  private _valueChanges: Observable<string>;\n  private _resubscribeTypeahead: BehaviorSubject<any>;\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\n  private _zoneSubscription: any;\n\n  /**\n   * The value for the `autocomplete` attribute for the `<input>` element.\n   *\n   * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n   *\n   * @since 2.1.0\n   */\n  @Input() autocomplete = 'off';\n\n  /**\n   * A selector specifying the element the typeahead popup will be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, model values will not be restricted only to items selected from the popup.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * If `true`, the first item in the result list will always stay focused while typing.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the `<input>` field.\n   *\n   * It is called when the user selects something in the popup or the model value changes, so the input needs to\n   * be updated.\n   */\n  @Input() inputFormatter: (item: any) => string;\n\n  /**\n   * The function that converts a stream of text values from the `<input>` element to the stream of the array of items\n   * to display in the typeahead popup.\n   *\n   * If the resulting observable emits a non-empty array - the popup will be shown. If it emits an empty array - the\n   * popup will be closed.\n   *\n   * See the [basic example](#/components/typeahead/examples#basic) for more details.\n   *\n   * Note that the `this` argument is `undefined` so you need to explicitly bind it to a desired \"this\" target.\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<readonly any[]>;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the popup.\n   *\n   * Must be provided, if your `ngbTypeahead` returns something other than `Observable<string[]>`.\n   *\n   * Alternatively for more complex markup in the popup you should use `resultTemplate`.\n   */\n  @Input() resultFormatter: (item: any) => string;\n\n  /**\n   * The template to override the way resulting items are displayed in the popup.\n   *\n   * See the [ResultTemplateContext](#/components/typeahead/api#ResultTemplateContext) for the template context.\n   *\n   * Also see the [template for results demo](#/components/typeahead/examples#template) for more details.\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * If `true`, will show the hint in the `<input>` when an item in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /**\n   * The preferred placement of the typeahead.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * An event emitted right before an item is selected from the result list.\n   *\n   * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n   */\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  activeDescendant: string;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\n\n  private _onTouched = () => {};\n  private _onChange = (_: any) => {};\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>, viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _changeDetector: ChangeDetectorRef, applicationRef: ApplicationRef) {\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\n\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = this.showHint ? value : null;\n      this._onChange(this.editable ? value : undefined);\n    }));\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => results$));\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy(): void {\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  writeValue(value) {\n    this._writeInputValue(this._formatItemForInput(value));\n    if (this.showHint) {\n      this._inputValueBackup = value;\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  /**\n   * Dismisses typeahead popup window\n   */\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._resubscribeTypeahead.next(null);\n      this._closePopup();\n      if (this.showHint && this._inputValueBackup !== null) {\n        this._writeInputValue(this._inputValueBackup);\n      }\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n  isPopupOpen() { return this._windowRef != null; }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n    this._onTouched();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n        event.preventDefault();\n        this._windowRef.instance.next();\n        this._showHint();\n        break;\n      case Key.ArrowUp:\n        event.preventDefault();\n        this._windowRef.instance.prev();\n        this._showHint();\n        break;\n      case Key.Enter:\n      case Key.Tab:\n        const result = this._windowRef.instance.getActive();\n        if (isDefined(result)) {\n          event.preventDefault();\n          event.stopPropagation();\n          this._selectResult(result);\n        }\n        this._closePopup();\n        break;\n    }\n  }\n\n  private _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._changeDetector.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$,\n          [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n    }\n  }\n\n  private _closePopup() {\n    this._closed$.next();\n    this._popupService.close();\n    this._windowRef = null;\n    this.activeDescendant = undefined;\n  }\n\n  private _selectResult(result: any) {\n    let defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n\n  private _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n\n  private _showHint() {\n    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this._writeInputValue(formattedVal);\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  private _subscribeToUserInput(userInput$: Observable<readonly any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        this._windowRef.instance.resetActive();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      }\n\n      // live announcer\n      const count = results ? results.length : 0;\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  private _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbHighlight} from './highlight';\nimport {NgbTypeaheadWindow} from './typeahead-window';\nimport {NgbTypeahead} from './typeahead';\n\nexport {NgbHighlight} from './highlight';\nexport {NgbTypeaheadWindow} from './typeahead-window';\nexport {NgbTypeaheadConfig} from './typeahead-config';\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\n\n@NgModule({\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n  exports: [NgbTypeahead, NgbHighlight],\n  imports: [CommonModule],\n  entryComponents: [NgbTypeaheadWindow]\n})\nexport class NgbTypeaheadModule {\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbAccordionModule} from './accordion/accordion.module';\nimport {NgbAlertModule} from './alert/alert.module';\nimport {NgbButtonsModule} from './buttons/buttons.module';\nimport {NgbCarouselModule} from './carousel/carousel.module';\nimport {NgbCollapseModule} from './collapse/collapse.module';\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\nimport {NgbModalModule} from './modal/modal.module';\nimport {NgbNavModule} from './nav/nav.module';\nimport {NgbPaginationModule} from './pagination/pagination.module';\nimport {NgbPopoverModule} from './popover/popover.module';\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\nimport {NgbRatingModule} from './rating/rating.module';\nimport {NgbTabsetModule} from './tabset/tabset.module';\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\nimport {NgbToastModule} from './toast/toast.module';\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\nimport {NgbTypeaheadModule} from './typeahead/typeahead.module';\n\n\n\nexport {\n  NgbAccordion,\n  NgbAccordionConfig,\n  NgbAccordionModule,\n  NgbPanel,\n  NgbPanelChangeEvent,\n  NgbPanelContent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelTitle,\n  NgbPanelToggle\n} from './accordion/accordion.module';\nexport {NgbAlert, NgbAlertConfig, NgbAlertModule} from './alert/alert.module';\nexport {NgbButtonLabel, NgbButtonsModule, NgbCheckBox, NgbRadio, NgbRadioGroup} from './buttons/buttons.module';\nexport {\n  NgbCarousel,\n  NgbCarouselConfig,\n  NgbCarouselModule,\n  NgbSlide,\n  NgbSlideEvent,\n  NgbSlideEventDirection,\n  NgbSlideEventSource\n} from './carousel/carousel.module';\nexport {NgbCollapse, NgbCollapseModule} from './collapse/collapse.module';\nexport {\n  NgbCalendar,\n  NgbCalendarGregorian,\n  NgbCalendarHebrew,\n  NgbCalendarIslamicCivil,\n  NgbCalendarIslamicUmalqura,\n  NgbCalendarPersian,\n  NgbDate,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n  NgbDateNativeUTCAdapter,\n  NgbDateParserFormatter,\n  NgbDatepicker,\n  NgbDatepickerConfig,\n  NgbInputDatepickerConfig,\n  NgbDatepickerContent,\n  NgbDatepickerI18n,\n  NgbDatepickerI18nHebrew,\n  NgbDatepickerKeyboardService,\n  NgbDatepickerModule,\n  NgbDatepickerMonth,\n  NgbDatepickerNavigateEvent,\n  NgbDatepickerState,\n  NgbDateStruct,\n  NgbInputDatepicker,\n  NgbPeriod\n} from './datepicker/datepicker.module';\nexport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownConfig,\n  NgbDropdownItem,\n  NgbDropdownMenu,\n  NgbDropdownModule,\n  NgbDropdownToggle,\n  NgbNavbar\n} from './dropdown/dropdown.module';\nexport {\n  ModalDismissReasons,\n  NgbActiveModal,\n  NgbModal,\n  NgbModalConfig,\n  NgbModalModule,\n  NgbModalOptions,\n  NgbModalRef\n} from './modal/modal.module';\nexport {\n  NgbNavChangeEvent,\n  NgbNavConfig,\n  NgbNav,\n  NgbNavContent,\n  NgbNavContentContext,\n  NgbNavItem,\n  NgbNavLink,\n  NgbNavModule,\n  NgbNavOutlet\n} from './nav/nav.module';\nexport {\n  NgbPagination,\n  NgbPaginationConfig,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationModule,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination/pagination.module';\nexport {NgbPopover, NgbPopoverConfig, NgbPopoverModule} from './popover/popover.module';\nexport {NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule} from './progressbar/progressbar.module';\nexport {NgbRating, NgbRatingConfig, NgbRatingModule} from './rating/rating.module';\nexport {\n  NgbTab,\n  NgbTabChangeEvent,\n  NgbTabContent,\n  NgbTabset,\n  NgbTabsetConfig,\n  NgbTabsetModule,\n  NgbTabTitle\n} from './tabset/tabset.module';\nexport {\n  NgbTimeAdapter,\n  NgbTimepickerI18n,\n  NgbTimepicker,\n  NgbTimepickerConfig,\n  NgbTimepickerModule,\n  NgbTimeStruct\n} from './timepicker/timepicker.module';\nexport {NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule} from './toast/toast.module';\nexport {NgbTooltip, NgbTooltipConfig, NgbTooltipModule} from './tooltip/tooltip.module';\nexport {\n  NgbHighlight,\n  NgbTypeahead,\n  NgbTypeaheadConfig,\n  NgbTypeaheadModule,\n  NgbTypeaheadSelectItemEvent\n} from './typeahead/typeahead.module';\nexport {Placement} from './util/positioning';\n\n\nconst NGB_MODULES = [\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n  NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule,\n  NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule,\n  // tslint:disable-next-line:deprecation\n  NgbTabsetModule\n];\n\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\nexport class NgbModule {\n}\n"]}