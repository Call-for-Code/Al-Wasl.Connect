(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define("@angular/localize/src/tools/src/translate/translation_files/translation_parsers/translation_parser", ["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRpb25fcGFyc2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbG9jYWxpemUvc3JjL3Rvb2xzL3NyYy90cmFuc2xhdGUvdHJhbnNsYXRpb25fZmlsZXMvdHJhbnNsYXRpb25fcGFyc2Vycy90cmFuc2xhdGlvbl9wYXJzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmltcG9ydCB7ybVNZXNzYWdlSWQsIMm1UGFyc2VkVHJhbnNsYXRpb259IGZyb20gJ0Bhbmd1bGFyL2xvY2FsaXplL3ByaXZhdGUnO1xuaW1wb3J0IHtEaWFnbm9zdGljc30gZnJvbSAnLi4vLi4vLi4vZGlhZ25vc3RpY3MnO1xuXG4vKipcbiAqIEFuIG9iamVjdCB0aGF0IGhvbGRzIHRyYW5zbGF0aW9ucyB0aGF0IGhhdmUgYmVlbiBwYXJzZWQgZnJvbSBhIHRyYW5zbGF0aW9uIGZpbGUuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUGFyc2VkVHJhbnNsYXRpb25CdW5kbGUge1xuICBsb2NhbGU6IHN0cmluZ3x1bmRlZmluZWQ7XG4gIHRyYW5zbGF0aW9uczogUmVjb3JkPMm1TWVzc2FnZUlkLCDJtVBhcnNlZFRyYW5zbGF0aW9uPjtcbiAgZGlhZ25vc3RpY3M6IERpYWdub3N0aWNzO1xufVxuXG4vKipcbiAqIEltcGxlbWVudCB0aGlzIGludGVyZmFjZSB0byBwcm92aWRlIGEgY2xhc3MgdGhhdCBjYW4gcGFyc2UgdGhlIGNvbnRlbnRzIG9mIGEgdHJhbnNsYXRpb24gZmlsZS5cbiAqXG4gKiBUaGUgYGNhblBhcnNlKClgIG1ldGhvZCBjYW4gcmV0dXJuIGEgaGludCB0aGF0IGNhbiBiZSB1c2VkIGJ5IHRoZSBgcGFyc2UoKWAgbWV0aG9kIHRvIHNwZWVkIHVwXG4gKiBwYXJzaW5nLiBUaGlzIGFsbG93cyB0aGUgcGFyc2VyIHRvIGRvIHNpZ25pZmljYW50IHdvcmsgdG8gZGV0ZXJtaW5lIGlmIHRoZSBmaWxlIGNhbiBiZSBwYXJzZWRcbiAqIHdpdGhvdXQgZHVwbGljYXRpbmcgdGhlIHdvcmsgd2hlbiBpdCBjb21lcyB0byBhY3R1YWxseSBwYXJzaW5nIHRoZSBmaWxlLlxuICpcbiAqIEV4YW1wbGUgdXNhZ2U6XG4gKlxuICogYGBgXG4gKiBjb25zdCBwYXJzZXI6IFRyYW5zbGF0aW9uUGFyc2VyID0gZ2V0UGFyc2VyKCk7XG4gKiBjb25zdCByZXN1bHQgPSBwYXJzZXIuY2FuUGFyc2UoZmlsZVBhdGgsIGNvbnRlbnQpO1xuICogaWYgKHJlc3VsdCkge1xuICogICByZXR1cm4gcGFyc2VyLnBhcnNlKGZpbGVQYXRoLCBjb250ZW50LCByZXN1bHQpO1xuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVHJhbnNsYXRpb25QYXJzZXI8SGludCA9IHRydWU+IHtcbiAgLyoqXG4gICAqIENhbiB0aGlzIHBhcnNlciBwYXJzZSB0aGUgZ2l2ZW4gZmlsZT9cbiAgICpcbiAgICogQHBhcmFtIGZpbGVQYXRoIFRoZSBhYnNvbHV0ZSBwYXRoIHRvIHRoZSB0cmFuc2xhdGlvbiBmaWxlLlxuICAgKiBAcGFyYW0gY29udGVudHMgVGhlIGNvbnRlbnRzIG9mIHRoZSB0cmFuc2xhdGlvbiBmaWxlLlxuICAgKiBAcmV0dXJucyBBIGhpbnQsIHdoaWNoIGNhbiBiZSB1c2VkIGluIGRvaW5nIHRoZSBhY3R1YWwgcGFyc2luZywgaWYgdGhlIGZpbGUgY2FuIGJlIHBhcnNlZCBieVxuICAgKiB0aGlzIHBhcnNlcjsgZmFsc2Ugb3RoZXJ3aXNlLlxuICAgKi9cbiAgY2FuUGFyc2UoZmlsZVBhdGg6IHN0cmluZywgY29udGVudHM6IHN0cmluZyk6IEhpbnR8ZmFsc2U7XG5cbiAgLyoqXG4gICAqIFBhcnNlcyB0aGUgZ2l2ZW4gZmlsZSwgZXh0cmFjdGluZyB0aGUgdGFyZ2V0IGxvY2FsZSBhbmQgdHJhbnNsYXRpb25zLlxuICAgKlxuICAgKiBOb3RlIHRoYXQgdGhpcyBtZXRob2Qgc2hvdWxkIG5vdCB0aHJvdyBhbiBlcnJvci4gQ2hlY2sgdGhlIGBidW5kbGUuZGlhZ25vc3RpY3NgIHByb3BlcnR5IGZvclxuICAgKiBwb3RlbnRpYWwgcGFyc2luZyBlcnJvcnMgYW5kIHdhcm5pbmdzLlxuICAgKlxuICAgKiBAcGFyYW0gZmlsZVBhdGggVGhlIGFic29sdXRlIHBhdGggdG8gdGhlIHRyYW5zbGF0aW9uIGZpbGUuXG4gICAqIEBwYXJhbSBjb250ZW50cyBUaGUgY29udGVudHMgb2YgdGhlIHRyYW5zbGF0aW9uIGZpbGUuXG4gICAqIEBwYXJhbSBoaW50IEEgdmFsdWUgdGhhdCBjYW4gYmUgdXNlZCBieSB0aGUgcGFyc2VyIHRvIHNwZWVkIHVwIHBhcnNpbmcgb2YgdGhlIGZpbGUuIFRoaXMgd2lsbFxuICAgKiBoYXZlIGJlZW4gcHJvdmlkZWQgYXMgdGhlIHJldHVybiByZXN1bHQgZnJvbSBjYWxsaW5nIGBjYW5QYXJzZSgpYC5cbiAgICogQHJldHVybnMgVGhlIHRyYW5zbGF0aW9uIGJ1bmRsZSBwYXJzZWQgZnJvbSB0aGUgZmlsZS5cbiAgICogQHRocm93cyBObyBlcnJvcnMuIElmIHRoZXJlIHdhcyBhIHByb2JsZW0gd2l0aCBwYXJzaW5nIHRoZSBidW5kbGUgd2lsbCBjb250YWluIGVycm9yc1xuICAgKiBpbiB0aGUgYGRpYWdub3N0aWNzYCBwcm9wZXJ0eS5cbiAgICovXG4gIHBhcnNlKGZpbGVQYXRoOiBzdHJpbmcsIGNvbnRlbnRzOiBzdHJpbmcsIGhpbnQ6IEhpbnQpOiBQYXJzZWRUcmFuc2xhdGlvbkJ1bmRsZTtcbiAgLyoqXG4gICAqIFBhcnNlcyB0aGUgZ2l2ZW4gZmlsZSwgZXh0cmFjdGluZyB0aGUgdGFyZ2V0IGxvY2FsZSBhbmQgdHJhbnNsYXRpb25zLlxuICAgKlxuICAgKiBAZGVwcmVjYXRlZCBUaGlzIG92ZXJsb2FkIGlzIGtlcHQgZm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHkuIEdvaW5nIGZvcndhcmQgdXNlIHRoZSBIaW50XG4gICAqIHJldHVybmVkIGZyb20gYGNhblBhcnNlKClgIHNvIHRoYXQgdGhpcyBtZXRob2QgY2FuIGF2b2lkIGR1cGxpY2F0aW5nIGVmZm9ydC5cbiAgICpcbiAgICogQHBhcmFtIGZpbGVQYXRoIFRoZSBhYnNvbHV0ZSBwYXRoIHRvIHRoZSB0cmFuc2xhdGlvbiBmaWxlLlxuICAgKiBAcGFyYW0gY29udGVudHMgVGhlIGNvbnRlbnRzIG9mIHRoZSB0cmFuc2xhdGlvbiBmaWxlLlxuICAgKiBAcmV0dXJucyBUaGUgdHJhbnNsYXRpb24gYnVuZGxlIHBhcnNlZCBmcm9tIHRoZSBmaWxlLlxuICAgKiBAdGhyb3dzIEFuIGVycm9yIGlmIHRoZXJlIHdhcyBhIHByb2JsZW0gcGFyc2luZyB0aGlzIGZpbGUuXG4gICAqL1xuICBwYXJzZShmaWxlUGF0aDogc3RyaW5nLCBjb250ZW50czogc3RyaW5nKTogUGFyc2VkVHJhbnNsYXRpb25CdW5kbGU7XG59XG4iXX0=