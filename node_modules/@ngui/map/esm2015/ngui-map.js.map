{
  "version": 3,
  "file": "ngui-map.js",
  "sources": [
    "ng://@ngui/map/out/ngui-map.module.ts",
    "ng://@ngui/map/out/directives/transit-layer.ts",
    "ng://@ngui/map/out/directives/traffic-layer.ts",
    "ng://@ngui/map/out/directives/street-view-panorama.ts",
    "ng://@ngui/map/out/directives/polyline.ts",
    "ng://@ngui/map/out/directives/polygon.ts",
    "ng://@ngui/map/out/directives/places-auto-complete.ts",
    "ng://@ngui/map/out/directives/marker.ts",
    "ng://@ngui/map/out/directives/kml-layer.ts",
    "ng://@ngui/map/out/directives/heatmap-layer.ts",
    "ng://@ngui/map/out/directives/ground-overlay.ts",
    "ng://@ngui/map/out/directives/drawing-manager.ts",
    "ng://@ngui/map/out/directives/directions-renderer.ts",
    "ng://@ngui/map/out/directives/data-layer.ts",
    "ng://@ngui/map/out/directives/circle.ts",
    "ng://@ngui/map/out/components/custom-marker.ts",
    "ng://@ngui/map/out/components/info-window.ts",
    "ng://@ngui/map/out/directives/bicycling-layer.ts",
    "ng://@ngui/map/out/components/ngui-map.component.ts",
    "ng://@ngui/map/out/services/ngui-map.ts",
    "ng://@ngui/map/out/services/geo-coder.ts",
    "ng://@ngui/map/out/services/api-loader.ts",
    "ng://@ngui/map/out/services/config.ts",
    "ng://@ngui/map/out/services/navigator-geolocation.ts",
    "ng://@ngui/map/out/services/option-builder.ts",
    "ng://@ngui/map/out/directives/base-map-directive.ts",
    "ng://@ngui/map/out/services/util.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OptionBuilder } from './services/option-builder';\nimport { GeoCoder } from './services/geo-coder';\nimport { NavigatorGeolocation } from './services/navigator-geolocation';\nimport { NG_MAP_CONFIG_TOKEN, ConfigOption } from './services/config';\nimport { NgMapApiLoader, NgMapAsyncCallbackApiLoader } from './services/api-loader';\n\nimport { NguiMapComponent } from './components/ngui-map.component';\nimport { InfoWindow } from './components/info-window';\nimport { CustomMarker } from './components/custom-marker';\n\nimport { BicyclingLayer } from './directives/bicycling-layer';\nimport { Circle } from './directives/circle';\nimport { DataLayer } from './directives/data-layer';\nimport { DirectionsRenderer } from './directives/directions-renderer';\nimport { DrawingManager } from './directives/drawing-manager';\nimport { GroundOverlay } from './directives/ground-overlay';\nimport { HeatmapLayer } from './directives/heatmap-layer';\nimport { KmlLayer } from './directives/kml-layer';\nimport { Marker } from './directives/marker';\nimport { NguiMap } from './services/ngui-map';\nimport { PlacesAutoComplete } from './directives/places-auto-complete';\nimport { Polygon } from './directives/polygon';\nimport { Polyline } from './directives/polyline';\nimport { StreetViewPanorama } from './directives/street-view-panorama';\nimport { TrafficLayer } from './directives/traffic-layer';\nimport { TransitLayer } from './directives/transit-layer';\n\nconst COMPONENTS_DIRECTIVES = [\n  NguiMapComponent, InfoWindow,\n  Marker, Circle, CustomMarker, Polygon, InfoWindow, Polyline, GroundOverlay,\n  TransitLayer, TrafficLayer, HeatmapLayer, BicyclingLayer, KmlLayer, DataLayer,\n  StreetViewPanorama, PlacesAutoComplete, DirectionsRenderer,\n  DrawingManager,\n];\n\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: COMPONENTS_DIRECTIVES,\n  exports: [COMPONENTS_DIRECTIVES],\n  providers: [\n    GeoCoder,\n    NavigatorGeolocation,\n    NguiMap,\n    OptionBuilder,\n    {provide: NgMapApiLoader, useClass: NgMapAsyncCallbackApiLoader},\n  ]\n})\nexport class NguiMapModule {\n  static forRoot(config: ConfigOption = {}): ModuleWithProviders {\n    return {\n      ngModule: NguiMapModule,\n      providers: [\n        { provide: NG_MAP_CONFIG_TOKEN, useValue: config }\n      ],\n    };\n  }\n}\n",
    "import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [];\nconst OUTPUTS = [ ];\n\n@Directive({\n  selector: 'ngui-map > transit-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class TransitLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n\n\n  // declare OUTPUTS for AOT compiler\n\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'TransitLayer', INPUTS, OUTPUTS);\n  }\n}",
    "import { Directive } from '@angular/core';\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = ['autoRefresh', 'options' ];\nconst OUTPUTS = [ ];\n\n@Directive({\n  selector: 'ngui-map > traffic-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class TrafficLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public autoRefresh: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'TrafficLayer', INPUTS, OUTPUTS);\n  }\n}",
    "import {Directive, OnDestroy} from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'selector', 'options',\n  'addressControl', 'addressControlOptions', 'clickToGo', 'disableDefaultUI', 'disableDoubleClickZoom',\n  'enableCloseButton', 'fullscreenControl', 'fullscreenControlOptions', 'imageDateControl', 'linksControl',\n  'motionTracking', 'motionTrackingControl', 'panControl', 'panControlOptions', 'pano',\n  'position', 'pov', 'scrollwheel', 'showRoadLabels', 'visible', 'zoomControl', 'zoomControlOptions'\n];\nconst OUTPUTS = [\n  'closeclick', 'pano_changed', 'position_changed', 'pov_changed', 'resize', 'status_changed',\n  'visible_changed', 'zoom_changed'\n];\n\n@Directive({\n  selector: 'ngui-map > street-view-panorama',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class StreetViewPanorama extends BaseMapDirective implements OnDestroy {\n  // declare INPUTS for AOT compiler\n  public selector: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n  public addressControl: any; // generated by ngc-pre-compiler.js\n  public addressControlOptions: any; // generated by ngc-pre-compiler.js\n  public clickToGo: any; // generated by ngc-pre-compiler.js\n  public disableDefaultUI: any; // generated by ngc-pre-compiler.js\n  public disableDoubleClickZoom: any; // generated by ngc-pre-compiler.js\n  public enableCloseButton: any; // generated by ngc-pre-compiler.js\n  public fullscreenControl: any; // generated by ngc-pre-compiler.js\n  public fullscreenControlOptions: any; // generated by ngc-pre-compiler.js\n  public imageDateControl: any; // generated by ngc-pre-compiler.js\n  public linksControl: any; // generated by ngc-pre-compiler.js\n  public motionTracking: any; // generated by ngc-pre-compiler.js\n  public motionTrackingControl: any; // generated by ngc-pre-compiler.js\n  public panControl: any; // generated by ngc-pre-compiler.js\n  public panControlOptions: any; // generated by ngc-pre-compiler.js\n  public pano: any; // generated by ngc-pre-compiler.js\n  public position: any; // generated by ngc-pre-compiler.js\n  public pov: any; // generated by ngc-pre-compiler.js\n  public scrollwheel: any; // generated by ngc-pre-compiler.js\n  public showRoadLabels: any; // generated by ngc-pre-compiler.js\n  public visible: any; // generated by ngc-pre-compiler.js\n  public zoomControl: any; // generated by ngc-pre-compiler.js\n  public zoomControlOptions: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public closeclick: any; // generated by ngc-pre-compiler.js\n  public pano_changed: any; // generated by ngc-pre-compiler.js\n  public position_changed: any; // generated by ngc-pre-compiler.js\n  public pov_changed: any; // generated by ngc-pre-compiler.js\n  public resize: any; // generated by ngc-pre-compiler.js\n  public status_changed: any; // generated by ngc-pre-compiler.js\n  public visible_changed: any; // generated by ngc-pre-compiler.js\n  public zoom_changed: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'StreetViewPanorama', INPUTS, OUTPUTS);\n  }\n\n  // only called when map is ready\n  initialize(): void {\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\n\n    let element: HTMLElement;\n    if (this.objectOptions.selector) {\n      // noinspection TypeScriptValidateTypes\n      element = document.querySelector(this['selector']);\n      delete this.objectOptions.selector;\n    } else {\n      element = this.nguiMapComponent.el;\n    }\n\n    // will be set after geocoded\n    typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n\n    this.mapObject = new google.maps[this.mapObjectName](element, this.objectOptions);\n    this.mapObject['mapObjectName'] = this.mapObjectName;\n    this.mapObject['nguiMapComponent'] = this.nguiMapComponent;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\n\n  // When destroyed, remove event listener, and delete this object to prevent memory leak\n  ngOnDestroy() {\n    if (this.nguiMapComponent.el) {\n      this.nguiMap.clearObjectEvents(this.outputs, this, 'mapObject');\n    }\n  }\n}",
    "import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'clickable', 'draggable', 'editable', 'geodesic', 'icons', 'path', 'strokeColor',\n  'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'options'\n];\nconst OUTPUTS = [\n  'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown',\n  'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'\n];\n\n@Directive({\n  selector: 'ngui-map > polyline',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class Polyline extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public editable: any; // generated by ngc-pre-compiler.js\n  public geodesic: any; // generated by ngc-pre-compiler.js\n  public icons: any; // generated by ngc-pre-compiler.js\n  public path: any; // generated by ngc-pre-compiler.js\n  public strokeColor: any; // generated by ngc-pre-compiler.js\n  public strokeOpacity: any; // generated by ngc-pre-compiler.js\n  public strokeWeight: any; // generated by ngc-pre-compiler.js\n  public visible: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mousemove: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Polyline', INPUTS, OUTPUTS);\n  }\n}\n\n",
    "import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'paths',\n  'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n];\nconst OUTPUTS = [\n  'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown',\n  'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick',\n];\n\n@Directive({\n  selector: 'ngui-map>polygon, ngui-map>map-polygon',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class Polygon extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public editable: any; // generated by ngc-pre-compiler.js\n  public fillColor: any; // generated by ngc-pre-compiler.js\n  public fillOpacity: any; // generated by ngc-pre-compiler.js\n  public geodesic: any; // generated by ngc-pre-compiler.js\n  public paths: any; // generated by ngc-pre-compiler.js\n  public strokeColor: any; // generated by ngc-pre-compiler.js\n  public strokeOpacity: any; // generated by ngc-pre-compiler.js\n  public strokePosition: any; // generated by ngc-pre-compiler.js\n  public strokeWeight: any; // generated by ngc-pre-compiler.js\n  public visible: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mousemove: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Polygon', INPUTS, OUTPUTS);\n  }\n}\n",
    "import {\n  Input,\n  Output,\n  Directive,\n  EventEmitter,\n  ElementRef,\n} from '@angular/core';\n\nimport { NgMapApiLoader } from '../services/api-loader';\nimport { OptionBuilder } from '../services/option-builder';\nimport { missingLibraryError } from '../services/util';\nimport { first } from 'rxjs/operators';\n\n@Directive({\n  selector: '[places-auto-complete]'\n})\nexport class PlacesAutoComplete {\n  @Input() bounds: any;\n  @Input() componentRestrictions: any;\n  @Input() types: string[];\n\n  @Output('place_changed') place_changed: EventEmitter<any> = new EventEmitter();\n  @Output() initialized$: EventEmitter<any> = new EventEmitter();\n\n  public objectOptions: any;\n  public autocomplete: google.maps.places.Autocomplete;\n\n  constructor(\n    public optionBuilder: OptionBuilder,\n    public elementRef: ElementRef,\n    public apiLoader: NgMapApiLoader,\n  ) {\n    apiLoader.load();\n    apiLoader.api$\n      .pipe(first())\n      .subscribe(() => this.initialize());\n  }\n\n  // only called when map is ready\n  initialize = (): void => {\n    this.objectOptions =\n      this.optionBuilder.googlizeAllInputs(['bounds', 'componentRestrictions', 'types'], this);\n\n\n    if (!google.maps.places) {\n      throw missingLibraryError('PlacesAutoComplete', 'places');\n    }\n\n    this.autocomplete = new google.maps.places.Autocomplete(\n      this.elementRef.nativeElement,\n      this.objectOptions\n    );\n\n\n    this.autocomplete.addListener('place_changed', place => {\n      this.place_changed.emit(this.autocomplete.getPlace());\n    });\n\n    this.initialized$.emit(this.autocomplete);\n  }\n}\n",
    "import {Directive, OnInit} from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'anchorPoint', 'animation', 'clickable', 'cursor', 'draggable', 'icon', 'label', 'opacity',\n  'optimized', 'place', 'position', 'shape', 'title', 'visible', 'zIndex', 'options',\n  // ngui-map specific inputs\n  'geoFallbackPosition'\n];\nconst OUTPUTS = [\n  'animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged',\n  'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick',\n  'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged'\n];\n\n@Directive({\n  selector: 'ngui-map > marker',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class Marker extends BaseMapDirective implements OnInit {\n  // declare INPUTS for AOT compiler\n  public anchorPoint: any; // generated by ngc-pre-compiler.js\n  public animation: any; // generated by ngc-pre-compiler.js\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public cursor: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public icon: any; // generated by ngc-pre-compiler.js\n  public label: any; // generated by ngc-pre-compiler.js\n  public opacity: any; // generated by ngc-pre-compiler.js\n  public optimized: any; // generated by ngc-pre-compiler.js\n  public place: any; // generated by ngc-pre-compiler.js\n  public position: any; // generated by ngc-pre-compiler.js\n  public shape: any; // generated by ngc-pre-compiler.js\n  public title: any; // generated by ngc-pre-compiler.js\n  public visible: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n  public geoFallbackPosition: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public animationChanged: any; // generated by ngc-pre-compiler.js\n  public click: any; // generated by ngc-pre-compiler.js\n  public clickableChanged: any; // generated by ngc-pre-compiler.js\n  public cursorChanged: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public draggableChanged: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public flatChanged: any; // generated by ngc-pre-compiler.js\n  public iconChanged: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public positionChanged: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n  public shapeChanged: any; // generated by ngc-pre-compiler.js\n  public titleChanged: any; // generated by ngc-pre-compiler.js\n  public visibleChanged: any; // generated by ngc-pre-compiler.js\n  public zindexChanged: any; // generated by ngc-pre-compiler.js\n\n  public mapObject: google.maps.Marker;\n  public objectOptions: google.maps.MarkerOptions = <google.maps.MarkerOptions>{};\n\n  constructor(private nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Marker', INPUTS, OUTPUTS);\n\n  }\n\n  // Initialize this map object when map is ready\n  ngOnInit() {\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\n      this.initialize();\n    } else {\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n    }\n  }\n\n  initialize(): void {\n    super.initialize();\n    this.setPosition();\n  }\n\n  setPosition(): void {\n    if (!this['position']) {\n      this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(\n        position => {\n\n          let latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n          this.mapObject.setPosition(latLng);\n        },\n        error => {\n          console.error('ngui-map, error finding the current location');\n          this.mapObject.setPosition(this.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    } else if (typeof this['position'] === 'string') {\n      this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({address: this['position']}).subscribe(\n        results => {\n\n          this.mapObject.setPosition(results[0].geometry.location);\n        },\n        error => {\n          console.error('ngui-map, error finding the location from', this['position']);\n          this.mapObject.setPosition(this.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    }\n  }\n}\n",
    "import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [ 'clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex', 'options' ];\nconst OUTPUTS = [ 'click', 'defaultviewport_changed', 'status_changed' ];\n\n@Directive({\n  selector: 'ngui-map > kml-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class KmlLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public preserveViewport: any; // generated by ngc-pre-compiler.js\n  public screenOverlays: any; // generated by ngc-pre-compiler.js\n  public suppressInfoWindows: any; // generated by ngc-pre-compiler.js\n  public url: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public click: any; // generated by ngc-pre-compiler.js\n  public defaultviewport_changed: any; // generated by ngc-pre-compiler.js\n  public status_changed: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'KmlLayer', INPUTS, OUTPUTS);\n  }\n}\n",
    "import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [ 'data', 'dissipating', 'gradient', 'maxIntensity', 'opacity', 'radius', 'options' ];\nconst OUTPUTS = [];\n\n@Directive({\n  selector: 'ngui-map > heatmap-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class HeatmapLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public data: any; // generated by ngc-pre-compiler.js\n  public dissipating: any; // generated by ngc-pre-compiler.js\n  public gradient: any; // generated by ngc-pre-compiler.js\n  public maxIntensity: any; // generated by ngc-pre-compiler.js\n  public opacity: any; // generated by ngc-pre-compiler.js\n  public radius: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n\n\n  public libraryName = 'visualization';\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'HeatmapLayer', INPUTS, OUTPUTS);\n  }\n}\n",
    "import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [ 'url', 'bounds', 'clickable', 'opacity' ];\nconst OUTPUTS = [ 'click', 'dblclick' ];\n\n@Directive({\n  selector: 'ngui-map > ground-overlay',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class GroundOverlay extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public url: any; // generated by ngc-pre-compiler.js\n  public bounds: any; // generated by ngc-pre-compiler.js\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public opacity: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n\n  public mapObject: google.maps.GroundOverlay;\n  public objectOptions: google.maps.GroundOverlayOptions = <google.maps.GroundOverlayOptions>{};\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'GroundOverlay', INPUTS, OUTPUTS);\n  }\n\n  // re-declaring initialize function. called when map is ready\n  initialize(): void {\n    // url, bounds are not the options of GroundOverlay\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(['clickable', 'opacity'], this);\n\n\n    // noinspection TypeScriptUnresolvedFunction\n    this.mapObject = new google.maps.GroundOverlay(this['url'], this['bounds'], this.objectOptions);\n    this.mapObject.setMap(this.nguiMapComponent.map);\n    this.mapObject['mapObjectName'] = this.mapObjectName;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\n}\n\n",
    "import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'options',\n  'circleOptions', 'drawingControl', 'drawingControlOptions', 'drawingMode',\n  'map', 'markerOptions', 'polygonOptions', 'polylineOptions', 'rectangleOptions'\n];\nconst OUTPUTS = [\n  'circlecomplete', 'markercomplete', 'overlaycomplete',\n  'polygoncomplete', 'polylinecomplete', 'rectanglecomplete'\n];\n\n@Directive({\n  selector: 'ngui-map > drawing-manager',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class DrawingManager extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public options: any; // generated by ngc-pre-compiler.js\n  public circleOptions: any; // generated by ngc-pre-compiler.js\n  public drawingControl: any; // generated by ngc-pre-compiler.js\n  public drawingControlOptions: any; // generated by ngc-pre-compiler.js\n  public drawingMode: any; // generated by ngc-pre-compiler.js\n  public map: any; // generated by ngc-pre-compiler.js\n  public markerOptions: any; // generated by ngc-pre-compiler.js\n  public polygonOptions: any; // generated by ngc-pre-compiler.js\n  public polylineOptions: any; // generated by ngc-pre-compiler.js\n  public rectangleOptions: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public circlecomplete: any; // generated by ngc-pre-compiler.js\n  public markercomplete: any; // generated by ngc-pre-compiler.js\n  public overlaycomplete: any; // generated by ngc-pre-compiler.js\n  public polygoncomplete: any; // generated by ngc-pre-compiler.js\n  public polylinecomplete: any; // generated by ngc-pre-compiler.js\n  public rectanglecomplete: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'DrawingManager', INPUTS, OUTPUTS);\n    this.libraryName = 'drawing';\n  }\n}\n",
    "import { Input, Directive, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\nimport { NavigatorGeolocation } from '../services/navigator-geolocation';\n\nconst INPUTS = [\n  'directions', 'draggable', 'hideRouteList', 'infoWindow', 'panel', 'markerOptions',\n  'polylineOptions', 'preserveViewport', 'routeIndex', 'suppressBicyclingLayer',\n  'suppressInfoWindows', 'suppressMarkers', 'suppressPolylines'\n];\nconst OUTPUTS = ['directions_changed'];\n\n@Directive({\n  selector: 'ngui-map > directions-renderer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class DirectionsRenderer extends BaseMapDirective implements OnChanges, OnDestroy {\n  // declare INPUTS for AOT compiler\n  public directions: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public hideRouteList: any; // generated by ngc-pre-compiler.js\n  public infoWindow: any; // generated by ngc-pre-compiler.js\n  public panel: any; // generated by ngc-pre-compiler.js\n  public markerOptions: any; // generated by ngc-pre-compiler.js\n  public polylineOptions: any; // generated by ngc-pre-compiler.js\n  public preserveViewport: any; // generated by ngc-pre-compiler.js\n  public routeIndex: any; // generated by ngc-pre-compiler.js\n  public suppressBicyclingLayer: any; // generated by ngc-pre-compiler.js\n  public suppressInfoWindows: any; // generated by ngc-pre-compiler.js\n  public suppressMarkers: any; // generated by ngc-pre-compiler.js\n  public suppressPolylines: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public directions_changed: any; // generated by ngc-pre-compiler.js\n\n  // tslint:disable-next-line\n  @Input('directions-request') directionsRequest: google.maps.DirectionsRequest;\n\n  directionsService: google.maps.DirectionsService;\n  directionsRenderer: google.maps.DirectionsRenderer;\n\n  constructor(\n    nguiMapComponent: NguiMapComponent,\n    public geolocation: NavigatorGeolocation\n  ) {\n    super(nguiMapComponent, 'DirectionsRenderer', INPUTS, OUTPUTS);\n  }\n\n  // only called when map is ready\n  initialize(): void {\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n    if (typeof this.objectOptions['panel'] === 'string') { // find a Node for panel\n      this.objectOptions['panel'] = document.querySelector(this.objectOptions['panel']);\n    }\n\n\n\n    this.directionsService = new google.maps.DirectionsService();\n    this.directionsRenderer = new google.maps.DirectionsRenderer(this.objectOptions);\n\n    this.directionsRenderer.setMap(this.nguiMapComponent.map);\n\n    // set google events listeners and emidirectionsRenderer to this outputs listeners\n    this.showDirections(this.directionsRequest);\n\n    this.nguiMap.setObjectEvents(this.outputs, this, 'directionsRenderer');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.directionsRenderer);\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    let newOptions = {};\n    for (let key in changes) {\n      if (this.inputs.indexOf(key) !== -1) {\n        newOptions[key] = this.optionBuilder.googlize(changes[key].currentValue);\n      }\n    }\n    if (changes['directionsRequest'] && this.directionsRenderer) {\n      this.directionsService && this.showDirections(this.directionsRequest);\n    }\n  }\n\n  showDirections(directionsRequest: google.maps.DirectionsRequest) {\n    this.directionsService.route(directionsRequest,\n      (response: any, status: any) =>  {\n        // in some-case the callback is called during destroy component,\n        // we should make sure directionsRenderer is still defined (cancelling `route` callback is not possible).\n        if (!this.directionsRenderer) {\n          return;\n        }\n\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.directionsRenderer.setDirections(response);\n        } else {\n          console.error('Directions request failed due to ' + status);\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.nguiMap.clearObjectEvents(this.outputs, this, 'directionsRenderer');\n  }\n}",
    "import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = ['controlPosition', 'controls', 'drawingMode', 'featureFactory', 'style', 'geoJson', 'geoJsonUrl'];\nconst OUTPUTS = [\n  'addfeature', 'click', 'dblclick', 'mousedown', 'mouseout', 'mouseover',\n  'mouseup', 'removefeature', 'removeproperty', 'rightclick', 'setgeometry', 'setproperty'\n];\n\n@Directive({\n  selector: 'ngui-map > data-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class DataLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public controlPosition: any; // generated by ngc-pre-compiler.js\n  public controls: any; // generated by ngc-pre-compiler.js\n  public drawingMode: any; // generated by ngc-pre-compiler.js\n  public featureFactory: any; // generated by ngc-pre-compiler.js\n  public style: any; // generated by ngc-pre-compiler.js\n  public geoJson: any; // generated by ngc-pre-compiler.js\n  public geoJsonUrl: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public addfeature: any; // generated by ngc-pre-compiler.js\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public removefeature: any; // generated by ngc-pre-compiler.js\n  public removeproperty: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n  public setgeometry: any; // generated by ngc-pre-compiler.js\n  public setproperty: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComponent: NguiMapComponent) {\n    super(nguiMapComponent, 'Data', INPUTS, OUTPUTS);\n  }\n\n  // only called when map is ready\n  initialize(): void {\n    if (this['geoJson']) {\n      // addGeoJson from an object\n\n      this.nguiMapComponent.map.data.addGeoJson(this['geoJson']);\n    } else if (this['geoJsonUrl']) {\n      // loadGeoJson from a URL\n\n      this.nguiMapComponent.map.data.loadGeoJson(this['geoJsonUrl']);\n    }\n    else {\n      this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\n      this.nguiMapComponent.map.data.add(this.objectOptions);\n    }\n\n    // unlike others, data belongs to map. e.g., map.data.loadGeoJson(), map.data.add()\n    this.mapObject = this.nguiMapComponent.map.data;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\n}",
    "import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'center', 'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'map', 'radius',\n  'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n  // ngui-map specific inputs\n  'geoFallbackCenter'\n];\nconst OUTPUTS = [\n  'centerChanged', 'click', 'dblclick', 'drag', 'dragend', 'dragstart',\n  'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'radiusChanged', 'rightclick',\n];\n\n@Directive({\n  selector: 'ngui-map>circle, ngui-map>map-circle',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class Circle extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public center: any; // generated by ngc-pre-compiler.js\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public editable: any; // generated by ngc-pre-compiler.js\n  public fillColor: any; // generated by ngc-pre-compiler.js\n  public fillOpacity: any; // generated by ngc-pre-compiler.js\n  public map: any; // generated by ngc-pre-compiler.js\n  public radius: any; // generated by ngc-pre-compiler.js\n  public strokeColor: any; // generated by ngc-pre-compiler.js\n  public strokeOpacity: any; // generated by ngc-pre-compiler.js\n  public strokePosition: any; // generated by ngc-pre-compiler.js\n  public strokeWeight: any; // generated by ngc-pre-compiler.js\n  public visible: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n  public geoFallbackCenter: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public centerChanged: any; // generated by ngc-pre-compiler.js\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mousemove: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public radiusChanged: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n\n  public mapObject: google.maps.Circle;\n  public objectOptions: google.maps.CircleOptions = <google.maps.CircleOptions>{};\n\n  constructor(private nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Circle', INPUTS, OUTPUTS);\n  }\n\n  initialize(): void {\n    super.initialize();\n    this.setCenter();\n  }\n\n  setCenter(): void {\n    if (!this['center']) {\n      this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(\n        center => {\n\n          let latLng = new google.maps.LatLng(center.coords.latitude, center.coords.longitude);\n          this.mapObject.setCenter(latLng);\n        },\n        error => {\n          console.error('ngui-map, error in finding the current position');\n          this.mapObject.setCenter(this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    } else if (typeof this['center'] === 'string') {\n      this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({address: this['center']}).subscribe(\n        results => {\n\n          this.mapObject.setCenter(results[0].geometry.location);\n        },\n        error => {\n          console.error('ngui-map, error in finding location from', this['center']);\n          this.mapObject.setCenter(this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    }\n  }\n}\n",
    "import {\r\n  Component,\r\n  ElementRef,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges, OnInit, OnDestroy, OnChanges,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\n\r\nimport { NguiMap } from '../services/ngui-map';\r\nimport { NguiMapComponent } from './ngui-map.component';\r\n\r\nconst INPUTS = [\r\n  'position'\r\n];\r\n// to avoid DOM event conflicts map_*\r\nconst OUTPUTS = [\r\n  'animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged',\r\n  'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick',\r\n  'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged',\r\n  'map_click', 'map_mouseover', 'map_mouseout', 'map_mouseup', 'map_mousedown', 'map_drag', 'map_dragend'\r\n];\r\n\r\n/**\r\n * Wrapper to a create extend OverlayView at runtime, only after google maps is loaded.\r\n * Otherwise throws a google is unknown error.\r\n */\r\nfunction getCustomMarkerOverlayView(htmlEl: HTMLElement, position: any) {\r\n\r\n  class CustomMarkerOverlayView extends google.maps.OverlayView {\r\n\r\n    private htmlEl: HTMLElement;\r\n    private position: any;\r\n    private zIndex: string;\r\n    private visible: boolean = true;\r\n\r\n    constructor(htmlEl: HTMLElement, position: any) {\r\n      super();\r\n      this.htmlEl = htmlEl;\r\n      this.position = position;\r\n    }\r\n\r\n    onAdd(): void {\r\n      this.getPanes().overlayMouseTarget.appendChild(this.htmlEl);\r\n\r\n      // required for correct display inside google maps container\r\n      this.htmlEl.style.position = 'absolute';\r\n    }\r\n\r\n    draw(): void {\r\n      this.setPosition(this.position);\r\n      this.setZIndex(this.zIndex);\r\n      this.setVisible(this.visible);\r\n    }\r\n\r\n    onRemove(): void {\r\n      //\r\n    }\r\n\r\n    getPosition() {\r\n      return this.position;\r\n    }\r\n\r\n    setPosition = (position?: any) => {\r\n      this.htmlEl.style.visibility = 'hidden';\r\n\r\n      if (position.constructor.name === 'Array') {\r\n        this.position = new google.maps.LatLng(position[0], position[1]);\r\n      } else if (typeof position === 'string') {\r\n        let geocoder = new google.maps.Geocoder();\r\n\r\n        geocoder.geocode({address: position}, (results, status) => {\r\n          if (status === google.maps.GeocoderStatus.OK) {\r\n\r\n            this.setPosition(results[0].geometry.location);\r\n          } else {\r\n\r\n          }\r\n        });\r\n      } else if (position && typeof position.lng === 'function') {\r\n        this.position = position;\r\n      }\r\n\r\n      if (this.getProjection() && typeof this.position.lng === 'function') {\r\n        let positionOnMap = () => {\r\n          let projection = this.getProjection();\r\n          if (!projection) {\r\n            return;\r\n          }\r\n          let posPixel = projection.fromLatLngToDivPixel(this.position);\r\n          let x = Math.round(posPixel.x - (this.htmlEl.offsetWidth / 2));\r\n          let y = Math.round(posPixel.y - this.htmlEl.offsetHeight / 2);\r\n          this.htmlEl.style.left = x + 'px';\r\n          this.htmlEl.style.top = y + 'px';\r\n          this.htmlEl.style.visibility = 'visible';\r\n        };\r\n\r\n        if (this.htmlEl.offsetWidth && this.htmlEl.offsetHeight) {\r\n          positionOnMap();\r\n        } else {\r\n          setTimeout(() => positionOnMap());\r\n        }\r\n      }\r\n    }\r\n\r\n    setZIndex(zIndex: string): void {\r\n      zIndex && (this.zIndex = zIndex); /* jshint ignore:line */\r\n      this.htmlEl.style.zIndex = this.zIndex;\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n      this.htmlEl.style.display = visible ? 'inline-block' : 'none';\r\n      this.visible = visible;\r\n    }\r\n  }\r\n\r\n  return new CustomMarkerOverlayView(htmlEl, position);\r\n}\r\n\r\n@Component({\r\n  selector: 'ngui-map > custom-marker',\r\n  inputs: INPUTS,\r\n  outputs: OUTPUTS,\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\n\r\nexport class CustomMarker implements OnInit, OnDestroy, OnChanges {\n  // declare INPUTS for AOT compiler\n  public position: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public animationChanged: any; // generated by ngc-pre-compiler.js\n  public click: any; // generated by ngc-pre-compiler.js\n  public clickableChanged: any; // generated by ngc-pre-compiler.js\n  public cursorChanged: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public draggableChanged: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public flatChanged: any; // generated by ngc-pre-compiler.js\n  public iconChanged: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public positionChanged: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n  public shapeChanged: any; // generated by ngc-pre-compiler.js\n  public titleChanged: any; // generated by ngc-pre-compiler.js\n  public visibleChanged: any; // generated by ngc-pre-compiler.js\n  public zindexChanged: any; // generated by ngc-pre-compiler.js\n  public map_click: any; // generated by ngc-pre-compiler.js\n  public map_mouseover: any; // generated by ngc-pre-compiler.js\n  public map_mouseout: any; // generated by ngc-pre-compiler.js\n  public map_mouseup: any; // generated by ngc-pre-compiler.js\n  public map_mousedown: any; // generated by ngc-pre-compiler.js\n  public map_drag: any; // generated by ngc-pre-compiler.js\n  public map_dragend: any; // generated by ngc-pre-compiler.js\n\r\n  @Output() initialized$: EventEmitter<any> = new EventEmitter();\r\n\r\n  public inputChanges$ = new Subject();\r\n\r\n  private el: HTMLElement;\r\n  private mapObject: any;\r\n\r\n  constructor(private nguiMapComponent: NguiMapComponent,\r\n              private elementRef: ElementRef,\r\n              private nguiMap: NguiMap) {\r\n    this.elementRef.nativeElement.style.display = 'none';\r\n    OUTPUTS.forEach(output => this[output] = new EventEmitter());\r\n  }\r\n\r\n  // Initialize this map object when map is ready\r\n  ngOnInit() {\r\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\r\n      this.initialize();\r\n    } else {\r\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.inputChanges$.next(changes);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.inputChanges$.complete();\r\n    this.nguiMapComponent.removeFromMapObjectGroup('CustomMarker', this.mapObject);\r\n\r\n    if (this.mapObject) {\r\n      this.nguiMap.clearObjectEvents(OUTPUTS, this, 'mapObject');\r\n    }\r\n  }\r\n\r\n  private initialize(): void {\r\n\r\n    this.el = this.elementRef.nativeElement;\r\n\r\n    this.mapObject = getCustomMarkerOverlayView(this.el, this['position']);\r\n    this.mapObject.setMap(this.nguiMapComponent.map);\r\n\r\n    // set google events listeners and emits to this outputs listeners\r\n    this.nguiMap.setObjectEvents(OUTPUTS, this, 'mapObject');\r\n\r\n    // update object when input changes\r\n    this.inputChanges$.pipe(\r\n      debounceTime(1000),\r\n      tap((changes: SimpleChanges) => this.nguiMap.updateGoogleObject(this.mapObject, changes)),\r\n    ).subscribe();\r\n\r\n    this.nguiMapComponent.addToMapObjectGroup('CustomMarker', this.mapObject);\r\n    this.initialized$.emit(this.mapObject);\r\n  }\r\n\r\n}\r\n",
    "import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  SimpleChanges,\n  ViewChild, ViewContainerRef,\n  Output, OnInit, OnChanges, OnDestroy\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime, tap } from 'rxjs/operators';\nimport { NguiMap } from '../services/ngui-map';\nimport { NguiMapComponent } from './ngui-map.component';\n\nconst INPUTS = [\n  'content', 'disableAutoPan', 'maxWidth', 'pixelOffset', 'position', 'zIndex', 'options'\n];\nconst OUTPUTS = [\n  'closeclick', 'content_changed', 'domready', 'position_changed', 'zindex_changed'\n];\n\n@Component({\n  selector: 'ngui-map > info-window',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n  template: `<div #template><ng-content></ng-content></div>`,\n})\nexport class InfoWindow implements OnInit, OnChanges, OnDestroy {\n  // declare INPUTS for AOT compiler\n  public content: any; // generated by ngc-pre-compiler.js\n  public disableAutoPan: any; // generated by ngc-pre-compiler.js\n  public maxWidth: any; // generated by ngc-pre-compiler.js\n  public pixelOffset: any; // generated by ngc-pre-compiler.js\n  public position: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public closeclick: any; // generated by ngc-pre-compiler.js\n  public content_changed: any; // generated by ngc-pre-compiler.js\n  public domready: any; // generated by ngc-pre-compiler.js\n  public position_changed: any; // generated by ngc-pre-compiler.js\n  public zindex_changed: any; // generated by ngc-pre-compiler.js\n\n  @Output() initialized$: EventEmitter<any> = new EventEmitter();\n\n  public infoWindow: google.maps.InfoWindow;\n  public objectOptions: google.maps.InfoWindowOptions = {};\n  public inputChanges$ = new Subject();\n  @ViewChild('template', {read: ViewContainerRef}) template: ViewContainerRef;\n\n  constructor(\n    private elementRef: ElementRef,\n    private nguiMap: NguiMap,\n    private nguiMapComponent: NguiMapComponent,\n  ) {\n    this.elementRef.nativeElement.style.display = 'none';\n    OUTPUTS.forEach(output => this[output] = new EventEmitter());\n  }\n\n  // Initialize this map object when map is ready\n  ngOnInit() {\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\n      this.initialize();\n    } else {\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.inputChanges$.next(changes);\n  }\n\n  // called when map is ready\n  initialize(): void {\n\n\n    this.objectOptions = this.nguiMapComponent.optionBuilder.googlizeAllInputs(INPUTS, this);\n    this.infoWindow = new google.maps.InfoWindow(this.objectOptions);\n    this.infoWindow['mapObjectName'] = 'InfoWindow';\n\n\n    // register infoWindow ids to NguiMap, so that it can be opened by id\n    if (this.elementRef.nativeElement.id) {\n      this.nguiMapComponent.infoWindows[this.elementRef.nativeElement.id] = this;\n    } else {\n      console.error('An InfoWindow must have an id. e.g. id=\"detail\"');\n    }\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(OUTPUTS, this, 'infoWindow');\n\n    // update object when input changes\n    this.inputChanges$.pipe(\n      debounceTime(1000),\n      tap((changes: SimpleChanges) => this.nguiMap.updateGoogleObject(this.infoWindow, changes))\n    ).subscribe();\n\n    this.nguiMapComponent.addToMapObjectGroup('InfoWindow', this.infoWindow);\n    this.initialized$.emit(this.infoWindow);\n  }\n\n  open(anchor: google.maps.MVCObject) {\n    // set content and open it\n    this.infoWindow.setContent(this.template.element.nativeElement);\n    this.infoWindow.open(this.nguiMapComponent.map, anchor);\n  }\n  close() {\n    // check if infoWindow exists, and closes it\n    if (this.infoWindow)\n      this.infoWindow.close();\n  }\n  ngOnDestroy() {\n    this.inputChanges$.complete();\n    if (this.infoWindow) {\n      this.nguiMap.clearObjectEvents(OUTPUTS, this, 'infoWindow');\n      delete this.infoWindow;\n    }\n  }\n}\n",
    "import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [];\nconst OUTPUTS = [ ];\n\n@Directive({\n  selector: 'ngui-map > bicycling-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class BicyclingLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n\n\n  // declare OUTPUTS for AOT compiler\n\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'BicyclingLayer', INPUTS, OUTPUTS);\n  }\n}",
    "import {\n  Component,\n  ElementRef,\n  ViewEncapsulation,\n  EventEmitter,\n  SimpleChanges,\n  Output,\n  NgZone,\n  AfterViewInit, AfterViewChecked, OnChanges, OnDestroy\n} from '@angular/core';\n\nimport { OptionBuilder } from '../services/option-builder';\nimport { NavigatorGeolocation } from '../services/navigator-geolocation';\nimport { GeoCoder } from '../services/geo-coder';\nimport { NguiMap } from '../services/ngui-map';\nimport { NgMapApiLoader } from '../services/api-loader';\nimport { InfoWindow } from './info-window';\nimport { Subject } from 'rxjs';\nimport { debounceTime, tap, first } from 'rxjs/operators';\nimport { toCamelCase } from '../services/util';\n\nconst INPUTS = [\n  'backgroundColor', 'center', 'disableDefaultUI', 'disableDoubleClickZoom', 'draggable', 'draggableCursor',\n  'draggingCursor', 'heading', 'keyboardShortcuts', 'mapMaker', 'mapTypeControl', 'mapTypeId', 'maxZoom', 'minZoom',\n  'noClear', 'overviewMapControl', 'panControl', 'panControlOptions', 'rotateControl', 'scaleControl', 'scrollwheel',\n  'streetView', 'styles', 'tilt', 'zoom', 'streetViewControl', 'zoomControl', 'zoomControlOptions', 'mapTypeControlOptions',\n  'overviewMapControlOptions', 'rotateControlOptions', 'scaleControlOptions', 'streetViewControlOptions', 'fullscreenControl', 'fullscreenControlOptions',\n  'options',\n  // ngui-map-specific inputs\n  'geoFallbackCenter'\n];\n\nconst OUTPUTS = [\n  'bounds_changed', 'center_changed', 'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'heading_changed', 'idle',\n  'maptypeid_changed', 'mousemove', 'mouseout', 'mouseover', 'projection_changed', 'resize', 'rightclick',\n  'tilesloaded', 'tile_changed', 'zoom_changed',\n  // to avoid DOM event conflicts\n  'mapClick', 'mapMouseover', 'mapMouseout', 'mapMousemove', 'mapDrag', 'mapDragend', 'mapDragstart'\n];\n\n@Component({\n  selector: 'ngui-map',\n  providers: [NguiMap, OptionBuilder, GeoCoder, NavigatorGeolocation],\n  styles: [`\n    ngui-map {display: block; height: 300px;}\n    .google-map {width: 100%; height: 100%}\n  `],\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"google-map\"></div>\n    <ng-content></ng-content>\n  `,\n})\nexport class NguiMapComponent implements OnChanges, OnDestroy, AfterViewInit, AfterViewChecked {\n  // declare INPUTS for AOT compiler\n  public backgroundColor: any; // generated by ngc-pre-compiler.js\n  public center: any; // generated by ngc-pre-compiler.js\n  public disableDefaultUI: any; // generated by ngc-pre-compiler.js\n  public disableDoubleClickZoom: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public draggableCursor: any; // generated by ngc-pre-compiler.js\n  public draggingCursor: any; // generated by ngc-pre-compiler.js\n  public heading: any; // generated by ngc-pre-compiler.js\n  public keyboardShortcuts: any; // generated by ngc-pre-compiler.js\n  public mapMaker: any; // generated by ngc-pre-compiler.js\n  public mapTypeControl: any; // generated by ngc-pre-compiler.js\n  public mapTypeId: any; // generated by ngc-pre-compiler.js\n  public maxZoom: any; // generated by ngc-pre-compiler.js\n  public minZoom: any; // generated by ngc-pre-compiler.js\n  public noClear: any; // generated by ngc-pre-compiler.js\n  public overviewMapControl: any; // generated by ngc-pre-compiler.js\n  public panControl: any; // generated by ngc-pre-compiler.js\n  public panControlOptions: any; // generated by ngc-pre-compiler.js\n  public rotateControl: any; // generated by ngc-pre-compiler.js\n  public scaleControl: any; // generated by ngc-pre-compiler.js\n  public scrollwheel: any; // generated by ngc-pre-compiler.js\n  public streetView: any; // generated by ngc-pre-compiler.js\n  public styles: any; // generated by ngc-pre-compiler.js\n  public tilt: any; // generated by ngc-pre-compiler.js\n  public zoom: any; // generated by ngc-pre-compiler.js\n  public streetViewControl: any; // generated by ngc-pre-compiler.js\n  public zoomControl: any; // generated by ngc-pre-compiler.js\n  public zoomControlOptions: any; // generated by ngc-pre-compiler.js\n  public mapTypeControlOptions: any; // generated by ngc-pre-compiler.js\n  public overviewMapControlOptions: any; // generated by ngc-pre-compiler.js\n  public rotateControlOptions: any; // generated by ngc-pre-compiler.js\n  public scaleControlOptions: any; // generated by ngc-pre-compiler.js\n  public streetViewControlOptions: any; // generated by ngc-pre-compiler.js\n  public fullscreenControl: any; // generated by ngc-pre-compiler.js\n  public fullscreenControlOptions: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n  public geoFallbackCenter: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public bounds_changed: any; // generated by ngc-pre-compiler.js\n  public center_changed: any; // generated by ngc-pre-compiler.js\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public heading_changed: any; // generated by ngc-pre-compiler.js\n  public idle: any; // generated by ngc-pre-compiler.js\n  public maptypeid_changed: any; // generated by ngc-pre-compiler.js\n  public mousemove: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public projection_changed: any; // generated by ngc-pre-compiler.js\n  public resize: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n  public tilesloaded: any; // generated by ngc-pre-compiler.js\n  public tile_changed: any; // generated by ngc-pre-compiler.js\n  public zoom_changed: any; // generated by ngc-pre-compiler.js\n  public mapClick: any; // generated by ngc-pre-compiler.js\n  public mapMouseover: any; // generated by ngc-pre-compiler.js\n  public mapMouseout: any; // generated by ngc-pre-compiler.js\n  public mapMousemove: any; // generated by ngc-pre-compiler.js\n  public mapDrag: any; // generated by ngc-pre-compiler.js\n  public mapDragend: any; // generated by ngc-pre-compiler.js\n  public mapDragstart: any; // generated by ngc-pre-compiler.js\n\n  @Output() public mapReady$: EventEmitter<any> = new EventEmitter();\n\n  public el: HTMLElement;\n  public map: google.maps.Map;\n  public mapOptions: google.maps.MapOptions = {};\n\n  public inputChanges$ = new Subject();\n\n  // map objects by group\n  public infoWindows: { [id: string]: InfoWindow } = { };\n\n  // map has been fully initialized\n  public mapIdledOnce: boolean = false;\n\n  private initializeMapAfterDisplayed = false;\n  private apiLoaderSub;\n\n  constructor(\n    public optionBuilder: OptionBuilder,\n    public elementRef: ElementRef,\n    public geolocation: NavigatorGeolocation,\n    public geoCoder: GeoCoder,\n    public nguiMap: NguiMap,\n    public apiLoader: NgMapApiLoader,\n    public zone: NgZone,\n  ) {\n    apiLoader.load();\n\n    // all outputs needs to be initialized,\n    // http://stackoverflow.com/questions/37765519/angular2-directive-cannot-read-property-subscribe-of-undefined-with-outputs\n    OUTPUTS.forEach(output => this[output] = new EventEmitter());\n  }\n\n  ngAfterViewInit() {\n    this.apiLoaderSub = this.apiLoader.api$\n      .pipe(first())\n      .subscribe(() => this.initializeMap());\n  }\n\n  ngAfterViewChecked() {\n      if (this.initializeMapAfterDisplayed && this.el && this.el.offsetWidth > 0) {\n        this.initializeMap();\n      }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.inputChanges$.next(changes);\n  }\n\n  initializeMap(): void {\n    this.el = this.elementRef.nativeElement.querySelector('.google-map');\n    if (this.el && this.el.offsetWidth === 0) {\n        this.initializeMapAfterDisplayed = true;\n        return;\n    }\n\n    this.initializeMapAfterDisplayed = false;\n    this.mapOptions = this.optionBuilder.googlizeAllInputs(INPUTS, this);\n\n\n    this.mapOptions.zoom = this.mapOptions.zoom || 15;\n    typeof this.mapOptions.center === 'string' && (delete this.mapOptions.center);\n\n    this.zone.runOutsideAngular(() => {\n      this.map = new google.maps.Map(this.el, this.mapOptions);\n      this.map['mapObjectName'] = 'NguiMapComponent';\n\n      if (!this.mapOptions.center) { // if center is not given as lat/lng\n        this.setCenter();\n      }\n\n      // set google events listeners and emits to this outputs listeners\n      this.nguiMap.setObjectEvents(OUTPUTS, this, 'map');\n\n      this.map.addListener('idle', () => {\n        if (!this.mapIdledOnce) {\n          this.mapIdledOnce = true;\n          setTimeout(() => { // Why????, subsribe and emit must not be in the same cycle???\n            this.mapReady$.emit(this.map);\n          });\n        }\n      });\n\n      // update map when input changes\n      this.inputChanges$.pipe(\n        debounceTime(1000),\n        tap((changes: SimpleChanges) => this.nguiMap.updateGoogleObject(this.map, changes)),\n      ).subscribe();\n\n      if (typeof window !== 'undefined' && (<any>window)['nguiMapRef']) {\n        // expose map object for test and debugging on (<any>window)\n        (<any>window)['nguiMapRef'].map = this.map;\n      }\n    });\n  }\n\n  setCenter(): void {\n    if (!this['center']) { // center is not from user. Thus, we set the current location\n      this.geolocation.getCurrentPosition().subscribe(\n        position => {\n\n          let latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n          this.map.setCenter(latLng);\n        },\n        error => {\n          console.error('ngui-map: Error finding the current position');\n          this.map.setCenter(this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }\n      );\n    }\n    else if (typeof this['center'] === 'string') {\n      this.geoCoder.geocode({address: this['center']}).subscribe(\n        results => {\n\n          this.map.setCenter(results[0].geometry.location);\n        },\n        error => {\n          this.map.setCenter(this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        });\n    }\n  }\n\n  openInfoWindow(id: string, anchor: google.maps.MVCObject) {\n    this.infoWindows[id].open(anchor);\n  }\n\n  closeInfoWindow(id: string) {\n    // if infoWindow for id exists, close the infoWindow\n    if (this.infoWindows[id])\n      this.infoWindows[id].close();\n  }\n\n  ngOnDestroy() {\n    this.inputChanges$.complete();\n    if (this.el && !this.initializeMapAfterDisplayed) {\n      this.nguiMap.clearObjectEvents(OUTPUTS, this, 'map');\n    }\n    if (this.apiLoaderSub) {\n      this.apiLoaderSub.unsubscribe();\n    }\n  }\n\n  // map.markers, map.circles, map.heatmapLayers.. etc\n  addToMapObjectGroup(mapObjectName: string, mapObject: any) {\n    let groupName = toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n    this.map[groupName] = this.map[groupName] || [];\n    this.map[groupName].push(mapObject);\n  }\n\n  removeFromMapObjectGroup(mapObjectName: string, mapObject: any) {\n    let groupName = toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n    if (this.map && this.map[groupName]) {\n      let index = this.map[groupName].indexOf(mapObject);\n\n      (index > -1) && this.map[groupName].splice(index, 1);\n    }\n  }\n}\n",
    "import { Injectable, SimpleChanges, NgZone } from '@angular/core';\nimport { OptionBuilder } from './option-builder';\nimport { GeoCoder } from './geo-coder';\n\n/**\n * collection of map instance-related properties and methods\n */\n@Injectable()\nexport class NguiMap {\n\n  constructor(\n    private geoCoder: GeoCoder,\n    private optionBuilder: OptionBuilder,\n    private zone: NgZone,\n  ) {}\n\n  setObjectEvents(definedEvents: string[], thisObj: any, prefix: string) {\n    definedEvents.forEach(definedEvent => {\n      const eventName = this.getEventName(definedEvent),\n        zone = this.zone;\n      zone.runOutsideAngular(() => {\n        thisObj[prefix].addListener(eventName, function(event: google.maps.event) {\n          let param: any = event ? event : {};\n          param.target = this;\n          zone.run(() => thisObj[definedEvent].emit(param));\n        });\n      });\n    });\n  }\n\n  clearObjectEvents(definedEvents: string[], thisObj: any, prefix: string) {\n    definedEvents.forEach(definedEvent => {\n      const eventName = this.getEventName(definedEvent);\n      this.zone.runOutsideAngular(() => {\n        if (thisObj[prefix]) {\n          google.maps.event.clearListeners(thisObj[prefix], eventName);\n        }\n      });\n    });\n\n    if (thisObj[prefix]) {\n      if (thisObj[prefix].setMap) {\n        thisObj[prefix].setMap(null);\n      }\n\n      delete thisObj[prefix].nguiMapComponent;\n      delete thisObj[prefix];\n    }\n\n  }\n\n  updateGoogleObject = (object: any, changes: SimpleChanges)  => {\n    let val: any, currentValue: any, setMethodName: string;\n    if (object) {\n      for (let key in changes) {\n        setMethodName = `set${key.replace(/^[a-z]/, x => x.toUpperCase()) }`;\n        currentValue = changes[key].currentValue;\n        if (['position', 'center'].indexOf(key) !== -1 && typeof currentValue === 'string') {\n          // To preserve setMethod name in Observable callback, wrap it as a function, then execute\n          ((setMethodName) => {\n            this.geoCoder.geocode({address: currentValue}).subscribe(results => {\n              if (typeof object[setMethodName] === 'function') {\n                object[setMethodName](results[0].geometry.location);\n              } else {\n                console.error(\n                  'Not all options are dynamically updatable according to Googles Maps API V3 documentation.\\n' +\n                  'Please check Google Maps API documentation, and use \"setOptions\" instead.'\n                );\n              }\n            });\n          })(setMethodName);\n        } else {\n          val =  this.optionBuilder.googlize(currentValue);\n          if (typeof object[setMethodName] === 'function') {\n            object[setMethodName](val);\n          } else {\n            console.error(\n              'Not all options are dynamically updatable according to Googles Maps API V3 documentation.\\n' +\n              'Please check Google Maps API documentation, and use \"setOptions\" instead.'\n            );\n          }\n        }\n      }\n    }\n  }\n\n  private getEventName(definedEvent) {\n    return definedEvent\n      .replace(/([A-Z])/g, ($1) => `_${$1.toLowerCase()}`) // positionChanged -> position_changed\n      .replace(/^map_/, '');                               // map_click -> click  to avoid DOM conflicts\n  }\n}\n",
    "import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { NgMapApiLoader } from './api-loader';\n\n/**\n *   Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)\n *   service for Google Geocoder service\n */\n\n@Injectable()\nexport class GeoCoder implements OnDestroy {\n  private apiLoaderSubs = [];\n  constructor(private apiLoader: NgMapApiLoader) {}\n\n  geocode(options: google.maps.GeocoderRequest) {\n    return new Observable((responseObserver: Observer<any>) => {\n        this.apiLoaderSubs.push(this.apiLoader.api$\n          .subscribe(() => this.requestGeocode(options, responseObserver)));\n    });\n  }\n\n  ngOnDestroy() {\n    this.apiLoaderSubs.map(sub => sub.unsubscribe());\n  }\n\n  private requestGeocode(options, observer) {\n    const geocoder = new google.maps.Geocoder();\n    geocoder.geocode(options, function (results, status) {\n      if (status === google.maps.GeocoderStatus.OK) {\n        observer.next(results);\n        observer.complete();\n      } else {\n        observer.error(results);\n      }\n    });\n  }\n}\n",
    "import { Injectable, Inject, Optional, NgZone, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { NG_MAP_CONFIG_TOKEN } from './config';\nimport { isMapsApiLoaded } from './util';\n\nexport abstract class NgMapApiLoader implements OnDestroy {\n  api$: ReplaySubject<any> = new ReplaySubject(1);\n\n  abstract load();\n\n  constructor(protected config) {\n    this.config = this.config || {apiUrl: 'https://maps.google.com/maps/api/js'};\n  }\n\n  ngOnDestroy() {\n    this.api$.complete();\n  }\n}\n\n@Injectable()\nexport class NgMapAsyncCallbackApiLoader extends NgMapApiLoader {\n  constructor(protected zone: NgZone, @Optional() @Inject(NG_MAP_CONFIG_TOKEN) config) {\n    super(config);\n  }\n\n  load() {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    if (isMapsApiLoaded()) {\n      this.api$.next(google.maps);\n    } else if (!document.querySelector('#ngui-map-api')) {\n      (<any>window)['nguiMapRef'] = (<any>window)['nguiMapRef'] || [];\n      (<any>window)['nguiMapRef'].push({ zone: this.zone, componentFn: () => this.api$.next(google.maps)});\n      this.addGoogleMapsApi();\n    }\n  }\n\n  private addGoogleMapsApi() {\n    (<any>window)['initNguiMap'] = (<any>window)['initNguiMap'] || function() {\n      (<any>window)['nguiMapRef'].forEach(nguiMapRef => {\n        nguiMapRef.zone.run(function() { nguiMapRef.componentFn(); });\n      });\n      (<any>window)['nguiMapRef'].splice(0, (<any>window)['nguiMapRef'].length);\n    };\n\n    let script = document.createElement( 'script' );\n    script.id = 'ngui-map-api';\n\n    // script.src = \"https://maps.google.com/maps/api/js?callback=initNguiMap\";\n    let apiUrl = this.config.apiUrl ;\n    apiUrl += apiUrl.indexOf('?') !== -1 ? '&' : '?';\n    script.src = apiUrl + 'callback=initNguiMap';\n    document.querySelector('body').appendChild(script);\n  }\n}\n\n@Injectable()\nexport class NgMapAsyncApiLoader extends NgMapApiLoader {\n  constructor(@Optional() @Inject(NG_MAP_CONFIG_TOKEN) config) {\n    super(config);\n  }\n\n  load() {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    if (isMapsApiLoaded()) {\n      this.api$.next(google.maps);\n    } else if (!document.querySelector('#ngui-map-api')) {\n      let script = document.createElement('script');\n      script.id = 'ngui-map-api';\n\n      script.async = true;\n      script.onload = () => this.api$.next(google.maps);\n      script.src = this.config.apiUrl;\n      document.querySelector('body').appendChild(script);\n    }\n  }\n}\n",
    "import { InjectionToken } from '@angular/core';\n\nexport const NG_MAP_CONFIG_TOKEN = new InjectionToken<ConfigOption>('NG_MAP_CONFIG_TOKEN');\nexport interface ConfigOption {\n  apiUrl?: string;\n}\n",
    "import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { IJson } from './util';\n\n/**\n *  service for navigator.geolocation methods\n */\n@Injectable()\nexport class NavigatorGeolocation {\n\n  getCurrentPosition(geoLocationOptions?: IJson): Observable<any> {\n    geoLocationOptions = geoLocationOptions || { timeout: 5000 };\n\n    return new Observable<any>((responseObserver: Observer<any>) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            responseObserver.next(position);\n            responseObserver.complete();\n          },\n          (evt) => responseObserver.error(evt),\n          geoLocationOptions\n        );\n      } else {\n        responseObserver.error('Browser Geolocation service failed.');\n      }\n    });\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { getJSON, IJson } from './util';\n\n/**\n * change any object to google object options\n * e.g. [1,2] -> new google.maps.LatLng(1,2);\n */\n@Injectable()\nexport class OptionBuilder {\n\n  googlizeAllInputs(definedInputs: string[], userInputs: any) {\n    let options: any = {};\n\n    // if options given from user, only take options and ignore other inputs\n    if (userInputs.options) {\n\n      options = userInputs.options;\n      if (!this.onlyOptionsGiven(definedInputs, userInputs)) {\n        console.error('when \"options\" are used, other options are ignored');\n      }\n    } else { // if options not given, process all user inputs\n      definedInputs.forEach(input => {\n        if (userInputs[input] !== undefined)  {\n          options[input] = this.googlize(userInputs[input], {key: input});\n        }\n      });\n    }\n    return options;\n  }\n\n  googlizeMultiple(inputs: any[], options?: IJson): any {\n    options =  options || {};\n    for (let key in inputs) {\n      let val = inputs[key];\n      // (non-strings are fully converted)\n      if (typeof val !== 'string') {\n        options[key] = val;\n      } // sometimes '0' needed to stay as it is\n      else if (!(options['doNotConverStringToNumber'] && val.match(/^[0-9]+$/))) {\n        options[key] = this.googlize(val, {key: key});\n      }\n    } // for(var key in attrs)\n    return options;\n  }\n\n  googlize(input: any, options?: IJson): any {\n    options = options || {};\n    let output: any = input;\n    if (typeof input === 'string') { // convert string to a google object\n      if (input === 'false') {\n        output = false;\n      } else if (input === '0') {\n        output = 0;\n      } else {\n        output =\n          // -> googlize -> getJsonParsed -> googlizeMultiple -> googlize until all elements are parsed\n          this.getJSONParsed(input, options)\n\n          /* Foo.Bar(...) -> new google.maps.Foo.Bar(...) */\n          || this.getAnyMapObject(input)\n\n          /*  MapTypeID.HYBRID -> new google.maps.MapTypeID.HYBRID */\n          || this.getAnyMapConstant(input, options)\n\n          /*  2016-06-20 -> new Date('2016-06-20') */\n          || this.getDateObject(input)\n\n          || input;\n      }\n    }\n\n    if (options['key']) {\n      let key: string = <string>options['key'];\n      if (output instanceof Array) { // e.g., [1, 2]\n        if (key === 'bounds') {\n          output = new google.maps.LatLngBounds(output[0], output[1]);\n        } else if (key === 'icons') {\n          output = this.getMapIcons(output);\n        } else if (key === 'position' || key.match(/^geoFallback/) ) {\n          output = this.getLatLng(output);\n        }\n      } else if (output instanceof Object) {\n        if (key === 'icon') {\n          output = this.getMarkerIcon(output);\n        }\n        else if (key.match(/ControlOptions$/)) {\n          output = this.getMapControlOption(output);\n        }\n      }\n    }\n\n    // delete keys only for processing, not used by google\n    delete output['doNotConverStringToNumber'];\n    delete output['key'];\n\n    return output;\n  }\n\n  private getLatLng(input: any): google.maps.LatLng | Array<google.maps.LatLng> {\n    let output: google.maps.LatLng | Array<google.maps.LatLng>;\n    if (input[0].constructor === Array) { // [[1,2],[3,4]]\n      output = (<any[]>input).map((el: number[]) => new google.maps.LatLng(el[0], el[1]));\n    } else if (!isNaN(parseFloat(input[0])) && isFinite(input[0])) {\n      output = new google.maps.LatLng(input[0], input[1]);\n    }\n    return output;\n  }\n\n  private getJSONParsed(input: any, options: IJson): IJson {\n    let output: any;\n    try {\n      output = getJSON(input);\n      if (output instanceof Array) {\n        // [{a:1}] : not lat/lng ones\n\n        if (output[0].constructor !== Object) { // [[1,2],[3,4]] or [1,2]\n          output = this.getLatLng(output);\n        }\n      }\n      // JSON is an object (not array or null)\n      else if (output === Object(output)) {\n        // check for nested hashes and convert to Google API options\n        let newOptions = options;\n        newOptions['doNotConverStringToNumber'] = true;\n        output = this.googlizeMultiple(output, newOptions);\n      }\n    } catch (e) {\n    }\n    return output;\n  }\n\n  private getAnyMapObject(input: string): any {\n    let output: any;\n    if (input.match(/^[A-Z][a-zA-Z0-9]+\\(.*\\)$/)) {\n      try {\n        output = Function(`return new google.maps.${input};`)();\n      } catch (e) {}\n    }\n    return output;\n  }\n\n  private getAnyMapConstant(input: string, options: IJson): any {\n    let output: any;\n\n    if (input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/)) { // e.g. MapTypeID.HYBRID\n      try {\n        let matches = input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/);\n        output = google.maps[matches[1]][matches[2]];\n      } catch (e) {}\n    } else if (input.match(/^[A-Z]+$/)) { // e.g. HYBRID\n      try {\n        let capitalizedKey = (<string>options['key']).charAt(0).toUpperCase() +\n          (<string>options['key']).slice(1);\n        output = google.maps[capitalizedKey][input];\n      } catch (e) {}\n    }\n    return output;\n  }\n\n  /**\n   * streetviewControl, panControl, etc, not a general control\n   */\n  private getMapControlOption(controlOptions: IJson): IJson {\n    let newControlOptions: IJson = controlOptions;\n\n    for (let key in newControlOptions) { // assign the right values\n      if (newControlOptions[key]) {\n        let value = newControlOptions[key];\n\n        if (typeof value === 'string') {\n          value = (<string>value).toUpperCase();\n        }\n        else if (key === 'mapTypeIds') {\n          value = (<any[]>value).map(function (str) {\n            if (str.match(/^[A-Z]+$/)) { // if constant\n              return google.maps.MapTypeId[str.toUpperCase()];\n            } else { // else, custom map-type\n              return str;\n            }\n          });\n        }\n\n        if (key === 'style') {\n          let objName = key.replace(/Options$/, '') + 'Style';\n          newControlOptions[key] = google.maps[objName][<any>value];\n        }\n        else if (key === 'position') {\n          newControlOptions[key] = google.maps.ControlPosition[<any>value];\n        }\n        else {\n          newControlOptions[key] = value;\n        }\n      }\n    }\n\n    return newControlOptions;\n  }\n\n  private getDateObject(input: string): Date {\n    let output: Date;\n\n    if (input.match(/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*)?)([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/)) {\n      try {\n        output = new Date(input);\n      } catch (e) {}\n    }\n    return output;\n  }\n\n  private getMapIcons(input: any[]): any[] {\n    return input.map(el => {\n      if (el.icon.path.match(/^[A-Z_]+$/)) {\n        el.icon.path = google.maps.SymbolPath[el.icon.path];\n      }\n      return el;\n    });\n  }\n\n  private getMarkerIcon(input: any): any {\n    let output = input;\n\n    if (('' + output.path).match(/^[A-Z_]+$/)) {\n      output.path = google.maps.SymbolPath[output.path];\n    }\n\n    for (let key in output) {\n      let arr = output[key];\n      if (key === 'anchor' || key === 'origin' || key === 'labelOrigin') {\n        output[key] = new google.maps.Point(arr[0], arr[1]);\n    } else if (key === 'size' || key === 'scaledSize') {\n        output[key] = new google.maps.Size(arr[0], arr[1]);\n      }\n    }\n\n    return output;\n  }\n\n  private onlyOptionsGiven(definedInputs: string[], userInputs: any): boolean {\n    for (let i = 0; i < definedInputs.length; i++) {\n      let input = definedInputs[i];\n      if (input !== 'options' && typeof userInputs[input] !== 'undefined') {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n",
    "import {EventEmitter, SimpleChanges, Output, OnInit, OnChanges, OnDestroy} from '@angular/core';\n\nimport { OptionBuilder } from '../services/option-builder';\nimport { NguiMap } from '../services/ngui-map';\nimport { NguiMapComponent } from '../components/ngui-map.component';\nimport { missingLibraryError } from '../services/util';\nexport abstract class BaseMapDirective implements OnInit, OnChanges, OnDestroy {\n  // this should be redefined on each childr directive\n  @Output() initialized$: EventEmitter<any> = new EventEmitter();\n\n  public mapObject: any; // e.g. google.maps.Marker\n  public objectOptions: any; // e.g. google.maps.MarkerOptions\n\n  public nguiMap: NguiMap;\n  public optionBuilder: OptionBuilder;\n  public libraryName: string;\n  protected _subscriptions = [];\n\n  constructor(\n    protected nguiMapComponent: NguiMapComponent,\n    public    mapObjectName: string,\n    protected inputs: string[],\n    protected outputs: string[]\n  ) {\n    this.nguiMap = this.nguiMapComponent['nguiMap'];\n    this.optionBuilder = this.nguiMapComponent['optionBuilder'];\n    // all outputs must be initialized\n    this.outputs.forEach(output => this[output] = new EventEmitter());\n    this.mapObjectName = mapObjectName;\n  }\n\n  // Initialize this map object when map is ready\n  ngOnInit() {\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\n      this.initialize();\n    } else {\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n    }\n  }\n\n  // only called when map is ready\n  initialize(): void {\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\n\n    // will be set after geocoded\n    typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n    typeof this.objectOptions.center === 'string' && (delete this.objectOptions.center);\n\n    // noinspection TypeScriptUnresolvedFunction\n    if (this.libraryName) {\n      if (!google.maps[this.libraryName]) {\n        throw missingLibraryError(this.mapObjectName, this.libraryName);\n      }\n      this.mapObject = new google.maps[this.libraryName][this.mapObjectName](this.objectOptions);\n    } else {\n      this.mapObject = new google.maps[this.mapObjectName](this.objectOptions);\n    }\n    this.mapObject.setMap(this.nguiMapComponent.map);\n    this.mapObject['mapObjectName'] = this.mapObjectName;\n    this.mapObject['nguiMapComponent'] = this.nguiMapComponent;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\n\n  // When input is changed, update object too.\n  // e.g., when map center is changed by user, update center on the map\n  ngOnChanges(changes: SimpleChanges) {\n\n    this.nguiMap.updateGoogleObject(this.mapObject, changes);\n  }\n\n  // When destroyed, remove event listener, and delete this object to prevent memory leak\n  ngOnDestroy() {\n    this._subscriptions.map(subscription => subscription.unsubscribe());\n    this.nguiMapComponent.removeFromMapObjectGroup(this.mapObjectName, this.mapObject);\n\n    if (this.mapObject) {\n      this.nguiMap.clearObjectEvents(this.outputs, this, 'mapObject');\n    }\n  }\n}\n",
    "/**\n * return json string from json-like string\n */\nexport function jsonize(str: string): string {\n  try {       // if parsable already, return as it is\n    JSON.parse(str);\n    return str;\n  } catch (e) { // if not parsable, change little\n    return str\n      .replace(/([\\$\\w]+)\\s*:/g, // wrap keys without double quote\n        function(_: any, $1: any) {\n          return '\"' + $1 + '\":';\n        }\n      )\n      .replace(/'([^']+)'/g,   // replacing single quote to double quote\n        function(_: any, $1: any) {\n          return '\"' + $1 + '\"';\n        }\n      );\n  }\n}\n\n/**\n * Returns string to an object by using JSON.parse()\n */\nexport function getJSON(input: any): any {\n  if (typeof input === 'string') {\n    const re = /^[\\+\\-]?[0-9\\.]+,[ ]*\\ ?[\\+\\-]?[0-9\\.]+$/; // lat,lng\n    if (input.match(re)) {\n      input = '[' + input + ']';\n    }\n    return JSON.parse(jsonize(input));\n  } else {\n    return input;\n  }\n}\n\n/**\n * json type definition\n */\n/* tslint:disable */\n//interface IJsonArray extends Array<string|number|boolean|Date|IJson|IJsonArray> { }\nexport interface IJson {\n  //[x: string]: string|number|boolean|Date|IJson|IJsonArray;\n  [x: string]: string|number|boolean|Date|IJson|Array<string|number|boolean|Date|IJson>;\n}\n/* tslint:enable */\n\n\n/**\n * Returns camel-cased from string 'Foo Bar' to 'fooBar'\n */\nexport function toCamelCase(str: string): string {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(letter, index) {\n    return index === 0 ? letter.toLowerCase() : letter.toUpperCase();\n  }).replace(/\\s+/g, '');\n}\n\nexport function isMapsApiLoaded() {\n  return typeof google === 'object' && typeof google.maps === 'object';\n}\n\nexport function missingLibraryError(component, libName) {\n  return Error(`${component}: library '${libName}' is missing, please ensure to include it in a 'libraries' parameter.\n    Example:\n      NguiMapModule.forRoot({\n        apiUrl: 'https://maps.googleapis.com/maps/api/js?libraries=${libName}'\n      })\n  `);\n}"
  ],
  "names": [
    "OUTPUTS",
    "INPUTS"
  ],
  "mappings": "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"
}
