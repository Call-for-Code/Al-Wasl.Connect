import { ChangeDetectorRef, OnInit, TemplateRef } from '@angular/core';
import { INgxLoadingConfig } from './ngx-loading-config';
import { NgxLoadingService } from './ngx-loading.service';
import * as ɵngcc0 from '@angular/core';
export declare class NgxLoadingComponent implements OnInit {
    private LoadingService;
    private changeDetectorRef;
    show: boolean;
    config: INgxLoadingConfig;
    template: TemplateRef<any>;
    private defaultConfig;
    ngxLoadingAnimationTypes: {
        chasingDots: string;
        circle: string;
        circleSwish: string;
        cubeGrid: string;
        doubleBounce: string;
        none: string;
        pulse: string;
        rectangleBounce: string;
        rotatingPlane: string;
        threeBounce: string;
        wanderingCubes: string;
    };
    constructor(LoadingService: NgxLoadingService, changeDetectorRef: ChangeDetectorRef);
    ngOnInit(): void;
    private setupConfig;
    setShow(show: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxLoadingComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxLoadingComponent, "ngx-loading", never, {
    "config": "config";
    "show": "show";
    "template": "template";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWxvYWRpbmcuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbIm5neC1sb2FkaW5nLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBPbkluaXQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IElOZ3hMb2FkaW5nQ29uZmlnIH0gZnJvbSAnLi9uZ3gtbG9hZGluZy1jb25maWcnO1xyXG5pbXBvcnQgeyBOZ3hMb2FkaW5nU2VydmljZSB9IGZyb20gJy4vbmd4LWxvYWRpbmcuc2VydmljZSc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5neExvYWRpbmdDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gICAgcHJpdmF0ZSBMb2FkaW5nU2VydmljZTtcclxuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3JSZWY7XHJcbiAgICBzaG93OiBib29sZWFuO1xyXG4gICAgY29uZmlnOiBJTmd4TG9hZGluZ0NvbmZpZztcclxuICAgIHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgcHJpdmF0ZSBkZWZhdWx0Q29uZmlnO1xyXG4gICAgbmd4TG9hZGluZ0FuaW1hdGlvblR5cGVzOiB7XHJcbiAgICAgICAgY2hhc2luZ0RvdHM6IHN0cmluZztcclxuICAgICAgICBjaXJjbGU6IHN0cmluZztcclxuICAgICAgICBjaXJjbGVTd2lzaDogc3RyaW5nO1xyXG4gICAgICAgIGN1YmVHcmlkOiBzdHJpbmc7XHJcbiAgICAgICAgZG91YmxlQm91bmNlOiBzdHJpbmc7XHJcbiAgICAgICAgbm9uZTogc3RyaW5nO1xyXG4gICAgICAgIHB1bHNlOiBzdHJpbmc7XHJcbiAgICAgICAgcmVjdGFuZ2xlQm91bmNlOiBzdHJpbmc7XHJcbiAgICAgICAgcm90YXRpbmdQbGFuZTogc3RyaW5nO1xyXG4gICAgICAgIHRocmVlQm91bmNlOiBzdHJpbmc7XHJcbiAgICAgICAgd2FuZGVyaW5nQ3ViZXM6IHN0cmluZztcclxuICAgIH07XHJcbiAgICBjb25zdHJ1Y3RvcihMb2FkaW5nU2VydmljZTogTmd4TG9hZGluZ1NlcnZpY2UsIGNoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZik7XHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xyXG4gICAgcHJpdmF0ZSBzZXR1cENvbmZpZztcclxuICAgIHNldFNob3coc2hvdzogYm9vbGVhbik6IHZvaWQ7XHJcbn1cclxuIl19